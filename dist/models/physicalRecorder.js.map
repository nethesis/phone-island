{"version":3,"file":"physicalRecorder.js","sources":["../../src/models/physicalRecorder.ts"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport { RefObject } from 'react'\nimport { createModel } from '@rematch/core'\nimport type { RootModel } from '.'\n\nconst defaultState: PhysicalRecorderTypes = {\n  recording: false,\n  visibleContainerRef: null,\n  recorded: false,\n  currentTime: '00:00:00',\n  tempFileName: '',\n  startTime: '',\n  conversationId: '',\n  ownerExtension: '',\n  recordingTempVariable: false,\n}\n\nexport const physicalRecorder = createModel<RootModel>()({\n  state: defaultState,\n  reducers: {\n    setRecording: (state, payload: boolean) => {\n      state.recording = payload\n      return state\n    },\n    setVisibleContainerRef: (state, payload: RefObject<HTMLDivElement>) => {\n      state.visibleContainerRef = payload\n      return state\n    },\n    setRecorded: (state, payload: boolean) => {\n      state.recorded = payload\n      return state\n    },\n    setCurrentTime: (state, payload: string) => {\n      state.currentTime = payload\n      return state\n    },\n    resetRecorded: (state, _: void) => {\n      return {\n        ...defaultState,\n        visibleContainerRef: state.visibleContainerRef,\n      }\n    },\n    setTempFilename: (state, payload: string) => {\n      state.tempFileName = payload\n      return state\n    },\n    setStartTime: (state, payload: string) => {\n      state.startTime = payload\n      return state\n    },\n    setCallRecordingInformations: (state, payload: any) => {\n      state.conversationId = payload.recordingCallInformation.conversationId\n      state.ownerExtension = payload.recordingCallInformation.endpointId\n      return state\n    },\n    setRecordingTempVariable: (state, payload: boolean) => {\n      state.recordingTempVariable = payload\n      return state\n    },\n    reset: () => {\n      return defaultState\n    },\n  },\n})\n\ninterface PhysicalRecorderTypes {\n  recording: boolean\n  visibleContainerRef: RefObject<HTMLDivElement> | null\n  recorded: boolean\n  currentTime: string\n  tempFileName: string\n  startTime: string\n  ownerExtension?: any\n  conversationId?: string\n  recordingTempVariable: boolean\n}\n"],"names":["defaultState","recording","visibleContainerRef","recorded","currentTime","tempFileName","startTime","conversationId","ownerExtension","recordingTempVariable","physicalRecorder","createModel","state","reducers","setRecording","payload","setVisibleContainerRef","setRecorded","setCurrentTime","resetRecorded","_","__assign","setTempFilename","setStartTime","setCallRecordingInformations","recordingCallInformation","endpointId","setRecordingTempVariable","reset"],"mappings":"oLAOMA,EAAsC,CAC1CC,WAAW,EACXC,oBAAqB,KACrBC,UAAU,EACVC,YAAa,WACbC,aAAc,GACdC,UAAW,GACXC,eAAgB,GAChBC,eAAgB,GAChBC,uBAAuB,GAGZC,EAAmBC,EAAWA,aAAXA,CAAyB,CACvDC,MAAOZ,EACPa,SAAU,CACRC,aAAc,SAACF,EAAOG,GAEpB,OADAH,EAAMX,UAAYc,EACXH,CACR,EACDI,uBAAwB,SAACJ,EAAOG,GAE9B,OADAH,EAAMV,oBAAsBa,EACrBH,CACR,EACDK,YAAa,SAACL,EAAOG,GAEnB,OADAH,EAAMT,SAAWY,EACVH,CACR,EACDM,eAAgB,SAACN,EAAOG,GAEtB,OADAH,EAAMR,YAAcW,EACbH,CACR,EACDO,cAAe,SAACP,EAAOQ,GACrB,OAAAC,EAAAA,SAAAA,WAAA,CAAA,EACKrB,GACH,CAAAE,oBAAqBU,EAAMV,qBAE9B,EACDoB,gBAAiB,SAACV,EAAOG,GAEvB,OADAH,EAAMP,aAAeU,EACdH,CACR,EACDW,aAAc,SAACX,EAAOG,GAEpB,OADAH,EAAMN,UAAYS,EACXH,CACR,EACDY,6BAA8B,SAACZ,EAAOG,GAGpC,OAFAH,EAAML,eAAiBQ,EAAQU,yBAAyBlB,eACxDK,EAAMJ,eAAiBO,EAAQU,yBAAyBC,WACjDd,CACR,EACDe,yBAA0B,SAACf,EAAOG,GAEhC,OADAH,EAAMH,sBAAwBM,EACvBH,CACR,EACDgB,MAAO,WACL,OAAO5B,CACR"}