{"version":3,"file":"fetchDefaults.js","sources":["../../src/models/fetchDefaults.ts"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport { createModel } from '@rematch/core'\nimport type { RootModel } from '.'\n\nconst defaultState: FetchTypes = {\n  baseURL: '',\n  headers: {\n    Accept: 'application/json, text/plain, */*',\n    'Content-Type': 'application/json;charset=UTF-8',\n  },\n  fetchReady: false,\n}\n\nexport const fetchDefaults = createModel<RootModel>()({\n  state: defaultState,\n  reducers: {\n    updateFetchBaseURL: (state, payload: string) => {\n      return {\n        ...state,\n        baseURL: payload,\n      }\n    },\n    updateFetchHeaders: (state, payload: HeadersTypes) => {\n      return {\n        ...state,\n        headers: {\n          ...state.headers,\n          ...payload,\n        },\n      }\n    },\n    setFetchReady: (state) => {\n      return {\n        ...state,\n        fetchReady: true,\n      }\n    },\n  },\n})\n\ninterface HeadersTypes {\n  [key: string]: string\n}\n\ninterface FetchTypes {\n  baseURL?: string\n  headers?: HeadersTypes\n  fetchReady?: boolean\n}\n"],"names":["fetchDefaults","createModel","state","baseURL","headers","Accept","fetchReady","reducers","updateFetchBaseURL","payload","__assign","updateFetchHeaders","setFetchReady"],"mappings":"wHAeaA,4DAA2BC,aAAXA,CAAyB,CACpDC,MAV+B,CAC/BC,QAAS,GACTC,QAAS,CACPC,OAAQ,oCACR,eAAgB,kCAElBC,YAAY,GAKZC,SAAU,CACRC,mBAAoB,SAACN,EAAOO,GAC1B,OAAAC,EAAAA,SAAAA,EAAAA,SAAA,GACKR,GAAK,CACRC,QAASM,GAEZ,EACDE,mBAAoB,SAACT,EAAOO,GAC1B,OACKC,EAAAA,SAAAA,EAAAA,SAAA,CAAA,EAAAR,IACHE,QAAOM,EAAAA,SAAAA,EAAAA,SAAA,CAAA,EACFR,EAAME,SACNK,IAGR,EACDG,cAAe,SAACV,GACd,OAAAQ,EAAAA,SAAAA,EAAAA,SAAA,GACKR,GAAK,CACRI,YAAY,GAEf"}