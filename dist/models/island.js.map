{"version":3,"file":"island.js","sources":["../../src/models/island.ts"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport { createModel } from '@rematch/core'\nimport type { RootModel } from '.'\nimport { eventDispatch } from '../utils'\n\nconst defaultState: IslandTypes = {\n  view: null,\n  isOpen: true,\n  actionsExpanded: false,\n  startPosition: {\n    x: 0,\n    y: 0,\n  },\n  inputOutputOpened: false,\n  settingsView: 'main',\n  contactListView: 'main',\n  sideViewIsVisible: false,\n  isConferenceList: false,\n  previousView: null,\n  avoidToShow: false,\n  isFullScreen: false,\n  isFromStreaming: false,\n  isExtraLarge: false,\n  urlOpened: false,\n}\n\nexport const island = createModel<RootModel>()({\n  state: defaultState,\n  reducers: {\n    setIslandView: (state, newView: IslandViewType | null) => {\n      if (newView === state?.view) {\n        // Don't change view if it's the same\n        return state\n      } else {\n        return {\n          ...state,\n          view: newView,\n          previousView: state?.view,\n        }\n      }\n    },\n    toggleIsOpen: (state, payload: boolean) => {\n      return {\n        ...state,\n        isOpen: payload,\n      }\n    },\n    toggleActionsExpanded: (state, payload: boolean) => {\n      state.actionsExpanded = payload\n      return state\n    },\n    toggleInputOutputOpened: (state, payload: boolean) => {\n      state.inputOutputOpened = payload\n      return state\n    },\n    setSettingsView: (state, payload: SettingsViewType) => {\n      state.settingsView = payload\n    },\n    setContactListView: (state, payload: ContactListViewType) => {\n      state.contactListView = payload\n    },\n    toggleSideViewVisible: (state, payload: boolean) => {\n      state.sideViewIsVisible = payload\n    },\n    toggleConferenceList: (state, payload: boolean) => {\n      state.isConferenceList = payload\n    },\n    toggleAvoidToShow: (state, payload: boolean) => {\n      state.avoidToShow = payload\n    },\n    setUrlOpened: (state, payload: boolean) => {\n      state.urlOpened = payload\n      return state\n    },\n    resetSettingsView: (state) => {\n      state.settingsView = 'main'\n    },\n    setFullScreen: (state, payload: boolean) => {\n      return {\n        ...state,\n        isFullScreen: payload,\n      }\n    },\n    setIsFromStreaming: (state, payload: boolean) => {\n      return {\n        ...state,\n        isFromStreaming: payload,\n      }\n    },\n    setExtraLarge: (state, payload: boolean) => {\n      return {\n        ...state,\n        isExtraLarge: payload,\n      }\n    },\n    resetPlayerClose: (state) => {\n      return getResetState(state, false)\n    },\n    resetIslandStore: (state) => {\n      return getResetState(state, true)\n    },\n  },\n  effects: (dispatch) => ({\n    handleToggleIsOpen: (_: void, rootState) => {\n      if (\n        rootState.island.isOpen &&\n        rootState.alerts.status.activeAlertsCount > 0 &&\n        !rootState.currentCall.displayName\n      ) {\n        eventDispatch('phone-island-expanded', {})\n        dispatch.island.toggleIsOpen(true)\n      } else {\n        eventDispatch('phone-island-' + (rootState.island.isOpen ? 'compressed' : 'expanded'), {})\n        if (rootState.island.isOpen) {\n          eventDispatch('phone-island-sideview-close', {})\n        }\n        dispatch.island.toggleIsOpen(!rootState.island.isOpen)\n      }\n    },\n  }),\n})\n\nfunction getResetState(state: IslandTypes, includeRecorder: boolean): IslandTypes {\n  // Keep beginning position\n  const preservedStartPosition = state.startPosition\n  // Determine which view to preserve\n  const viewsToPreserve = ['waitingConference']\n  if (includeRecorder) {\n    viewsToPreserve.push('recorder')\n  }\n\n  const preservedView = viewsToPreserve.includes(state.view as string)\n    ? state.view\n    : defaultState.view\n  const avoidToShow = state.avoidToShow\n\n  return {\n    ...defaultState,\n    startPosition: preservedStartPosition,\n    view: preservedView,\n    avoidToShow: avoidToShow,\n    isFromStreaming: false,\n    // Keep previousView if waitingConference\n    previousView:\n      state.view === 'waitingConference' ? state.previousView : defaultState.previousView,\n  }\n}\n\ntype IslandViewType =\n  | 'call'\n  | 'keypad'\n  | 'player'\n  | 'transfer'\n  | 'recorder'\n  | 'physicalPhoneRecorder'\n  | 'settings'\n  | 'video'\n  | 'conference'\n  | 'switchDevice'\n  | 'waitingConference'\n  | 'streamingAnswer'\ntype SettingsViewType = 'microphone' | 'audioInput' | 'videoInput' | 'theme' | 'main'\ntype ContactListViewType = 'main' | 'selectContactNumber'\n\ninterface IslandTypes {\n  view?: IslandViewType | null\n  isOpen: boolean\n  actionsExpanded: boolean\n  startPosition: {\n    x: number\n    y: number\n  }\n  inputOutputOpened: boolean\n  settingsView: SettingsViewType\n  contactListView: ContactListViewType\n  sideViewIsVisible: boolean\n  isConferenceList: boolean\n  previousView?: IslandViewType | null\n  avoidToShow?: boolean\n  isFullScreen: boolean\n  isFromStreaming: boolean\n  isExtraLarge: boolean\n  urlOpened: boolean\n}\n"],"names":["defaultState","view","isOpen","actionsExpanded","startPosition","x","y","inputOutputOpened","settingsView","contactListView","sideViewIsVisible","isConferenceList","previousView","avoidToShow","isFullScreen","isFromStreaming","isExtraLarge","urlOpened","island","createModel","state","reducers","setIslandView","newView","__assign","toggleIsOpen","payload","toggleActionsExpanded","toggleInputOutputOpened","setSettingsView","setContactListView","toggleSideViewVisible","toggleConferenceList","toggleAvoidToShow","setUrlOpened","resetSettingsView","setFullScreen","setIsFromStreaming","setExtraLarge","resetPlayerClose","getResetState","resetIslandStore","effects","dispatch","handleToggleIsOpen","_","rootState","alerts","status","activeAlertsCount","currentCall","displayName","eventDispatch","includeRecorder","preservedStartPosition","viewsToPreserve","push","preservedView","includes"],"mappings":"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"}