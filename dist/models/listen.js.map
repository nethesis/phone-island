{"version":3,"file":"listen.js","sources":["../../src/models/listen.ts"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport { createModel } from '@rematch/core'\nimport type { RootModel } from '.'\n\ninterface DefaultState {\n  isListen: boolean\n  isListenExtension: string\n  isIntrude: boolean\n  isIntrudeExtension: string\n}\n\nconst defaultState: DefaultState = {\n  isListen: false,\n  isListenExtension: '',\n  isIntrude: false,\n  isIntrudeExtension: '',\n}\n\nexport const listen = createModel<RootModel>()({\n  state: defaultState,\n  reducers: {\n    setUpdateListenStatus: (state, isListen: boolean, isListenExtension: string) => {\n      state.isListen = isListen\n      state.isListenExtension = isListenExtension\n      return state\n    },\n    setUpdateIntrudeStatus: (state, isIntrude: boolean, isIntrudeExtension: string) => {\n      state.isIntrude = isIntrude\n      state.isIntrudeExtension = isIntrudeExtension\n      return state\n    },\n    reset: () => {\n      return defaultState\n    },\n  },\n})\n"],"names":["defaultState","isListen","isListenExtension","isIntrude","isIntrudeExtension","listen","createModel","state","reducers","setUpdateListenStatus","setUpdateIntrudeStatus","reset"],"mappings":"oIAaMA,EAA6B,CACjCC,UAAU,EACVC,kBAAmB,GACnBC,WAAW,EACXC,mBAAoB,IAGTC,EAASC,EAAWA,aAAXA,CAAyB,CAC7CC,MAAOP,EACPQ,SAAU,CACRC,sBAAuB,SAACF,EAAON,EAAmBC,GAGhD,OAFAK,EAAMN,SAAWA,EACjBM,EAAML,kBAAoBA,EACnBK,CACR,EACDG,uBAAwB,SAACH,EAAOJ,EAAoBC,GAGlD,OAFAG,EAAMJ,UAAYA,EAClBI,EAAMH,mBAAqBA,EACpBG,CACR,EACDI,MAAO,WACL,OAAOX,CACR"}