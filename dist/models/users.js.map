{"version":3,"file":"users.js","sources":["../../src/models/users.ts"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport { createModel } from '@rematch/core'\nimport type { RootModel } from '.'\nimport type {\n  ExtensionsTypes,\n  ExtensionTypes,\n  UsersEndpointsTypes,\n  UserEndpointsTypes,\n} from '../types'\n\nconst defaultState: UsersTypes = {\n  extensions: null,\n  endpoints: null,\n}\n\nexport const users = createModel<RootModel>()({\n  state: defaultState,\n  reducers: {\n    updateExtensions: (state, payload: ExtensionsTypes) => {\n      return {\n        ...state,\n        extensions: payload,\n      }\n    },\n    updateExtension: (state, payload: ExtensionTypes) => {\n      return {\n        ...state,\n        extensions: {\n          ...state.extensions,\n          [payload.exten]: payload,\n        },\n      }\n    },\n    updateEndpoints: (state, payload: UsersEndpointsTypes) => {\n      return {\n        ...state,\n        endpoints: payload,\n      }\n    },\n    updateEndpoint: (state, payload: UserEndpointsTypes) => {\n      return {\n        ...state,\n        endpoints: {\n          ...state.endpoints,\n          [payload.username]: payload,\n        },\n      }\n    },\n    updateEndpointMainPresence: (state, payload: { username: string; status: string }) => {\n      if (state.endpoints) {\n        const newEndpoint: UserEndpointsTypes = {\n          ...state.endpoints[payload.username],\n          mainPresence: payload.status,\n        }\n        // Return the state with the updated endpoint\n        return {\n          ...state,\n          endpoints: {\n            ...state.endpoints,\n            [payload.username]: newEndpoint,\n          },\n        }\n      }\n    },\n  },\n})\n\ninterface UsersTypes {\n  extensions: ExtensionsTypes | null // Useful for the conversations...\n  endpoints: UsersEndpointsTypes | null // Useful for the main presence...\n}\n"],"names":["users","createModel","state","extensions","endpoints","reducers","updateExtensions","payload","__assign","updateExtension","_a","exten","updateEndpoints","updateEndpoint","username","updateEndpointMainPresence","newEndpoint","mainPresence","status"],"mappings":"wHAiBaA,4DAAmBC,aAAXA,CAAyB,CAC5CC,MAN+B,CAC/BC,WAAY,KACZC,UAAW,MAKXC,SAAU,CACRC,iBAAkB,SAACJ,EAAOK,GACxB,OAAAC,EAAAA,SAAAA,EAAAA,SAAA,GACKN,GAAK,CACRC,WAAYI,GAEf,EACDE,gBAAiB,SAACP,EAAOK,SACvB,OAAAC,EAAAA,SAAAA,WAAA,CAAA,EACKN,GAAK,CACRC,WAAUK,EAAAA,SAAAA,EAAAA,SAAA,GACLN,EAAMC,aAAUO,EAAA,CAAA,EAAAA,EAClBH,EAAQI,OAAQJ,EAEpBG,KACF,EACDE,gBAAiB,SAACV,EAAOK,GACvB,OAAAC,EAAAA,SAAAA,EAAAA,SAAA,GACKN,GAAK,CACRE,UAAWG,GAEd,EACDM,eAAgB,SAACX,EAAOK,SACtB,OAAAC,EAAAA,SAAAA,WAAA,CAAA,EACKN,GAAK,CACRE,UAASI,EAAAA,SAAAA,EAAAA,SAAA,GACJN,EAAME,YAASM,EAAA,CAAA,EAAAA,EACjBH,EAAQO,UAAWP,EAEvBG,KACF,EACDK,2BAA4B,SAACb,EAAOK,SAClC,GAAIL,EAAME,UAAW,CACnB,IAAMY,EACDR,EAAAA,SAAAA,EAAAA,SAAA,CAAA,EAAAN,EAAME,UAAUG,EAAQO,YAC3BG,aAAcV,EAAQW,SAGxB,OAAAV,EAAAA,SAAAA,WAAA,CAAA,EACKN,GAAK,CACRE,UAASI,EAAAA,SAAAA,EAAAA,SAAA,GACJN,EAAME,YAASM,EAAA,CAAA,EAAAA,EACjBH,EAAQO,UAAWE,EAEvBN,KACF,CACF"}