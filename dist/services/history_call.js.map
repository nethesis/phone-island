{"version":3,"file":"history_call.js","sources":["../../src/services/history_call.ts"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport { store } from '../store'\n\n/**\n * Get the call recording in base64 format\n */\nexport async function getCallRecording(id: string): Promise<string> {\n  try {\n    const { baseURL, headers } = store.getState().fetchDefaults\n    const response = await fetch(`${baseURL}/historycall/listen_callrec/${id}`, {\n      headers: { ...headers },\n    })\n    if (!response.ok) {\n      throw new Error(response.statusText)\n    }\n    const data = await response.json()\n    return data\n  } catch (error: any) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Returns the file name of the recording\n */\nexport async function getRecordingFileName(id: string): Promise<string> {\n  try {\n    const { baseURL, headers } = store.getState().fetchDefaults\n    const response = await fetch(`${baseURL}/historycall/down_callrec/${id}`, {\n      headers: { ...headers },\n    })\n    if (!response.ok) {\n      throw new Error(response.statusText)\n    }\n    const data = await response.json()\n    return data\n  } catch (error: any) {\n    throw new Error(error)\n  }\n}\n"],"names":["id","_a","store","getState","fetchDefaults","baseURL","headers","fetch","concat","__assign","response","_b","sent","ok","Error","statusText","json","error_1","error_2"],"mappings":"gLAQM,SAAiCA,iIAGlB,6BADXC,EAAuBC,EAAKA,MAACC,WAAWC,cAAtCC,EAAOJ,EAAAI,QAAEC,EAAOL,EAAAK,QACP,CAAA,EAAMC,MAAM,GAAAC,OAAGH,EAAsC,gCAAAG,OAAAR,GAAM,CAC1EM,QAAOG,EAAAA,SAAA,CAAA,EAAOH,aAEhB,KAHMI,EAAWC,EAEfC,QACYC,GACZ,MAAM,IAAIC,MAAMJ,EAASK,YAEd,MAAA,CAAA,EAAML,EAASM,eAC5B,MAAA,CAAA,EADaL,EAAqBC,eAGlC,iBAAM,IAAIE,MAAMG,0BAEnB,+BAKK,SAAqCjB,iIAGtB,6BADXC,EAAuBC,EAAKA,MAACC,WAAWC,cAAtCC,EAAOJ,EAAAI,QAAEC,EAAOL,EAAAK,QACP,CAAA,EAAMC,MAAM,GAAAC,OAAGH,EAAoC,8BAAAG,OAAAR,GAAM,CACxEM,QAAOG,EAAAA,SAAA,CAAA,EAAOH,aAEhB,KAHMI,EAAWC,EAEfC,QACYC,GACZ,MAAM,IAAIC,MAAMJ,EAASK,YAEd,MAAA,CAAA,EAAML,EAASM,eAC5B,MAAA,CAAA,EADaL,EAAqBC,eAGlC,iBAAM,IAAIE,MAAMI,0BAEnB"}