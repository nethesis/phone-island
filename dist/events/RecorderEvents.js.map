{"version":3,"file":"RecorderEvents.js","sources":["../../src/events/RecorderEvents.tsx"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { type FC } from 'react'\nimport { eventDispatch } from '../utils'\nimport { useEventListener } from '../utils'\nimport { useDispatch } from 'react-redux'\nimport { Dispatch, store } from '../store'\n\nexport const RecorderEvents: FC = () => {\n  const dispatch = useDispatch<Dispatch>()\n\n  //Recording could be started from the web interface or from the physical device\n\n  /**\n   * Event listner for phone-island-audio-player-start event if webRtc is main device\n   */\n  useEventListener('phone-island-recording-open', (data: {}) => {\n    dispatch.island.setIslandView('recorder')\n    eventDispatch('phone-island-recording-opened', {})\n  })\n\n  /**\n   * Event listner for phone-island-recording-start event if physical device is main device\n   */\n  useEventListener('phone-island-physical-recording-view', (data: {}) => {\n    dispatch.island.setIslandView('physicalPhoneRecorder')\n    eventDispatch('phone-island-physical-recording-opened', {})\n\n    // Start recording after 500ms\n    setTimeout(() => {\n      eventDispatch('phone-island-physical-recording-open', {})\n    }, 500)\n  })\n\n  return <></>\n}\n\n/**\n * Dispatch recording save\n */\nexport function dispatchRecordingSave() {\n  const tempFileName = store.getState().recorder.tempFileName\n  const audioFileURL = store.getState().player.audioPlayer?.current?.src || ''\n  eventDispatch('phone-island-recording-saved', {\n    tempFileName,\n    audioFileURL,\n  })\n}\n\n/**\n * Dispatch physical phone recording save\n */\nexport function dispatchPhysicalRecordingSave() {\n  const tempFileName = store.getState().physicalRecorder.tempFileName\n  console.log('dispatchPhysicalRecordingSave', tempFileName)\n  eventDispatch('phone-island-physical-recording-saved', {\n    tempFileName,\n  })\n}\n"],"names":["dispatch","useDispatch","useEventListener","data","island","setIslandView","eventDispatch","setTimeout","React","tempFileName","store","getState","physicalRecorder","console","log","recorder","audioFileURL","_a","player","audioPlayer","current","src"],"mappings":"0cASkC,WAChC,IAAMA,EAAWC,EAAAA,cAyBjB,OAlBAC,mBAAiB,+BAA+B,SAACC,GAC/CH,EAASI,OAAOC,cAAc,YAC9BC,gBAAc,gCAAiC,CAAA,EACjD,IAKAJ,mBAAiB,wCAAwC,SAACC,GACxDH,EAASI,OAAOC,cAAc,yBAC9BC,gBAAc,yCAA0C,CAAA,GAGxDC,YAAW,WACTD,gBAAc,uCAAwC,CAAA,EACvD,GAAE,IACL,IAEOE,gDACT,mDAkBE,IAAMC,EAAeC,EAAKA,MAACC,WAAWC,iBAAiBH,aACvDI,QAAQC,IAAI,gCAAiCL,GAC7CH,EAAAA,cAAc,wCAAyC,CACrDG,aAAYA,GAEhB,mDAjBQA,EAAeC,EAAKA,MAACC,WAAWI,SAASN,aACzCO,aAAoD,QAArCC,EAAAP,EAAAA,MAAMC,WAAWO,OAAOC,mBAAa,IAAAF,OAAA,EAAAA,EAAAG,8BAASC,MAAO,GAC1Ef,EAAAA,cAAc,+BAAgC,CAC5CG,aAAYA,EACZO,aAAYA,GAEhB"}