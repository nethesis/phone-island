{"version":3,"file":"PlayerEvents.js","sources":["../../src/events/PlayerEvents.tsx"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { type FC } from 'react'\nimport { eventDispatch } from '../utils'\nimport { useEventListener } from '../utils'\nimport {\n  playAnnouncement,\n  playCallRecording,\n  getRecordingName,\n  getAnnouncementName,\n  getVoicemailName,\n  playVoicemail,\n} from '../lib/player/audio'\nimport { type PlayerStartTypes } from '../types'\nimport { useDispatch } from 'react-redux'\nimport { Dispatch } from '../store'\n\nexport const PlayerEvents: FC = () => {\n  const dispatch = useDispatch<Dispatch>()\n\n  /**\n   * Event listner for phone-island-audio-player-start event\n   */\n  useEventListener('phone-island-audio-player-start', (data: PlayerStartTypes) => {\n    if (data.type) {\n      // Check the id required when a type is provided\n      if (!data.id) {\n        console.error(\n          'phone-island-audio-player-start: when a type is provided, the id is required',\n        )\n        return\n      }\n      // Manage types\n      if (data.type === 'announcement') {\n        getAnnouncementName(data?.id)\n        playAnnouncement(data?.id)\n      } else if (data?.type === 'call_recording') {\n        getRecordingName(data?.id)\n        playCallRecording(data?.id)\n      } else if (data?.type === 'voicemail') {\n        getVoicemailName(data?.id)\n        playVoicemail(data?.id)\n      }\n    } else {\n      if (data.base64_audio_file) {\n        // Play the base64 audio file\n        dispatch.island.setIslandView('player')\n        dispatch.player.resetAudioPlayerType()\n        dispatch.player.updateStartAudioPlayer({\n          src: data.base64_audio_file,\n        })\n      }\n      if (data.description) {\n        dispatch.player.setAudioPlayerTrackName(data.description)\n      }\n    }\n  })\n\n  return <></>\n}\n\n/**\n * Dispatch call start\n */\nexport function dispatchAudioPlayerStarted() {\n  eventDispatch('phone-island-audio-player-started', {})\n}\n"],"names":["dispatch","useDispatch","useEventListener","data","type","id","console","error","getAnnouncementName","playAnnouncement","getRecordingName","playCallRecording","getVoicemailName","playVoicemail","base64_audio_file","island","setIslandView","player","resetAudioPlayerType","updateStartAudioPlayer","src","description","setAudioPlayerTrackName","React","eventDispatch"],"mappings":"2sBAkBgC,WAC9B,IAAMA,EAAWC,EAAAA,cAwCjB,OAnCAC,mBAAiB,mCAAmC,SAACC,GACnD,GAAIA,EAAKC,KAAM,CAEb,IAAKD,EAAKE,GAIR,YAHAC,QAAQC,MACN,gFAKc,iBAAdJ,EAAKC,MACPI,sBAAoBL,eAAAA,EAAME,IAC1BI,mBAAiBN,eAAAA,EAAME,KACC,oBAAfF,aAAI,EAAJA,EAAMC,OACfM,mBAAiBP,eAAAA,EAAME,IACvBM,oBAAkBR,eAAAA,EAAME,KACA,eAAfF,aAAI,EAAJA,EAAMC,QACfQ,mBAAiBT,eAAAA,EAAME,IACvBQ,gBAAcV,eAAAA,EAAME,IAEvB,MACKF,EAAKW,oBAEPd,EAASe,OAAOC,cAAc,UAC9BhB,EAASiB,OAAOC,uBAChBlB,EAASiB,OAAOE,uBAAuB,CACrCC,IAAKjB,EAAKW,qBAGVX,EAAKkB,aACPrB,EAASiB,OAAOK,wBAAwBnB,EAAKkB,YAGnD,IAEOE,gDACT,gDAMEC,gBAAc,oCAAqC,CAAA,EACrD"}