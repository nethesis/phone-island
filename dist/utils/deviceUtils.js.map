{"version":3,"file":"deviceUtils.js","sources":["../../src/utils/deviceUtils.ts"],"sourcesContent":["import { isEmpty } from './genericFunctions/isEmpty'\n\nexport const getAvailableDevices = (userInfo: any, allUsers: any) => {\n  // Return empty array if required data is missing\n  if (!userInfo?.endpoints?.extension || !allUsers?.extensions) {\n    return []\n  }\n\n  // Get IDs of devices with active conversations\n  const activeConversationIds = Object.keys(userInfo?.conversations || {}).filter(\n    (id) => !isEmpty(userInfo?.conversations[id]),\n  )\n\n  // Filter online devices that are not in conversations\n  return userInfo.endpoints.extension.filter((device: any) => {\n    const deviceId = device?.id\n    const deviceStatus = allUsers?.extensions[deviceId]?.status\n\n    return (\n      deviceId &&\n      deviceStatus === 'online' &&\n      !activeConversationIds?.includes(deviceId) &&\n      device.type !== 'webrtc' &&\n      device.type !== 'nethlink'\n    )\n  })\n}\n"],"names":["userInfo","allUsers","_a","endpoints","extension","extensions","activeConversationIds","Object","keys","conversations","filter","id","isEmpty","device","deviceId","deviceStatus","status","includes","type"],"mappings":"+IAEmC,SAACA,EAAeC,SAEjD,KAA0B,QAArBC,EAAAF,aAAA,EAAAA,EAAUG,iBAAW,IAAAD,OAAA,EAAAA,EAAAE,cAAcH,eAAAA,EAAUI,YAChD,MAAO,GAIT,IAAMC,EAAwBC,OAAOC,MAAKR,aAAQ,EAARA,EAAUS,gBAAiB,CAAA,GAAIC,QACvE,SAACC,GAAO,OAACC,EAAOA,QAACZ,aAAQ,EAARA,EAAUS,cAAcE,GAAI,IAI/C,OAAOX,EAASG,UAAUC,UAAUM,QAAO,SAACG,SACpCC,EAAWD,aAAA,EAAAA,EAAQF,GACnBI,EAA6C,QAA9Bb,EAAAD,aAAQ,EAARA,EAAUI,WAAWS,UAAS,IAAAZ,OAAA,EAAAA,EAAEc,OAErD,OACEF,GACiB,WAAjBC,KACCT,aAAqB,EAArBA,EAAuBW,SAASH,KACjB,WAAhBD,EAAOK,MACS,aAAhBL,EAAOK,IAEX,GACF"}