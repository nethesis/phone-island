{"version":3,"file":"useLocalStorage.js","sources":["../../../src/utils/customHooks/useLocalStorage.ts"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport { Dispatch, SetStateAction, useCallback, useEffect, useState } from 'react'\n\nimport { useEventListener } from './useEventListener'\nimport { useEventCallback } from './useEventCallback'\n\ndeclare global {\n  interface WindowEventMap {\n    'local-storage': CustomEvent\n  }\n}\n\ntype SetValue<T> = Dispatch<SetStateAction<T>>\n\nexport function useLocalStorage<T>(key: string, initialValue: T): [T, SetValue<T>] {\n  // Get from local storage then\n  // parse stored json or return initialValue\n  const readValue = useCallback((): T => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (parseJSON(item) as T) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error)\n      return initialValue\n    }\n  }, [initialValue, key])\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(readValue)\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue: SetValue<T> = useEventCallback((value) => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (typeof window === 'undefined') {\n      console.warn(\n        `Tried setting localStorage key “${key}” even though environment is not a client`,\n      )\n    }\n\n    try {\n      // Allow value to be a function so we have the same API as useState\n      const newValue = value instanceof Function ? value(storedValue) : value\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n\n      // Save state\n      setStoredValue(newValue)\n\n      // We dispatch a custom event so every useLocalStorage hook are notified\n      window.dispatchEvent(new Event('local-storage'))\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  })\n\n  useEffect(() => {\n    setStoredValue(readValue())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleStorageChange = useCallback(\n    (event: StorageEvent | CustomEvent) => {\n      if ((event as StorageEvent)?.key && (event as StorageEvent).key !== key) {\n        return\n      }\n      setStoredValue(readValue())\n    },\n    [key, readValue],\n  )\n\n  // this only works for other documents, not the current one\n  useEventListener('storage', handleStorageChange)\n\n  // this is a custom event, triggered in writeValueToLocalStorage\n  // See: useLocalStorage()\n  useEventListener('local-storage', handleStorageChange)\n\n  return [storedValue, setValue]\n}\n\n// A wrapper for \"JSON.parse()\"\" to support \"undefined\" value\nfunction parseJSON<T>(value: string | null): T | undefined {\n  try {\n    return value === 'undefined' ? undefined : JSON.parse(value ?? '')\n  } catch {\n    console.log('parsing error on', { value })\n    return undefined\n  }\n}\n"],"names":["key","initialValue","readValue","useCallback","window","item","localStorage","getItem","value","undefined","JSON","parse","_a","console","log","parseJSON","error","warn","concat","useState","storedValue","setStoredValue","setValue","useEventCallback","newValue","Function","setItem","stringify","dispatchEvent","Event","useEffect","handleStorageChange","event","useEventListener"],"mappings":"yLAgBgB,SAAmBA,EAAaC,GAG9C,IAAMC,EAAYC,EAAAA,aAAY,WAE5B,GAAsB,oBAAXC,OACT,OAAOH,EAGT,IACE,IAAMI,EAAOD,OAAOE,aAAaC,QAAQP,GACzC,OAAOK,EAgEb,SAAsBG,GACpB,IACE,MAAiB,cAAVA,OAAwBC,EAAYC,KAAKC,MAAMH,QAAAA,EAAS,GAChE,CAAC,MAAMI,GAEN,YADAC,QAAQC,IAAI,mBAAoB,CAAEN,MAAKA,GAExC,CACH,CAvEqBO,CAAUV,GAAcJ,CACxC,CAAC,MAAOe,GAEP,OADAH,QAAQI,KAAK,mCAAAC,OAAmClB,EAAO,MAAEgB,GAClDf,CACR,CACH,GAAG,CAACA,EAAcD,IAIZY,EAAgCO,EAAAA,SAAYjB,GAA3CkB,EAAWR,EAAA,GAAES,EAAcT,EAAA,GAI5BU,EAAwBC,oBAAiB,SAACf,GAExB,oBAAXJ,QACTS,QAAQI,KACN,0CAAmCjB,EAAG,8CAI1C,IAEE,IAAMwB,EAAWhB,aAAiBiB,SAAWjB,EAAMY,GAAeZ,EAGlEJ,OAAOE,aAAaoB,QAAQ1B,EAAKU,KAAKiB,UAAUH,IAGhDH,EAAeG,GAGfpB,OAAOwB,cAAc,IAAIC,MAAM,iBAChC,CAAC,MAAOb,GACPH,QAAQI,KAAK,mCAAAC,OAAmClB,EAAO,MAAEgB,EAC1D,CACH,IAEAc,EAAAA,WAAU,WACRT,EAAenB,IAEhB,GAAE,IAEH,IAAM6B,EAAsB5B,eAC1B,SAAC6B,IACMA,eAAAA,EAAwBhC,MAAQgC,EAAuBhC,MAAQA,GAGpEqB,EAAenB,IACjB,GACA,CAACF,EAAKE,IAUR,OANA+B,mBAAiB,UAAWF,GAI5BE,mBAAiB,gBAAiBF,GAE3B,CAACX,EAAaE,EACvB"}