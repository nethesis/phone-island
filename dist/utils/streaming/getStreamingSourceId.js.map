{"version":3,"file":"getStreamingSourceId.js","sources":["../../../src/utils/streaming/getStreamingSourceId.ts"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport { store } from '../../store'\n\n/**\n * Returns the streaming source ID corresponding to an extension number\n *\n * @param extensionNumber The extension number to search for\n * @returns The source ID or undefined if not found\n */\nexport const getStreamingSourceId = (extensionNumber: string): string | undefined => {\n  const { videoSources } = store.getState().streaming\n\n  if (!videoSources || Object.keys(videoSources).length === 0) {\n    return undefined\n  }\n\n  // Find the source that has the given extension\n  const source = Object.values(videoSources).find((source) => source.extension === extensionNumber)\n\n  return source?.id\n}\n"],"names":["extensionNumber","videoSources","store","getState","streaming","Object","keys","length","source","values","find","extension","id"],"mappings":"uIAWoC,SAACA,GAC3B,IAAAC,EAAiBC,EAAKA,MAACC,WAAWC,UAASH,aAEnD,GAAKA,GAAqD,IAArCI,OAAOC,KAAKL,GAAcM,OAA/C,CAKA,IAAMC,EAASH,OAAOI,OAAOR,GAAcS,MAAK,SAACF,GAAW,OAAAA,EAAOG,YAAcX,CAAe,IAEhG,OAAOQ,eAAAA,EAAQI,EALd,CAMH"}