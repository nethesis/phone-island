{"version":3,"file":"isBackCallVisible.js","sources":["../../../src/utils/genericFunctions/isBackCallVisible.ts"],"sourcesContent":["// Copyright (C) 2025 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport { store } from '../../store'\n\n/**\n * Checks if back call view is active\n */\nexport function isBackCallActive() {\n  const { view, isOpen }: any = store.getState().island\n  const { transferring } = store.getState().currentCall\n  const { isActive, usersList, conferenceStartedFrom } = store.getState().conference\n  const { name, username } = store.getState().currentUser\n\n  const isUserInConference =\n    usersList && Object.values(usersList).some((user: any) => user.name === name)\n\n  return (\n    ['keypad', 'transfer', 'settings', 'switchDevice', 'streamingAnswer'].includes(view) ||\n    (view === 'video' && isOpen) ||\n    transferring ||\n    //check if conference is active\n    (isActive &&\n      view !== 'waitingConference' &&\n      (isUserInConference || conferenceStartedFrom === username) &&\n      isOpen)\n  )\n}\n"],"names":["_a","store","getState","island","view","isOpen","transferring","currentCall","_b","conference","isActive","usersList","conferenceStartedFrom","_c","currentUser","name","username","isUserInConference","Object","values","some","user","includes"],"mappings":"8IASQ,IAAAA,EAAwBC,EAAAA,MAAMC,WAAWC,OAAvCC,EAAIJ,EAAAI,KAAEC,WACNC,EAAiBL,EAAKA,MAACC,WAAWK,YAAWD,aAC/CE,EAAiDP,EAAKA,MAACC,WAAWO,WAAhEC,EAAQF,EAAAE,SAAEC,EAASH,EAAAG,UAAEC,0BACvBC,EAAqBZ,EAAAA,MAAMC,WAAWY,YAApCC,EAAIF,EAAAE,KAAEC,aAERC,EACJN,GAAaO,OAAOC,OAAOR,GAAWS,MAAK,SAACC,GAAc,OAAAA,EAAKN,OAASA,CAAI,IAE9E,MACE,CAAC,SAAU,WAAY,WAAY,eAAgB,mBAAmBO,SAASlB,IACrE,UAATA,GAAoBC,GACrBC,GAECI,GACU,sBAATN,IACCa,GAAsBL,IAA0BI,IACjDX,CAEN"}