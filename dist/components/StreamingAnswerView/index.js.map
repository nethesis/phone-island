{"version":3,"file":"index.js","sources":["../../../src/components/StreamingAnswerView/index.tsx"],"sourcesContent":["// Copyright (C) 2025 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { type FC, useEffect, useRef, useState } from 'react'\nimport { Button } from '../Button'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dispatch, RootState, store } from '../../store'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faMicrophone,\n  faMicrophoneSlash,\n  faVideoSlash,\n} from '@fortawesome/free-solid-svg-icons'\nimport { t } from 'i18next'\nimport { useIsomorphicLayoutEffect } from '../../utils'\nimport Hangup from '../Hangup'\nimport {\n  muteCurrentCall,\n  unmuteCurrentCall,\n} from '../../lib/phone/call'\nimport Avatar from '../CallView/Avatar'\nimport Timer from '../CallView/Timer'\nimport { isPhysical } from '../../lib/user/default_device'\nimport { AudioBars } from '../AudioBars'\nimport { CustomThemedTooltip } from '../CustomThemedTooltip'\nimport { faCamera, faLockOpen } from '@fortawesome/free-solid-svg-icons'\nimport { capitalizeFirstLetter, getISODateForFilename, handleStreamingUnlock } from '../../utils'\n\nexport interface StreamingAnswerViewProps { }\n\nexport const StreamingAnswerView: FC<StreamingAnswerViewProps> = () => {\n  const dispatch = useDispatch<Dispatch>()\n  const {\n    muted,\n    startTime,\n    paused,\n    streamingSourceNumber,\n  } = useSelector((state: RootState) => state.currentCall)\n  const { isOpen, isExtraLarge } = useSelector((state: RootState) => state.island)\n  const { remoteAudioStream } = useSelector((state: RootState) => state.webrtc)\n  const { videoSources, sourceImages } = useSelector((state: RootState) => state.streaming)\n\n  // Get streaming source image and check if unlock is available\n  const streamingSourceData = React.useMemo(() => {\n    if (!streamingSourceNumber || !videoSources) return { image: null, canUnlock: false, tooltipText: '' }\n\n    const source = Object.values(videoSources).find(\n      (source) => source.extension === streamingSourceNumber,\n    )\n    if (!source) return { image: null, canUnlock: false, tooltipText: '' }\n\n    const image = sourceImages[source.id] || source.image || null\n    const canUnlock = Boolean(source.cmdOpen && source.cmdOpen.trim() !== '')\n    const tooltipText = canUnlock ? `${t('VideoStreaming.Open')}: ${source.description}` : ''\n\n    return { image, canUnlock, tooltipText }\n  }, [streamingSourceNumber, videoSources, sourceImages, t])\n\n  const [isFullscreen, setIsFullscreen] = useState(false)\n  const streamingAnswerViewRef = useRef(null)\n  const localScreen = useRef<HTMLVideoElement>(null)\n  const remoteScreen = useRef<HTMLVideoElement>(null)\n  const localVideo = useRef<HTMLVideoElement>(null)\n  const largeRemoteVideo = useRef<HTMLVideoElement>(null)\n  const smallRemoteVideo = useRef<HTMLVideoElement>(null)\n\n  useIsomorphicLayoutEffect(() => {\n    dispatch.player.updatePlayer({\n      localScreen: localScreen,\n      remoteScreen: remoteScreen,\n      localVideo: localVideo,\n      largeRemoteVideo: largeRemoteVideo,\n      smallRemoteVideo: smallRemoteVideo,\n    })\n  }, [])\n\n  const handleFullscreenChange = () => {\n    setIsFullscreen(!!document.fullscreenElement)\n  }\n\n  const toggleFullScreen = () => {\n    if (document.fullscreenElement) {\n      // exit full screen\n      document.exitFullscreen()\n    } else {\n      // enter full screen\n      if (streamingAnswerViewRef.current) {\n        ; (streamingAnswerViewRef.current as HTMLElement).requestFullscreen()\n      }\n    }\n  }\n\n  useEffect(() => {\n    // register for full screen change\n    addEventListener('fullscreenchange', handleFullscreenChange)\n\n    return () => {\n      removeEventListener('fullscreenchange', handleFullscreenChange)\n    }\n  }, [])\n\n  const handleScreenshot = React.useCallback(() => {\n    if (!streamingSourceNumber || !videoSources) return\n\n    const source = Object.values(videoSources).find(\n      (source) => source.extension === streamingSourceNumber,\n    )\n    if (!source || !source.image) return\n\n    const filename = source.description\n      ? `${capitalizeFirstLetter(source.description).replace(/\\s+/g, '_')}_${getISODateForFilename()}_screenshot.jpg`\n      : `screenshot_${getISODateForFilename()}.jpg`\n\n    // Create download link using the base64 image\n    const link = document.createElement('a')\n    link.href = source.image\n    link.download = filename\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }, [streamingSourceNumber, videoSources])\n\n  return (\n    <>\n      {isOpen ? (\n        <div\n          ref={streamingAnswerViewRef}\n          className={isFullscreen ? 'pi-h-screen pi-w-full' : isExtraLarge ? 'pi-h-[748px] pi-w-[936px]' : 'pi-h-[480px] pi-w-[600px]'}\n        >\n          <div className={`${isFullscreen ? `pi-h-[500px]` : isExtraLarge ? `pi-h-[648px]` : `pi-h-[380px]`} pi-flex pi-relative pi-justify-center pi-w-full pi-flex-col`}>\n            {/* Video container with rounded corners */}\n            <div className='pi-relative pi-flex-1'>\n              {/* Streaming source image or placeholder */}\n              {streamingSourceData.image ? (\n                <img\n                  src={streamingSourceData.image}\n                  alt='Streaming source'\n                  className='pi-rounded-tl-[20px] pi-rounded-tr-[20px] pi-rounded-bl-[20px] pi-rounded-br-[20px] pi-w-full pi-h-full pi-object-cover'\n                />\n              ) : (\n                <div className='pi-w-full pi-h-full pi-bg-gray-200 dark:pi-bg-gray-800 pi-flex pi-items-center pi-justify-center pi-rounded-tl-[20px] pi-rounded-tr-[20px] pi-rounded-bl-[20px] pi-rounded-br-[20px]'>\n                  <FontAwesomeIcon\n                    icon={faVideoSlash}\n                    className='pi-w-24 pi-h-24 pi-text-gray-400 dark:pi-text-gray-600'\n                  />\n                </div>\n              )}\n\n              {/* Controls overlay (above the image with transparency) */}\n              <div className='pi-absolute pi-bottom-0 pi-left-0 pi-right-0 pi-bg-black/30 pi-p-4 pi-rounded-b-3xl'>\n                <div>\n                  <div className='pi-flex pi-items-center pi-justify-center pi-gap-6'>\n                    {/* Mute button */}\n                    <Button\n                      variant='default'\n                      onClick={muted ? unmuteCurrentCall : muteCurrentCall}\n                      data-tooltip-id='tooltip-mute-streaming'\n                      data-tooltip-content={muted ? t('Tooltip.Unmute') : t('Tooltip.Mute')}\n                    >\n                      <FontAwesomeIcon\n                        className='pi-h-6 pi-w-6'\n                        icon={muted ? faMicrophoneSlash : faMicrophone}\n                      />\n                    </Button>\n\n                    {/* Screenshot button */}\n                    <Button\n                      variant='default'\n                      onClick={handleScreenshot}\n                      data-tooltip-id='tooltip-screenshot-streaming'\n                      data-tooltip-content={t('VideoStreaming.Take a screenshot') || 'Take a screenshot'}\n                    >\n                      <FontAwesomeIcon\n                        className='pi-h-6 pi-w-6'\n                        icon={faCamera}\n                      />\n                    </Button>\n\n                    {/* Open door button - only show if cmdOpen is valid */}\n                    {streamingSourceData?.canUnlock && (\n                      <Button\n                        variant='default'\n                        onClick={handleStreamingUnlock}\n                        data-tooltip-id='tooltip-unlock-streaming'\n                        data-tooltip-content={streamingSourceData?.tooltipText}\n                      >\n                        <FontAwesomeIcon\n                          className='pi-h-6 pi-w-6'\n                          icon={faLockOpen}\n                        />\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Footer below the image */}\n            <div className='pi-bg-surfaceBackground dark:pi-bg-surfaceBackgroundDark pi-pt-4 pi-rounded-bl-[20px] pi-rounded-br-[20px]'>\n              <Hangup\n                buttonsVariant='default'\n                showFullscreenButton={true}\n                isFullscreen={isFullscreen}\n                onToggleFullscreen={toggleFullScreen}\n                isExtraLarge={isExtraLarge}\n                onToggleExtraLarge={() => dispatch.island.setExtraLarge(!isExtraLarge)}\n              />\n            </div>\n\n          </div>\n\n          {/* Tooltips */}\n          <CustomThemedTooltip className='pi-z-20' id='tooltip-mute-streaming' place='bottom' />\n          <CustomThemedTooltip className='pi-z-20' id='tooltip-screenshot-streaming' place='bottom' />\n          <CustomThemedTooltip className='pi-z-20' id='tooltip-unlock-streaming' place='bottom' />\n          <CustomThemedTooltip className='pi-z-20' id='tooltip-record-streaming' place='bottom' />\n          <CustomThemedTooltip className='pi-z-20' id='tooltip-pause-streaming' place='bottom' />\n          <CustomThemedTooltip className='pi-z-20' id='tooltip-screen-share-streaming' place='bottom' />\n          <CustomThemedTooltip className='pi-z-20' id='tooltip-toggle-fullscreen' place='bottom' />\n        </div>\n      ) : (\n        // Collapsed view\n        <>\n          <div className='pi-flex pi-justify-between pi-items-center'>\n            <Avatar />\n            <Timer startTime={startTime} isNotAlwaysWhite />\n            {!isOpen && remoteAudioStream && !isPhysical() && (\n              <AudioBars\n                audioStream={remoteAudioStream}\n                paused={paused}\n                size={isOpen ? 'large' : 'small'}\n              />\n            )}\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default StreamingAnswerView\n"],"names":["StreamingAnswerView","dispatch","useDispatch","_a","useSelector","state","currentCall","muted","startTime","paused","streamingSourceNumber","_b","island","isOpen","isExtraLarge","remoteAudioStream","webrtc","_c","streaming","videoSources","sourceImages","streamingSourceData","React","useMemo","image","canUnlock","tooltipText","source","Object","values","find","extension","id","Boolean","cmdOpen","trim","concat","t","description","_d","useState","isFullscreen","setIsFullscreen","streamingAnswerViewRef","useRef","localScreen","remoteScreen","localVideo","largeRemoteVideo","smallRemoteVideo","useIsomorphicLayoutEffect","player","updatePlayer","handleFullscreenChange","document","fullscreenElement","useEffect","addEventListener","removeEventListener","handleScreenshot","useCallback","filename","capitalizeFirstLetter","replace","getISODateForFilename","link","createElement","href","download","body","appendChild","click","removeChild","Fragment","ref","className","src","alt","FontAwesomeIcon","icon","faVideoSlash","Button","variant","onClick","unmuteCurrentCall","muteCurrentCall","faMicrophoneSlash","faMicrophone","faCamera","handleStreamingUnlock","faLockOpen","Hangup","buttonsVariant","showFullscreenButton","onToggleFullscreen","exitFullscreen","current","requestFullscreen","onToggleExtraLarge","setExtraLarge","CustomThemedTooltip","place","Avatar","Timer","isNotAlwaysWhite","isPhysical","AudioBars","audioStream","size"],"mappings":"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"}