{"version":3,"file":"AlertGuard.js","sources":["../../src/components/AlertGuard.tsx"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { type FC, type ReactNode } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../store'\nimport AlertView from './AlertView'\n\n/**\n * Manages the logic of alerts as connection errors or permissions\n *\n * @param children\n * @returns\n */\n\nexport const AlertGuard: FC<AlertGuard> = ({ children, uaType}) => {\n  // Get alert status from alerts store\n  const { activeAlertsCount, breakActiveAlertsCount } = useSelector(\n    (state: RootState) => state.alerts.status,\n  )\n  // Get alerts status from alerts store\n  const { call_transfered } = useSelector((state: RootState) => state.alerts.data)\n  const { isOpen } = useSelector((state: RootState) => state.island)\n\n  return (\n    <>\n      {activeAlertsCount > 0 && isOpen && <AlertView uaType={uaType}/>}\n      {breakActiveAlertsCount === 0 && !call_transfered.active && children}\n    </>\n  )\n}\n\ninterface AlertGuard {\n  children: ReactNode\n  uaType?: string\n}\n"],"names":["_a","children","uaType","_b","useSelector","state","alerts","status","activeAlertsCount","breakActiveAlertsCount","call_transfered","data","isOpen","island","React","createElement","Fragment","AlertView","active"],"mappings":"2VAe0C,SAACA,OAAEC,EAAQD,EAAAC,SAAEC,EAAMF,EAAAE,OAErDC,EAAgDC,EAAAA,aACpD,SAACC,GAAqB,OAAAA,EAAMC,OAAOC,MAAM,IADnCC,EAAiBL,EAAAK,kBAAEC,EAAsBN,EAAAM,uBAIzCC,EAAoBN,EAAAA,aAAY,SAACC,GAAqB,OAAAA,EAAMC,OAAOK,wBACnEC,EAAWR,eAAY,SAACC,GAAqB,OAAAA,EAAMQ,iBAE3D,OACEC,UAAAC,cAAAD,EAAA,QAAAE,SAAA,KACGR,EAAoB,GAAKI,GAAUE,EAAC,QAAAC,cAAAE,UAAU,CAAAf,OAAQA,IAC3B,IAA3BO,IAAiCC,EAAgBQ,QAAUjB,EAGlE"}