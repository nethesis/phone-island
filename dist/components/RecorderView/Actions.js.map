{"version":3,"file":"Actions.js","sources":["../../../src/components/RecorderView/Actions.tsx"],"sourcesContent":["//\n// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n//\n\nimport React, { type FC, useEffect } from 'react'\nimport { Button } from '../Button'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faStop,\n  faCircleNotch,\n  faGear,\n  faDownLeftAndUpRightToCenter,\n  faFloppyDisk,\n} from '@fortawesome/free-solid-svg-icons'\nimport { startAnnouncementRecording } from '../../services/offhour'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { Dispatch, RootState } from '../../store'\nimport { hangupCurrentCall, answerIncomingCall } from '../../lib/phone/call'\nimport { dispatchRecordingSave } from '../../events'\nimport { useTranslation } from 'react-i18next'\nimport { useEventListener, eventDispatch } from '../../utils'\nimport { CustomThemedTooltip } from '../CustomThemedTooltip'\nimport { faRecord } from '@nethesis/nethesis-solid-svg-icons'\n\nexport const Actions: FC<{}> = () => {\n  const dispatch = useDispatch<Dispatch>()\n  const { incoming, waiting, recording, recorded, playing } = useSelector(\n    (state: RootState) => ({\n      incoming: state.recorder.incoming,\n      waiting: state.recorder.waiting,\n      recording: state.recorder.recording,\n      recorded: state.recorder.recorded,\n      playing: state.recorder.playing,\n    }),\n    shallowEqual,\n  )\n\n  async function handleStart() {\n    // Update the recorder state\n    dispatch.recorder.setRecording(true)\n    dispatch.recorder.setWaiting(true)\n    // Call the api to start the recording call\n    const data: { tempFilename: string } | null = await startAnnouncementRecording()\n    // Set the returned temp file name to the store\n    if (data.tempFilename) dispatch.recorder.setTempFilename(data.tempFilename)\n    // Set the start time of recording\n    dispatch.recorder.setStartTime(`${Date.now() / 1000}`)\n    eventDispatch('phone-island-recording-started', {})\n  }\n  useEventListener('phone-island-recording-start', (data: {}) => {\n    handleStart()\n  })\n\n  function handleStop() {\n    // Set waiting to true\n    dispatch.recorder.setWaiting(true)\n    // Call the function to hangup the current call used for recording\n    hangupCurrentCall()\n    dispatch.recorder.setRecorded(true)\n    eventDispatch('phone-island-recording-stopped', {})\n  }\n  useEventListener('phone-island-recording-stop', (data: {}) => {\n    handleStop()\n  })\n\n  function handleSaveRecording() {\n    // check if the audio is playing and pause it\n    if (playing) {\n      dispatch.player.pauseAudioPlayer()\n      dispatch.recorder.setPlaying(false)\n      dispatch.recorder.setPaused(true)\n    }\n    // Dispatch the reconrding save event\n    dispatchRecordingSave()\n    // Close the Island\n    dispatch.island.setIslandView(null)\n  }\n  useEventListener('phone-island-recording-save', (data: {}) => {\n    handleSaveRecording()\n  })\n\n  useEffect(() => {\n    if (!recording) {\n      dispatch.recorder.setWaiting(false)\n    }\n  }, [recording])\n\n  useEffect(() => {\n    if (incoming) {\n      // Answer the incoming call for recording\n      answerIncomingCall()\n      // Reset incoming to recorder state\n      dispatch.recorder.setIncoming(false)\n      dispatch.recorder.setWaiting(false)\n    }\n  }, [incoming])\n\n  const { t } = useTranslation()\n\n  return (\n    <div\n      className={`pi-flex pi-items-center pi-justify-between pi-px-6 pi-py-2 pi-gap-0 pi-w-full pi-mt-auto`}\n    >\n      <Button\n        variant='transparent'\n        disabled\n        className='pi-w-6 pi-h-6 pi-flex pi-items-center pi-justify-center pi-flex-none'\n      >\n        <FontAwesomeIcon icon={faDownLeftAndUpRightToCenter} className='pi-w-6 pi-h-6' />\n      </Button>\n\n      <div className='pi-flex pi-items-center pi-justify-center pi-flex-grow'>\n        {recording && (\n          <Button\n            onClick={handleStop}\n            variant='default'\n            className='pi-rounded-full pi-w-14 pi-h-14 pi-flex pi-items-center pi-justify-center'\n            data-tooltip-id='tooltip-stop-recorder-view'\n            data-tooltip-content={t('Tooltip.Stop') || ''}\n          >\n            {waiting ? (\n              <FontAwesomeIcon icon={faCircleNotch} className='fa-spin pi-loader' size='lg' />\n            ) : (\n              <FontAwesomeIcon icon={faStop} size='xl' />\n            )}\n          </Button>\n        )}\n        {recorded && !recording && (\n          <Button\n            onClick={handleSaveRecording}\n            variant='default'\n            className='pi-rounded-full pi-w-14 pi-h-14 pi-flex pi-items-center pi-justify-center'\n            data-tooltip-id='tooltip-confirm-record-view'\n            data-tooltip-content={t('Tooltip.Confirm') || ''}\n          >\n            <FontAwesomeIcon icon={faFloppyDisk} className='pi-h-6 pi-w-6' />\n          </Button>\n        )}\n        {!recording && !recorded && (\n          <Button\n            onClick={handleStart}\n            variant='default'\n            className='pi-rounded-full pi-w-14 pi-h-14 pi-flex pi-items-center pi-justify-center'\n            data-tooltip-id='tooltip-start-recording-recorder-view'\n            data-tooltip-content={t('Tooltip.Start recording') || ''}\n          >\n            {waiting ? (\n              <FontAwesomeIcon icon={faCircleNotch} className='fa-spin pi-loader' size='lg' />\n            ) : (\n              <FontAwesomeIcon icon={faRecord} className='pi-h-6 pi-w-6' />\n            )}\n          </Button>\n        )}\n      </div>\n\n      <div\n        onClick={() => dispatch.island.setIslandView('settings')}\n        data-tooltip-id='tooltip-settings-view-recorder'\n        data-tooltip-content={t('Tooltip.Go to settings') || ''}\n        className='pi-flex pi-items-center pi-justify-center pi-cursor-pointer pi-text-gray-700 dark:pi-text-gray-200 pi-w-6 pi-h-6 pi-flex-none'\n      >\n        <FontAwesomeIcon icon={faGear} className={`pi-h-6 pi-w-6`} />\n      </div>\n\n      {/* Buttons tooltips */}\n      <CustomThemedTooltip id='tooltip-start-recording-recorder-view' place='top' />\n      <CustomThemedTooltip id='tooltip-stop-recorder-view' place='top' />\n      <CustomThemedTooltip id='tooltip-confirm-record-view' place='top' />\n      <CustomThemedTooltip id='tooltip-settings-view-recorder' place='top' />\n    </div>\n  )\n}\n"],"names":["dispatch","useDispatch","_a","useSelector","state","incoming","recorder","waiting","recording","recorded","playing","shallowEqual","handleStart","setRecording","setWaiting","startAnnouncementRecording","data","sent","tempFilename","setTempFilename","setStartTime","concat","Date","now","eventDispatch","handleStop","hangupCurrentCall","setRecorded","handleSaveRecording","player","pauseAudioPlayer","setPlaying","setPaused","dispatchRecordingSave","island","setIslandView","useEventListener","useEffect","answerIncomingCall","setIncoming","t","useTranslation","React","createElement","className","Button","variant","disabled","FontAwesomeIcon","icon","faDownLeftAndUpRightToCenter","onClick","faCircleNotch","size","faStop","faFloppyDisk","faRecord","faGear","CustomThemedTooltip","id","place"],"mappings":"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"}