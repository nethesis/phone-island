{"version":3,"file":"index.js","sources":["../../../src/components/SwitchDeviceView/index.tsx"],"sourcesContent":["// Copyright (C) 2025 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { useState, type FC } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState, Dispatch } from '../../store'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faCircleInfo, faMobile, faUser, faXmark } from '@fortawesome/free-solid-svg-icons'\nimport { Button } from '../Button'\nimport { isEmpty } from '../../utils/genericFunctions/isEmpty'\nimport { blindTransferFunction } from '../../lib/phone/call'\nimport { faArrowsRepeat, faOfficePhone } from '@nethesis/nethesis-solid-svg-icons'\nimport { eventDispatch } from '../../utils'\nimport { CustomThemedTooltip } from '../CustomThemedTooltip'\nimport { useTranslation } from 'react-i18next'\nimport { getAvailableDevices } from '../../utils/deviceUtils'\nimport { changeDefaultDevice } from '../../services/user'\n\nexport const SwitchDeviceView: FC<SwitchDeviceViewProps> = () => {\n  const dispatch = useDispatch<Dispatch>()\n  const { t } = useTranslation()\n\n  const userInformation: any = useSelector((state: RootState) => state?.currentUser)\n  const allUsersInformation: any = useSelector((state: RootState) => state?.users)\n\n  // Extract devices with active conversations:\n  // Get IDs of devices with active conversations\n  const activeConversationIds = Object.keys(userInformation?.conversations || {}).filter(\n    (id) => !isEmpty(userInformation.conversations[id]),\n  )\n\n  const filteredDevices = getAvailableDevices(userInformation, allUsersInformation)\n\n  const [hoveredDevice, setHoveredDevice] = useState<string | null>(null)\n  const [selectedSwitchDevices, setSelectedSwitchDevices] = useState({ id: '', type: '' })\n\n  // Get the first device ID with active conversation\n  const extensionInCall = activeConversationIds[0]\n\n  const transferCallOnDevice = (device: any) => {\n    setSelectedSwitchDevices({\n      id: device?.id,\n      type: device?.type,\n    })\n  }\n\n  const setMainDeviceId = async (device: any) => {\n    let deviceExtension: any = {}\n    if (device) {\n      deviceExtension.id = device?.id\n      try {\n        await changeDefaultDevice(deviceExtension)\n        dispatch.user.updateDefaultDevice(device)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n  }\n\n  const blindTransferOnSelectedDevice = (endpointIdInConversation: string) => {\n    if (selectedSwitchDevices?.id && endpointIdInConversation) {\n      if (\n        selectedSwitchDevices?.type == 'physical' &&\n        userInformation?.default_device?.type === 'physical'\n      ) {\n        dispatch.island.toggleAvoidToShow(false)\n        blindTransferFunction(selectedSwitchDevices?.id, endpointIdInConversation)\n        eventDispatch('phone-island-call-switched', {})\n      } else if (\n        selectedSwitchDevices?.type === 'physical' &&\n        userInformation?.default_device?.type === 'nethlink'\n      ) {\n        dispatch.island.toggleAvoidToShow(false)\n        setMainDeviceId(selectedSwitchDevices)\n        dispatch.currentUser.updateCurrentDefaultDevice(selectedSwitchDevices)\n        eventDispatch('phone-island-default-device-changed', {})\n        setTimeout(() => {\n          blindTransferFunction(selectedSwitchDevices?.id, endpointIdInConversation)\n          eventDispatch('phone-island-call-switched', {})\n        }, 500)\n        eventDispatch('phone-island-call-switched', {})\n      } else if (\n        selectedSwitchDevices?.type === 'mobile' ||\n        (selectedSwitchDevices?.type === 'physical' &&\n          userInformation?.default_device?.type !== 'nethlink')\n      ) {\n        dispatch.island.toggleAvoidToShow(true)\n        blindTransferFunction(selectedSwitchDevices?.id, endpointIdInConversation)\n        eventDispatch('phone-island-call-switched', {})\n      }\n    }\n  }\n\n  return (\n    <>\n      <div className='pi-flex pi-flex-col pi-w-full'>\n        {/* Header */}\n        <div className='pi-flex pi-items-center pi-justify-between'>\n          <div className='pi-flex pi-items-center pi-space-x-2'>\n            <h1 className='pi-flex pi-text-lg pi-font-medium pi-text-gray-900 dark:pi-text-gray-50'>\n              {t('Switch device.Switch device') || ''}\n            </h1>\n            <FontAwesomeIcon\n              icon={faCircleInfo}\n              className='pi-flex pi-w-4 pi-h-4 pi-text-indigo-800 dark:pi-text-indigo-300'\n              data-tooltip-id='tooltip-switch-information'\n              data-tooltip-content={t('Switch device.Switch information') || ''}\n            />\n          </div>\n\n          <Button\n            onClick={() => dispatch.island.setIslandView('call')}\n            variant='transparentSettings'\n            data-tooltip-id='tooltip-close-settings'\n            data-tooltip-content={t('Common.Close') || ''}\n          >\n            <FontAwesomeIcon icon={faXmark} className='pi-w-5 pi-h-5' />\n          </Button>\n        </div>\n\n        {/* Divider */}\n        <div className='pi-border-t pi-border-gray-300 dark:pi-border-gray-600 pi-mt-1' />\n\n        {/* Devices List*/}\n        <div className='pi-flex pi-flex-col pi-mt-2 pi-h-40 pi-overflow-y-auto pi-space-y-2 pi-scrollbar-thin pi-scrollbar-thumb-gray-400 pi-dark:scrollbar-thumb-gray-400 pi-scrollbar-thumb-rounded-full pi-scrollbar-thumb-opacity-50 dark:pi-scrollbar-track-gray-900 pi-scrollbar-track-gray-200 pi-dark:scrollbar-track-gray-900 pi-scrollbar-track-rounded-full pi-scrollbar-track-opacity-25'>\n          {filteredDevices.map((device: any) => (\n            <div\n              key={device?.id}\n              className='pi-flex pi-items-center pi-justify-between pi-px-4 pi-py-3 pi-text-base pi-font-normal pi-leading-6 dark:pi-text-gray-200 pi-text-gray-700 hover:pi-bg-gray-200 dark:hover:pi-bg-gray-700 dark:pi-bg-gray-950 pi-bg-gray-50 pi-rounded-md'\n              onClick={() => transferCallOnDevice(device)}\n              onMouseEnter={() => setHoveredDevice(device?.id)}\n              onMouseLeave={() => setHoveredDevice(null)}\n            >\n              <div className='pi-flex pi-items-center pi-max-w-60 pi-truncate'>\n                <FontAwesomeIcon\n                  icon={\n                    device?.type === 'mobile'\n                      ? faMobile\n                      : device?.type === 'physical'\n                      ? faOfficePhone\n                      : faUser\n                  }\n                  className='pi-mr-2 pi-w-5 pi-h-5'\n                />\n                <span className='pi-truncate'>\n                  {device?.type === 'mobile'\n                    ? t('Phone Island.Mobile app')\n                    : device?.type === 'physical'\n                    ? device?.description\n                    : '-'}\n                </span>\n              </div>\n              <div className='pi-flex pi-items-center'>\n                {selectedSwitchDevices.id === device?.id && (\n                  <FontAwesomeIcon\n                    icon={faCheck}\n                    className={`${\n                      hoveredDevice === device?.id\n                        ? 'pi-text-gray-700 dark:pi-text-gray-200'\n                        : 'pi-text-emerald-700 dark:pi-text-emerald-500'\n                    } pi-w-5 pi-h-5`}\n                  />\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Centered Button */}\n        <div className='pi-flex pi-justify-center pi-mt-2'>\n          <Button\n            disabled={selectedSwitchDevices?.id === ''}\n            variant='gray'\n            className='pi-font-medium pi-text-sm pi-leading-5'\n            onClick={() => blindTransferOnSelectedDevice(extensionInCall)}\n          >\n            <FontAwesomeIcon className='pi-w-6 pi-h-6 pi-mr-2' icon={faArrowsRepeat} />\n            <span>{t('Switch device.Switch device')}</span>\n          </Button>\n        </div>\n      </div>\n      <CustomThemedTooltip id='tooltip-close-settings' place='bottom' />\n      <CustomThemedTooltip id='tooltip-switch-information' place='bottom' />\n    </>\n  )\n}\n\nexport interface SwitchDeviceViewProps {}\n"],"names":["dispatch","useDispatch","t","useTranslation","userInformation","useSelector","state","currentUser","allUsersInformation","users","activeConversationIds","Object","keys","conversations","filter","id","isEmpty","filteredDevices","getAvailableDevices","_a","useState","hoveredDevice","setHoveredDevice","_b","type","selectedSwitchDevices","setSelectedSwitchDevices","extensionInCall","blindTransferOnSelectedDevice","endpointIdInConversation","device","default_device","island","toggleAvoidToShow","blindTransferFunction","eventDispatch","__awaiter","deviceExtension","changeDefaultDevice","sent","user","updateDefaultDevice","console","log","err_1","updateCurrentDefaultDevice","setTimeout","_c","React","createElement","Fragment","className","FontAwesomeIcon","icon","faCircleInfo","Button","onClick","setIslandView","variant","faXmark","map","key","transferCallOnDevice","onMouseEnter","onMouseLeave","faMobile","faOfficePhone","faUser","description","faCheck","concat","disabled","faArrowsRepeat","CustomThemedTooltip","place"],"mappings":"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"}