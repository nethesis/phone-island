{"version":3,"file":"index.js","sources":["../../../src/components/SettingsView/index.tsx"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { type FC } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState, Dispatch } from '../../store'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faAngleRight,\n  faMicrophone,\n  faPalette,\n  faVideo,\n  faVolumeHigh,\n  faXmark,\n} from '@fortawesome/free-solid-svg-icons'\nimport { Button } from '../Button'\nimport MicrophoneView from './MicrophoneView'\nimport AudioView from './AudioView'\nimport ThemeView from './ThemeView'\nimport { CustomThemedTooltip } from '../CustomThemedTooltip'\nimport { useTranslation } from 'react-i18next'\nimport VideoInputView from './VideoInputView'\n\nexport const SettingsView: FC<SettingsViewProps> = () => {\n  const { settingsView, previousView } = useSelector((state: RootState) => state.island)\n  const { t } = useTranslation()\n  const dispatch = useDispatch<Dispatch>()\n\n  const SettingsMenuItem = ({ icon, label, onClick }) => (\n    <button\n      onClick={onClick}\n      className='pi-flex pi-items-center pi-justify-between pi-px-4 pi-py-3 pi-text-base pi-font-normal pi-leading-6 dark:pi-text-gray-200 pi-text-gray-700 hover:pi-bg-gray-200 dark:hover:pi-bg-gray-700 dark:pi-bg-gray-950 pi-bg-gray-50 pi-rounded-md'\n    >\n      <div className='pi-flex pi-items-center pi-gap-3'>\n        <FontAwesomeIcon icon={icon} className='pi-w-5 pi-h-5' />\n        <span>{label}</span>\n      </div>\n      <FontAwesomeIcon icon={faAngleRight} className='pi-w-5 pi-h-5' />\n    </button>\n  )\n\n  // main settings view\n  const MainSettings = (\n    <div className='pi-flex pi-flex-col pi-w-full'>\n      {/* Header */}\n      <div className='pi-flex pi-items-center pi-justify-between pi-text-gray-900 dark:pi-text-gray-50'>\n        <h1 className='pi-text-lg pi-font-medium pi-leading-7'>{t('Settings.Settings')}</h1>\n        <Button\n          onClick={() => dispatch.island.setIslandView(`${previousView || 'call'}`)}\n          variant='transparentSettings'\n          data-tooltip-id='tooltip-close-settings'\n          data-tooltip-content={t('Common.Close') || ''}\n        >\n          <FontAwesomeIcon icon={faXmark} className='pi-w-5 pi-h-5' />\n        </Button>\n      </div>\n\n      {/* Divider */}\n      <div className='pi-border-t pi-border-gray-300 dark:pi-border-gray-600 pi-mt-1' />\n\n      {/* Menu Items */}\n      <div className='pi-flex pi-flex-col pi-mt-2'>\n        <SettingsMenuItem\n          icon={faMicrophone}\n          label={t('Settings.Microphones')}\n          onClick={() => dispatch.island.setSettingsView('microphone')}\n        />\n        <SettingsMenuItem\n          icon={faVolumeHigh}\n          label={t('Settings.Speakers')}\n          onClick={() => dispatch.island.setSettingsView('audioInput')}\n        />\n        <SettingsMenuItem\n          icon={faVideo}\n          label={t('Settings.Cameras')}\n          onClick={() => dispatch.island.setSettingsView('videoInput')}\n        />\n        <SettingsMenuItem\n          icon={faPalette}\n          label={t('Settings.Theme')}\n          onClick={() => dispatch.island.setSettingsView('theme')}\n        />\n      </div>\n    </div>\n  )\n\n  return (\n    <>\n      {(() => {\n        switch (settingsView) {\n          case 'main':\n            return MainSettings\n          case 'microphone':\n            return <MicrophoneView />\n          case 'audioInput':\n            return <AudioView />\n          case 'videoInput':\n            return <VideoInputView />\n          case 'theme':\n            return <ThemeView />\n          default:\n            return MainSettings\n        }\n      })()}\n      <CustomThemedTooltip id='tooltip-close-settings' place='bottom' />\n    </>\n  )\n}\n\nexport interface SettingsViewProps {}\n"],"names":["_a","useSelector","state","island","settingsView","previousView","t","useTranslation","dispatch","useDispatch","SettingsMenuItem","icon","label","onClick","React","className","createElement","FontAwesomeIcon","faAngleRight","MainSettings","Button","setIslandView","concat","variant","faXmark","faMicrophone","setSettingsView","faVolumeHigh","faVideo","faPalette","Fragment","MicrophoneView","AudioView","VideoInputView","ThemeView","CustomThemedTooltip","id","place"],"mappings":"qtCAuBmD,WAC3C,IAAAA,EAAiCC,EAAAA,aAAY,SAACC,GAAqB,OAAAA,EAAMC,MAAM,IAA7EC,iBAAcC,iBACdC,EAAMC,qBACRC,EAAWC,EAAAA,cAEXC,EAAmB,SAACV,GAAE,IAAAW,SAAMC,EAAKZ,EAAAY,MAAEC,EAAOb,EAAAa,QAAO,OACrDC,EAAAA,gCACED,QAASA,EACTE,UAAU,6OAEVD,EAAAA,QAAKE,cAAA,MAAA,CAAAD,UAAU,oCACbD,EAAC,QAAAE,cAAAC,mBAAgBN,KAAMA,EAAMI,UAAU,kBACvCD,EAAAA,QAAOE,cAAA,OAAA,KAAAJ,IAETE,UAACE,cAAAC,EAAAA,gBAAgB,CAAAN,KAAMO,EAAAA,aAAcH,UAAU,kBATI,EAcjDI,EACJL,EAAAA,QAAKE,cAAA,MAAA,CAAAD,UAAU,iCAEbD,EAAAA,QAAKE,cAAA,MAAA,CAAAD,UAAU,oFACbD,UAAIE,cAAA,KAAA,CAAAD,UAAU,0CAA0CT,EAAE,sBAC1DQ,EAAAA,QAAAE,cAACI,SAAM,CACLP,QAAS,WAAM,OAAAL,EAASL,OAAOkB,cAAc,GAAAC,OAAGjB,GAAgB,QAAjD,EACfkB,QAAQ,sBAAqB,kBACb,yBAAwB,uBAClBjB,EAAE,iBAAmB,IAE3CQ,UAACE,cAAAC,EAAAA,gBAAgB,CAAAN,KAAMa,EAAAA,QAAST,UAAU,oBAK9CD,EAAAA,QAAKE,cAAA,MAAA,CAAAD,UAAU,mEAGfD,EAAAA,QAAKE,cAAA,MAAA,CAAAD,UAAU,+BACbD,EAAC,QAAAE,cAAAN,EACC,CAAAC,KAAMc,eACNb,MAAON,EAAE,wBACTO,QAAS,WAAM,OAAAL,EAASL,OAAOuB,gBAAgB,aAAhC,IAEjBZ,EAAC,QAAAE,cAAAN,EACC,CAAAC,KAAMgB,eACNf,MAAON,EAAE,qBACTO,QAAS,WAAM,OAAAL,EAASL,OAAOuB,gBAAgB,aAAhC,IAEjBZ,EAAC,QAAAE,cAAAN,EACC,CAAAC,KAAMiB,UACNhB,MAAON,EAAE,oBACTO,QAAS,WAAM,OAAAL,EAASL,OAAOuB,gBAAgB,aAAhC,IAEjBZ,UAAAE,cAACN,EAAgB,CACfC,KAAMkB,EAAAA,UACNjB,MAAON,EAAE,kBACTO,QAAS,WAAM,OAAAL,EAASL,OAAOuB,gBAAgB,QAAQ,MAM/D,OACEZ,UAAAE,cAAAF,EAAA,QAAAgB,SAAA,KACG,WACC,OAAQ1B,GACN,IAAK,OAUL,QACE,OAAOe,EATT,IAAK,aACH,OAAOL,UAAAE,cAACe,EAAc,QAAA,MACxB,IAAK,aACH,OAAOjB,UAAAE,cAACgB,EAAS,QAAA,MACnB,IAAK,aACH,OAAOlB,UAAAE,cAACiB,EAAc,QAAA,MACxB,IAAK,QACH,OAAOnB,UAAAE,cAACkB,EAAS,QAAA,MAItB,CAfA,GAgBDpB,UAAAE,cAACmB,EAAAA,oBAAmB,CAACC,GAAG,yBAAyBC,MAAM,WAG7D"}