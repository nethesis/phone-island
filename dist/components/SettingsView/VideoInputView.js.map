{"version":3,"file":"VideoInputView.js","sources":["../../../src/components/SettingsView/VideoInputView.tsx"],"sourcesContent":["// Copyright (C) 2025 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState, store } from '../../store'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faVideo } from '@fortawesome/free-solid-svg-icons'\nimport { t } from 'i18next'\nimport { eventDispatch, setJSONItem, useEventListener } from '../../utils'\nimport { SettingsHeader } from './SettingsHeader'\nimport { getCurrentVideoInputDeviceId } from '../../lib/devices/devices'\n\nconst VideoInputView = () => {\n  const { sipcall }: any = useSelector((state: RootState) => state.webrtc)\n\n  const [selectedVideoInput, setSelectedVideoInput] = useState<string | null>(\n    getCurrentVideoInputDeviceId() || null,\n  )\n  const videoInputDevices = store.select.mediaDevices.videoInputDevices(store.getState())\n\n  const handleClickVideoInput = (videoInputDevice: string) => {\n    setSelectedVideoInput(videoInputDevice)\n\n    if (sipcall.webrtcStuff.myStream) {\n      sipcall?.replaceTracks({\n        tracks: [\n          {\n            type: 'video',\n            mid: '1',\n            capture: { deviceId: { exact: videoInputDevice } },\n          },\n        ],\n        success: function () {\n          console.info('Video input device switch success')\n          setJSONItem('phone-island-video-input-device', { deviceId: videoInputDevice })\n          eventDispatch('phone-island-call-video-input-switched', {})\n        },\n        error: function (err) {\n          console.error('Video input device switch error:', err)\n        },\n      })\n    } else {\n      setJSONItem('phone-island-video-input-device', { deviceId: videoInputDevice })\n      eventDispatch('phone-island-call-video-input-switched', {})\n    }\n  }\n\n  useEventListener('phone-island-call-video-input-switch', (data: DeviceInputOutputTypes) => {\n    handleClickVideoInput(data.deviceId)\n  })\n\n  const [hoveredDevice, setHoveredDevice] = useState<string | null>(null)\n\n  return (\n    <div className='pi-flex pi-flex-col pi-w-full'>\n      {/* Title */}\n      <SettingsHeader title={t('Settings.Cameras')} tooltipPrefix='video' />\n\n      {/* Video input list */}\n      <div className='pi-flex pi-flex-col pi-mt-2 pi-space-y-1 pi-max-h-48 pi-overflow-y-auto pi-scrollbar-thin pi-scrollbar-thumb-gray-400 pi-dark:scrollbar-thumb-gray-400 pi-scrollbar-thumb-rounded-full pi-scrollbar-thumb-opacity-50 dark:pi-scrollbar-track-gray-900 pi-scrollbar-track-gray-200 pi-dark:scrollbar-track-gray-900 pi-scrollbar-track-rounded-full pi-scrollbar-track-opacity-25'>\n        {videoInputDevices.map((videoDevice, index) => (\n          <div\n            key={index}\n            className='pi-flex pi-items-center pi-justify-between pi-px-4 pi-py-3 pi-text-base pi-font-normal pi-leading-6 dark:pi-text-gray-200 pi-text-gray-700 hover:pi-bg-gray-200 dark:hover:pi-bg-gray-700 dark:pi-bg-gray-950 pi-bg-gray-50 pi-rounded-md pi-cursor-pointer'\n            onClick={() => handleClickVideoInput(videoDevice?.deviceId)}\n            onMouseEnter={() => setHoveredDevice(videoDevice?.deviceId)}\n            onMouseLeave={() => setHoveredDevice(null)}\n          >\n            <div className='pi-flex pi-items-center'>\n              <FontAwesomeIcon icon={faVideo} className=' pi-mr-2' />\n              <span>{videoDevice?.label || `Input device ${index + 1}`}</span>\n            </div>\n            <div className='pi-flex pi-items-center'>\n              {selectedVideoInput === videoDevice?.deviceId && (\n                <FontAwesomeIcon\n                  icon={faCheck}\n                  className={`${\n                    hoveredDevice === videoDevice?.deviceId\n                      ? 'pi-text-gray-500 dark:pi-text-gray-200'\n                      : 'pi-text-green-600 dark:pi-text-green-400'\n                  }`}\n                />\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\ninterface DeviceInputOutputTypes {\n  deviceId: string\n}\n\nexport default VideoInputView\n"],"names":["sipcall","useSelector","state","webrtc","_a","useState","getCurrentVideoInputDeviceId","selectedVideoInput","setSelectedVideoInput","videoInputDevices","store","select","mediaDevices","getState","handleClickVideoInput","videoInputDevice","webrtcStuff","myStream","replaceTracks","tracks","type","mid","capture","deviceId","exact","success","console","info","setJSONItem","eventDispatch","error","err","useEventListener","data","_b","hoveredDevice","setHoveredDevice","React","createElement","className","SettingsHeader","title","t","tooltipPrefix","map","videoDevice","index","key","onClick","onMouseEnter","onMouseLeave","FontAwesomeIcon","icon","faVideo","label","faCheck","concat"],"mappings":"6yBAauB,WACb,IAAAA,EAAiBC,eAAY,SAACC,GAAqB,OAAAA,EAAMC,kBAE3DC,EAA8CC,EAAQA,SAC1DC,kCAAkC,MAD7BC,EAAkBH,EAAA,GAAEI,OAGrBC,EAAoBC,EAAKA,MAACC,OAAOC,aAAaH,kBAAkBC,EAAKA,MAACG,YAEtEC,EAAwB,SAACC,GAC7BP,EAAsBO,GAElBf,EAAQgB,YAAYC,SACtBjB,SAAAA,EAASkB,cAAc,CACrBC,OAAQ,CACN,CACEC,KAAM,QACNC,IAAK,IACLC,QAAS,CAAEC,SAAU,CAAEC,MAAOT,MAGlCU,QAAS,WACPC,QAAQC,KAAK,qCACbC,EAAAA,YAAY,kCAAmC,CAAEL,SAAUR,IAC3Dc,gBAAc,yCAA0C,CAAA,EACzD,EACDC,MAAO,SAAUC,GACfL,QAAQI,MAAM,mCAAoCC,EACnD,KAGHH,EAAAA,YAAY,kCAAmC,CAAEL,SAAUR,IAC3Dc,gBAAc,yCAA0C,CAAA,GAE5D,EAEAG,mBAAiB,wCAAwC,SAACC,GACxDnB,EAAsBmB,EAAKV,SAC7B,IAEM,IAAAW,EAAoC7B,EAAAA,SAAwB,MAA3D8B,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEtC,OACEG,EAAA,QAAAC,cAAA,MAAA,CAAKC,UAAU,iCAEbF,UAAAC,cAACE,EAAcA,eAAA,CAACC,MAAOC,EAACA,EAAC,oBAAqBC,cAAc,UAG5DN,EAAAA,QAAAC,cAAA,MAAA,CAAKC,UAAU,oXACZ9B,EAAkBmC,KAAI,SAACC,EAAaC,GAAU,OAC7CT,EAAAA,QACEC,cAAA,MAAA,CAAAS,IAAKD,EACLP,UAAU,8PACVS,QAAS,WAAM,OAAAlC,EAAsB+B,aAAA,EAAAA,EAAatB,SAAS,EAC3D0B,aAAc,WAAM,OAAAb,EAAiBS,aAAW,EAAXA,EAAatB,SAA9B,EACpB2B,aAAc,WAAM,OAAAd,EAAiB,QAErCC,EAAAA,QAAKC,cAAA,MAAA,CAAAC,UAAU,2BACbF,EAAC,QAAAC,cAAAa,mBAAgBC,KAAMC,UAASd,UAAU,aAC1CF,EAAA,QAAAC,cAAA,OAAA,MAAOO,eAAAA,EAAaS,QAAS,uBAAgBR,EAAQ,KAEvDT,EAAA,QAAAC,cAAA,MAAA,CAAKC,UAAU,2BACZhC,KAAuBsC,eAAAA,EAAatB,WACnCc,EAAAA,QAAAC,cAACa,EAAAA,gBAAe,CACdC,KAAMG,EAAOA,QACbhB,UAAW,GACTiB,OAAArB,KAAkBU,aAAW,EAAXA,EAAatB,UAC3B,yCACA,+CAMf,KAIT"}