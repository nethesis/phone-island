{"version":3,"file":"MicrophoneView.js","sources":["../../../src/components/SettingsView/MicrophoneView.tsx"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState, store } from '../../store'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faMicrophone } from '@fortawesome/free-solid-svg-icons'\nimport { eventDispatch, setJSONItem, useEventListener } from '../../utils'\nimport { SettingsHeader } from './SettingsHeader'\nimport { useTranslation } from 'react-i18next'\nimport { getCurrentAudioInputDeviceId } from '../../lib/devices/devices'\n\nconst MicrophoneView = () => {\n  const { sipcall }: any = useSelector((state: RootState) => state.webrtc)\n  const { t } = useTranslation()\n\n  const [selectedAudioInput, setSelectedAudioInput] = useState<string | null>(\n    getCurrentAudioInputDeviceId() || null,\n  )\n  const audioInputDevices = store.select.mediaDevices.audioInputDevices(store.getState())\n\n  const handleClickAudioInput = (audioInputDevice: string) => {\n    setSelectedAudioInput(audioInputDevice)\n\n    if (sipcall.webrtcStuff.myStream) {\n      sipcall?.replaceTracks({\n        tracks: [\n          {\n            type: 'audio',\n            mid: '0',\n            capture: { deviceId: { exact: audioInputDevice } },\n          },\n        ],\n        success: function () {\n          console.info('Audio input device switch success!')\n          setJSONItem('phone-island-audio-input-device', { deviceId: audioInputDevice })\n          eventDispatch('phone-island-call-audio-input-switched', {})\n        },\n        error: function (err) {\n          console.error('Audio input device switch error:', err)\n        },\n      })\n    } else {\n      setJSONItem('phone-island-audio-input-device', { deviceId: audioInputDevice })\n      eventDispatch('phone-island-call-audio-input-switched', {})\n    }\n  }\n\n  useEventListener('phone-island-call-audio-input-switch', (data: DeviceInputOutputTypes) => {\n    handleClickAudioInput(data.deviceId)\n  })\n\n  const [hoveredDevice, setHoveredDevice] = useState<string | null>(null)\n\n  return (\n    <div className='pi-flex pi-flex-col pi-w-full'>\n      {/* Title */}\n      <SettingsHeader title={t('Settings.Microphones')} tooltipPrefix='microphone' />\n\n      {/* Microphone List */}\n      <div className='pi-flex pi-flex-col pi-mt-2 pi-space-y-1 pi-max-h-48 pi-overflow-y-auto pi-scrollbar-thin pi-scrollbar-thumb-gray-400 pi-dark:scrollbar-thumb-gray-400 pi-scrollbar-thumb-rounded-full pi-scrollbar-thumb-opacity-50 dark:pi-scrollbar-track-gray-900 pi-scrollbar-track-gray-200 pi-dark:scrollbar-track-gray-900 pi-scrollbar-track-rounded-full pi-scrollbar-track-opacity-25'>\n        {audioInputDevices.map((audioDevice, index) => (\n          <div\n            key={index}\n            className='pi-flex pi-items-center pi-justify-between pi-px-4 pi-py-3 pi-text-base pi-font-normal pi-leading-6 dark:pi-text-gray-200 pi-text-gray-700 hover:pi-bg-gray-200 dark:hover:pi-bg-gray-700 dark:pi-bg-gray-950 pi-bg-gray-50 pi-rounded-md pi-cursor-pointer'\n            onClick={() => handleClickAudioInput(audioDevice?.deviceId)}\n            onMouseEnter={() => setHoveredDevice(audioDevice?.deviceId)}\n            onMouseLeave={() => setHoveredDevice(null)}\n          >\n            <div className='pi-flex pi-items-center'>\n              <FontAwesomeIcon icon={faMicrophone} className='pi-mr-2 pi-w-5 pi-h-5' />\n              <span>{audioDevice?.label || `Input device ${index + 1}`}</span>\n            </div>\n            <div className='pi-flex pi-items-center'>\n              {selectedAudioInput === audioDevice?.deviceId && (\n                <FontAwesomeIcon\n                  icon={faCheck}\n                  className={`${\n                    hoveredDevice === audioDevice?.deviceId\n                      ? 'pi-text-gray-700 dark:pi-text-gray-200'\n                      : 'pi-text-emerald-700 dark:pi-text-emerald-500'\n                  } pi-w-5 pi-h-5`}\n                />\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\ninterface DeviceInputOutputTypes {\n  deviceId: string\n}\n\nexport default MicrophoneView\n"],"names":["sipcall","useSelector","state","webrtc","t","useTranslation","_a","useState","getCurrentAudioInputDeviceId","selectedAudioInput","setSelectedAudioInput","audioInputDevices","store","select","mediaDevices","getState","handleClickAudioInput","audioInputDevice","webrtcStuff","myStream","replaceTracks","tracks","type","mid","capture","deviceId","exact","success","console","info","setJSONItem","eventDispatch","error","err","useEventListener","data","_b","hoveredDevice","setHoveredDevice","React","createElement","className","SettingsHeader","title","tooltipPrefix","map","audioDevice","index","key","onClick","onMouseEnter","onMouseLeave","FontAwesomeIcon","icon","faMicrophone","label","faCheck","concat"],"mappings":"4uCAauB,WACb,IAAAA,EAAiBC,eAAY,SAACC,GAAqB,OAAAA,EAAMC,kBACzDC,EAAMC,qBAERC,EAA8CC,EAAQA,SAC1DC,kCAAkC,MAD7BC,EAAkBH,EAAA,GAAEI,OAGrBC,EAAoBC,EAAKA,MAACC,OAAOC,aAAaH,kBAAkBC,EAAKA,MAACG,YAEtEC,EAAwB,SAACC,GAC7BP,EAAsBO,GAElBjB,EAAQkB,YAAYC,SACtBnB,SAAAA,EAASoB,cAAc,CACrBC,OAAQ,CACN,CACEC,KAAM,QACNC,IAAK,IACLC,QAAS,CAAEC,SAAU,CAAEC,MAAOT,MAGlCU,QAAS,WACPC,QAAQC,KAAK,sCACbC,EAAAA,YAAY,kCAAmC,CAAEL,SAAUR,IAC3Dc,gBAAc,yCAA0C,CAAA,EACzD,EACDC,MAAO,SAAUC,GACfL,QAAQI,MAAM,mCAAoCC,EACnD,KAGHH,EAAAA,YAAY,kCAAmC,CAAEL,SAAUR,IAC3Dc,gBAAc,yCAA0C,CAAA,GAE5D,EAEAG,mBAAiB,wCAAwC,SAACC,GACxDnB,EAAsBmB,EAAKV,SAC7B,IAEM,IAAAW,EAAoC7B,EAAAA,SAAwB,MAA3D8B,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEtC,OACEG,EAAA,QAAAC,cAAA,MAAA,CAAKC,UAAU,iCAEbF,UAAAC,cAACE,EAAcA,eAAA,CAACC,MAAOvC,EAAE,wBAAyBwC,cAAc,eAGhEL,EAAAA,QAAAC,cAAA,MAAA,CAAKC,UAAU,oXACZ9B,EAAkBkC,KAAI,SAACC,EAAaC,GAAU,OAC7CR,EAAAA,QACEC,cAAA,MAAA,CAAAQ,IAAKD,EACLN,UAAU,8PACVQ,QAAS,WAAM,OAAAjC,EAAsB8B,aAAA,EAAAA,EAAarB,SAAS,EAC3DyB,aAAc,WAAM,OAAAZ,EAAiBQ,aAAW,EAAXA,EAAarB,SAA9B,EACpB0B,aAAc,WAAM,OAAAb,EAAiB,QAErCC,EAAAA,QAAKC,cAAA,MAAA,CAAAC,UAAU,2BACbF,EAAC,QAAAC,cAAAY,mBAAgBC,KAAMC,eAAcb,UAAU,0BAC/CF,EAAA,QAAAC,cAAA,OAAA,MAAOM,eAAAA,EAAaS,QAAS,uBAAgBR,EAAQ,KAEvDR,EAAA,QAAAC,cAAA,MAAA,CAAKC,UAAU,2BACZhC,KAAuBqC,eAAAA,EAAarB,WACnCc,EAAAA,QAAAC,cAACY,EAAAA,gBAAe,CACdC,KAAMG,EAAOA,QACbf,UAAW,GACTgB,OAAApB,KAAkBS,aAAW,EAAXA,EAAarB,UAC3B,yCACA,+CACU,qBAKzB,KAIT"}