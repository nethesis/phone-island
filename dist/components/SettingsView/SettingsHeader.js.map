{"version":3,"file":"SettingsHeader.js","sources":["../../../src/components/SettingsView/SettingsHeader.tsx"],"sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleLeft, faXmark } from '@fortawesome/free-solid-svg-icons'\nimport { Button } from '../Button'\nimport { Dispatch, RootState } from '../../store'\nimport { CustomThemedTooltip } from '../CustomThemedTooltip'\nimport { useTranslation } from 'react-i18next'\n\ninterface SettingsHeaderProps {\n  title: string\n  tooltipPrefix: string\n}\n\nexport const SettingsHeader: React.FC<SettingsHeaderProps> = ({ title, tooltipPrefix }) => {\n  const dispatch = useDispatch<Dispatch>()\n  const { t } = useTranslation()\n  const { previousView } = useSelector((state: RootState) => state.island)\n\n  const closeSettings = () => {\n    // Reset settings view to main\n    dispatch.island.setSettingsView('main')\n    // Go to previous view (e.g. 'call' or 'video')\n    dispatch.island.setIslandView(`${previousView || 'call'}`)\n  }\n\n  return (\n    <>\n      <div className='pi-flex pi-items-center pi-justify-between'>\n        <div className='pi-flex pi-items-center pi-gap-2 pi-text-gray-900 dark:pi-text-gray-50'>\n          <Button\n            onClick={() => dispatch.island.setSettingsView('main')}\n            variant='transparentSettings'\n            data-tooltip-id={`tooltip-back-${tooltipPrefix}-settings`}\n            data-tooltip-content={t('Common.Back') || ''}\n          >\n            <FontAwesomeIcon icon={faAngleLeft} className='pi-w-5 pi-h-5' />\n          </Button>\n          <h1 className='pi-text-lg pi-font-medium pi-leading-7'>{title}</h1>\n        </div>\n        <Button\n          onClick={() => closeSettings()}\n          variant='transparentSettings'\n          data-tooltip-id={`tooltip-close-${tooltipPrefix}-settings`}\n          data-tooltip-content={t('Common.Close') || ''}\n        >\n          <FontAwesomeIcon icon={faXmark} className='pi-w-5 pi-h-5' />\n        </Button>\n      </div>\n      {/* Divider */}\n      <div className='pi-border-t pi-border-gray-300 dark:pi-border-gray-600 pi-mt-1' />\n      <CustomThemedTooltip id={`tooltip-back-${tooltipPrefix}-settings`} place='bottom' />\n      <CustomThemedTooltip id={`tooltip-close-${tooltipPrefix}-settings`} place='bottom' />\n    </>\n  )\n}\n"],"names":["_a","title","tooltipPrefix","dispatch","useDispatch","t","useTranslation","previousView","useSelector","state","island","React","createElement","Fragment","className","Button","onClick","setSettingsView","variant","concat","FontAwesomeIcon","icon","faAngleLeft","setIslandView","faXmark","CustomThemedTooltip","id","place"],"mappings":"6lCAc6D,SAACA,OAAEC,EAAKD,EAAAC,MAAEC,EAAaF,EAAAE,cAC5EC,EAAWC,EAAAA,cACTC,EAAMC,qBACNC,EAAiBC,eAAY,SAACC,GAAqB,OAAAA,EAAMC,uBASjE,OACEC,UAAAC,cAAAD,EAAA,QAAAE,SAAA,KACEF,EAAAA,QAAKC,cAAA,MAAA,CAAAE,UAAU,8CACbH,EAAAA,QAAKC,cAAA,MAAA,CAAAE,UAAU,0EACbH,EAAAA,QAAAC,cAACG,SAAM,CACLC,QAAS,WAAM,OAAAb,EAASO,OAAOO,gBAAgB,OAAO,EACtDC,QAAQ,sBAAqB,kBACZ,gBAAgBC,OAAAjB,EAAwB,aAAA,uBACnCG,EAAE,gBAAkB,IAE1CM,UAACC,cAAAQ,EAAAA,gBAAgB,CAAAC,KAAMC,EAAAA,YAAaR,UAAU,mBAEhDH,EAAA,QAAAC,cAAA,KAAA,CAAIE,UAAU,0CAA0Cb,IAE1DU,UAACC,cAAAG,EAAMA,OACL,CAAAC,QAAS,WAAM,OApBrBb,EAASO,OAAOO,gBAAgB,aAEhCd,EAASO,OAAOa,cAAc,GAAGJ,OAAAZ,GAAgB,QAkBb,EAC9BW,QAAQ,sBAAqB,kBACZ,iBAAiBC,OAAAjB,EAAwB,aAAA,uBACpCG,EAAE,iBAAmB,IAE3CM,UAACC,cAAAQ,EAAAA,gBAAgB,CAAAC,KAAMG,EAAAA,QAASV,UAAU,oBAI9CH,EAAAA,QAAKC,cAAA,MAAA,CAAAE,UAAU,mEACfH,EAAAA,QAACC,cAAAa,sBAAoB,CAAAC,GAAI,gBAAAP,OAAgBjB,EAAa,aAAayB,MAAM,WACzEhB,EAAAA,QAAAC,cAACa,EAAAA,oBAAmB,CAACC,GAAI,wBAAiBxB,EAAa,aAAayB,MAAM,WAGhF"}