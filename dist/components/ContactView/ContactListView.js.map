{"version":3,"file":"ContactListView.js","sources":["../../../src/components/ContactView/ContactListView.tsx"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { type FC, useEffect, useState, FormEvent, useRef, useMemo } from 'react'\nimport { Button } from '../Button'\nimport { RootState } from '../../store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { backToPreviousView } from '../../lib/island/island'\nimport {\n  faPhone,\n  faArrowLeft,\n  faUser,\n  faBuilding,\n  faAngleRight,\n  faHeadset,\n} from '@fortawesome/free-solid-svg-icons'\nimport { UserEndpointsTypes } from '../../types'\nimport {\n  clickTransferOrConference,\n  handleAttendedTransfer,\n  isInsideConferenceList,\n} from '../../lib/phone/call'\nimport { Dispatch } from '../../store'\nimport { unpauseCurrentCall } from '../../lib/phone/call'\nimport { useTranslation } from 'react-i18next'\nimport { useEventListener, eventDispatch } from '../../utils'\nimport { CustomThemedTooltip } from '../CustomThemedTooltip'\nimport { getMainPhoneNumber, getTotalPhoneNumbers, searchPhonebook } from '../../services/phonebook'\nimport { PhonebookContact } from '../../types/phonebook'\nimport { SelectContactNumberView } from './SelectContactNumberView'\nimport debounce from 'lodash/debounce'\nimport ListAvatar from './ListAvatar'\n\nconst USERS_NUMBER_PER_PAGE = 10\nconst SHOW_LIST_GRADIENT_DISTANCE = 3\n\nexport const ContactListView: FC<ContactListViewProps> = () => {\n  const { isOpen, contactListView } = useSelector((state: RootState) => state.island)\n  const { endpoints } = useSelector((state: RootState) => state.users)\n  const { username } = useSelector((state: RootState) => state.currentUser)\n  const [loaded, setLoaded] = useState<boolean>(false)\n  const [filteredOperators, setFilteredOperators] = useState<UserEndpointsTypes[]>([])\n  const [filteredPhonebookContacts, setFilteredPhonebookContacts] = useState<PhonebookContact[]>([])\n  const [currentContact, setCurrentContact] = useState<PhonebookContact>()\n  const [firstPhonebookLoading, setFirstPhonebookLoading] = useState(true)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [showPhoneNumberTyped, setShowPhoneNumberTyped] = useState<boolean>()\n  const relativeRef = useRef<HTMLDivElement>(null)\n  const [showGradient, setShowGradient] = useState<boolean>(false)\n  const [showingUsers, setShowingUsers] = useState<number>(USERS_NUMBER_PER_PAGE)\n  const dispatch = useDispatch<Dispatch>()\n\n  const filteredContacts = useMemo(() => {\n    return [...filteredOperators, ...filteredPhonebookContacts]\n  }, [filteredOperators, filteredPhonebookContacts])\n\n  // debounce phonebook search\n  const debouncedSearchPhonebookContacts = useRef(\n    debounce((value: string) => {\n      retrievePhonebookContacts(value)\n    }, 300), // debounce delay\n  ).current\n\n  // cleanup the debounce function on unmount\n  useEffect(() => {\n    return () => {\n      debouncedSearchPhonebookContacts.cancel()\n    }\n  }, [debouncedSearchPhonebookContacts])\n\n  function searchQueryChanged(event: FormEvent<HTMLInputElement>) {\n    setSearchQuery(event.currentTarget.value)\n    debouncedSearchPhonebookContacts(event.currentTarget.value)\n    filterOperators(event.currentTarget.value)\n  }\n\n  function retrieveContacts() {\n    filterOperators(searchQuery)\n\n    // load phonebook contacts only once\n\n    if (firstPhonebookLoading) {\n      retrievePhonebookContacts(searchQuery)\n      setFirstPhonebookLoading(false)\n    }\n  }\n\n  function filterOperators(textQuery: string = '') {\n    textQuery = textQuery.trim().toLowerCase()\n\n    if (endpoints) {\n      const operators = Object.values(endpoints).filter(\n        (userEndpoints: UserEndpointsTypes) =>\n          // Remove the currentUser from the list\n          userEndpoints.username !== username &&\n          (userEndpoints.endpoints.extension.find((extension) =>\n            extension.id.toLowerCase().startsWith(textQuery),\n          ) ||\n            userEndpoints.username.toLowerCase().includes(textQuery) ||\n            userEndpoints.name.toLowerCase().includes(textQuery)),\n      )\n      setFilteredOperators(operators)\n    }\n  }\n\n  async function retrievePhonebookContacts(textQuery: string = '') {\n    setLoaded(false)\n    textQuery = textQuery.trim().toLowerCase()\n\n    // phone number typed\n\n    if (/^[0-9*#+]+$/.test(textQuery)) {\n      setShowPhoneNumberTyped(true)\n    } else {\n      setShowPhoneNumberTyped(false)\n    }\n\n    // search phonebook\n\n    try {\n      const phonebookSearchResult = await searchPhonebook(1, textQuery, '')\n      setFilteredPhonebookContacts(phonebookSearchResult.rows)\n    } catch (error) {\n      console.error('Error fetching phonebook:', error)\n    }\n    setLoaded(true)\n  }\n\n  useEventListener('phone-island-call-transfer', (data: CallStartTypes) => {\n    handleAttendedTransfer(data.number, dispatch)\n    eventDispatch('phone-island-call-transfer-opened', {})\n  })\n\n  // Retrieve\n  useEffect(() => {\n    if (endpoints && username) {\n      retrieveContacts()\n    }\n  }, [endpoints, username])\n\n  useEffect(() => {\n    // Handle users list scrolling\n    const handleScroll = () => {\n      setShowGradient(\n        relativeRef.current && relativeRef.current.scrollTop > SHOW_LIST_GRADIENT_DISTANCE\n          ? true\n          : false,\n      )\n      // Manage scroll to bottom\n      if (\n        relativeRef.current &&\n        relativeRef.current?.offsetHeight + relativeRef.current?.scrollTop >=\n          relativeRef.current?.scrollHeight - 10\n      ) {\n        // Improve showing users\n        setShowingUsers((state) => state + USERS_NUMBER_PER_PAGE)\n      }\n    }\n    // Manage expansion and collapsing\n    if (isOpen) {\n      relativeRef.current?.addEventListener('scroll', handleScroll)\n    } else {\n      relativeRef.current?.removeEventListener('scroll', handleScroll)\n    }\n    return () => relativeRef.current?.removeEventListener('scroll', handleScroll)\n  }, [isOpen])\n\n  function handleBackClick() {\n    if (isInsideConferenceList()) {\n      // Close the conference list\n      eventDispatch('phone-island-conference-list-close', {})\n    }\n    // Open the call view\n    backToPreviousView()\n  }\n\n  function isUserEndpointsType(obj: any): obj is UserEndpointsTypes {\n    return obj && typeof obj === 'object' && 'endpoints' in obj && 'username' in obj\n  }\n\n  function isPhonebookContact(obj: any): obj is PhonebookContact {\n    return obj && typeof obj === 'object' && 'source' in obj && 'name' in obj\n  }\n\n  function goToSelectNumberView(phonebookContact: PhonebookContact): void {\n    setCurrentContact(phonebookContact)\n    dispatch.island.setContactListView('selectContactNumber')\n  }\n\n  const { t } = useTranslation()\n\n  const mainView = (\n    <div className='pi-relative pi-flex pi-flex-col'>\n      {/* Top section */}\n      <div className='pi-relative pi-z-50'>\n        <div className='pi-flex pi-gap-4'>\n          <Button\n            variant='transparent'\n            onClick={handleBackClick}\n            data-tooltip-id='contact-list-tooltip-back-to-call'\n            data-tooltip-content={t('Tooltip.Back to call') || ''}\n          >\n            <FontAwesomeIcon className='pi-h-6 pi-w-6' icon={faArrowLeft} />\n          </Button>\n          <input\n            data-stop-propagation={true}\n            type='text'\n            onChange={searchQueryChanged}\n            value={searchQuery}\n            placeholder={t('Common.Search contact or phone number') || ''}\n            autoFocus\n            spellCheck={false}\n            className='pi-w-full pi-rounded-full dark:pi-bg-gray-950 pi-bg-gray-50 pi-border-2 pi-border-emerald-500 dark:pi-border-emerald-200 active:pi-border-emerald-500 dark:active:pi-border-emerald-200 focus:pi-border-emerald-500 dark:focus:pi-border-emerald-200 pi-text-gray-900 dark:pi-text-gray-50 pi-font-light pi-text-sm pi-px-5 focus:pi-outline-0 focus:pi-ring-0 pi-placeholder-gray-400 dark:pi-placeholder-gray-500 pi-font-[inherit]'\n          />\n        </div>\n      </div>\n      {/* skeleton loader */}\n      {!loaded && (\n        <div className='pi-mt-6'>\n          {Array.from({ length: 5 }).map((_, i) => (\n            <div\n              key={i}\n              className='pi-animate-pulse pi-flex pi-items-center pi-space-x-4 pi-px-3 pi-py-1'\n            >\n              <div className='pi-flex pi-items-center pi-justify-center'>\n                <div className='pi-rounded-full pi-h-12 pi-w-12 pi-bg-gray-300 dark:pi-bg-gray-700'></div>\n              </div>\n              <div className='pi-flex pi-flex-col pi-gap-2 pi-w-full'>\n                <div className='pi-h-3 pi-w-4/5 pi-rounded pi-bg-gray-300 dark:pi-bg-gray-700'></div>\n                <div className='pi-h-3 pi-w-1/2 pi-rounded pi-bg-gray-300 dark:pi-bg-gray-700'></div>\n              </div>\n              <div className='pi-flex pi-items-center pi-justify-center pi-pr-2'>\n                <div className='pi-rounded-full pi-h-12 pi-w-12 pi-bg-gray-300 dark:pi-bg-gray-700'></div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* contact list */}\n      <div className={!loaded ? 'pi-hidden' : ''}>\n        {/* List shadow */}\n        <div className='pi-z-30 pi-h-6 pi-pointer-events-none pi-bg-transparent pi-mt-7 pi-pr-4'>\n          {showGradient && (\n            <div className='pi-h-6 pi-w-full pi-bg-gradient-to-b dark:pi-from-black pi-from-gray-100 pi-to-transparent pi-z-100'></div>\n          )}\n        </div>\n        <div style={{ marginTop: '-22px' }} className='pi-flex pi-flex-col pi-gap-7'>\n          {/* List section */}\n          <div\n            style={{ height: '17rem' }}\n            ref={relativeRef}\n            className='pi-relative pi-w-full pi-flex pi-flex-col pi-gap-1 pi-overflow-y-auto pi-overflow-x-hidden pi-scrollbar-thin pi-scrollbar-thumb-gray-400 pi-scrollbar-thumb-rounded-full pi-scrollbar-thumb-opacity-50 dark:pi-scrollbar-track-gray-900 pi-scrollbar-track-gray-200 pi-scrollbar-track-rounded-full pi-scrollbar-track-opacity-25'\n          >\n            {/* The custom searched number */}\n            {showPhoneNumberTyped && (\n              <div className='pi-flex pi-items-center pi-w-full pi-justify-between pi-px-3 pi-py-1 pi-rounded-md hover:pi-bg-gray-200 hover:dark:pi-bg-gray-800'>\n                <div className='pi-flex pi-items-center pi-gap-4'>\n                  <ListAvatar placeHolderIcon={faUser} />\n                  <div>\n                    <div className='pi-h-fit pi-max-w-48 pi-truncate pi-text-sm pi-font-medium'>\n                      {t('Common.Phone number entered')}\n                    </div>\n                    <div className='pi-text-sm pi-max-w-48 pi-text-gray-700 dark:pi-text-gray-300'>\n                      {searchQuery}\n                    </div>\n                  </div>\n                </div>\n                <div className='pi-flex pi-gap-3.5'>\n                  <Button\n                    onClick={() => clickTransferOrConference(searchQuery, dispatch)}\n                    variant='green'\n                    data-tooltip-id='contact-list-tooltip-call-to-transfer'\n                    data-tooltip-content={\n                      isInsideConferenceList()\n                        ? t('Conference.Add participant')\n                        : t('Tooltip.Transfer call')\n                    }\n                  >\n                    <FontAwesomeIcon className='pi-h-6 pi-w-6' icon={faPhone} />\n                  </Button>\n                </div>\n              </div>\n            )}\n            {/* Operators and phonebook contacts list */}\n            {filteredContacts &&\n              filteredContacts.slice(0, showingUsers).map((filteredContact, i) => (\n                <div\n                  key={i}\n                  className='pi-flex pi-items-center pi-w-full pi-justify-between pi-px-3 pi-py-1 pi-rounded-md hover:pi-bg-gray-200 hover:dark:pi-bg-gray-800'\n                >\n                  <div className='pi-flex pi-items-center pi-gap-4'>\n                    {(() => {\n                      if (isUserEndpointsType(filteredContact)) {\n                        return (\n                          <>\n                            <ListAvatar\n                              username={filteredContact?.username}\n                              status={filteredContact?.mainPresence}\n                              placeHolderIcon={faHeadset}\n                            />\n                            <div>\n                              <div\n                                data-stop-propagation={true}\n                                className={`pi-h-fit pi-max-w-48 pi-truncate pi-text-sm pi-font-medium`}\n                              >\n                                {filteredContact.name}\n                              </div>\n                              <div className='pi-text-sm pi-max-w-48 pi-text-gray-700 dark:pi-text-gray-300'>\n                                {filteredContact?.endpoints?.mainextension[0]?.id}\n                              </div>\n                            </div>\n                          </>\n                        )\n                      } else if (isPhonebookContact(filteredContact)) {\n                        return (\n                          <>\n                            <ListAvatar\n                              placeHolderIcon={\n                                filteredContact.kind === 'person' ? faUser : faBuilding\n                              }\n                            />\n                            <div>\n                              <div\n                                data-stop-propagation={true}\n                                className='pi-h-fit pi-max-w-48 pi-truncate pi-text-sm pi-font-medium'\n                              >\n                                {filteredContact.displayName || '-'}\n                              </div>\n                              <div className='pi-text-sm pi-max-w-48 pi-text-gray-700 dark:pi-text-gray-300'>\n                                <span>{getMainPhoneNumber(filteredContact) || '-'}</span>\n                                {getTotalPhoneNumbers(filteredContact) > 1 && (\n                                  <span className='pi-ml-2'>\n                                    {t('Common.plus_x_others', {\n                                      count: getTotalPhoneNumbers(filteredContact) - 1,\n                                    })}\n                                  </span>\n                                )}\n                              </div>\n                            </div>\n                          </>\n                        )\n                      }\n                    })()}\n                  </div>\n                  <div className='pi-flex pi-gap-3.5'>\n                    {(() => {\n                      if (isUserEndpointsType(filteredContact)) {\n                        return (\n                          <Button\n                            onClick={() =>\n                              filteredContact.mainPresence === 'online' &&\n                              clickTransferOrConference(\n                                filteredContact?.endpoints?.mainextension[0]?.id,\n                                dispatch,\n                              )\n                            }\n                            variant='green'\n                            disabled={filteredContact.mainPresence !== 'online'}\n                            data-tooltip-id={\n                              filteredContact.mainPresence === 'online'\n                                ? 'contact-list-tooltip-left'\n                                : ''\n                            }\n                            data-tooltip-content={\n                              isInsideConferenceList()\n                                ? t('Conference.Add participant')\n                                : t('Tooltip.Transfer call')\n                            }\n                          >\n                            <FontAwesomeIcon className='pi-h-6 pi-w-6' icon={faPhone} />\n                          </Button>\n                        )\n                      } else if (isPhonebookContact(filteredContact)) {\n                        if (getTotalPhoneNumbers(filteredContact) < 2) {\n                          return (\n                            <Button\n                              onClick={() =>\n                                clickTransferOrConference(\n                                  getMainPhoneNumber(filteredContact),\n                                  dispatch,\n                                )\n                              }\n                              variant='green'\n                              disabled={getTotalPhoneNumbers(filteredContact) == 0}\n                              data-tooltip-id={\n                                getTotalPhoneNumbers(filteredContact) > 0\n                                  ? 'contact-list-tooltip-left'\n                                  : ''\n                              }\n                              data-tooltip-content={\n                                isInsideConferenceList()\n                                  ? t('Conference.Add participant')\n                                  : t('Tooltip.Transfer call')\n                              }\n                            >\n                              <FontAwesomeIcon className='pi-h-6 pi-w-6' icon={faPhone} />\n                            </Button>\n                          )\n                        } else {\n                          // change view to show contact numbers\n                          return (\n                            <Button\n                              onClick={() => goToSelectNumberView(filteredContact)}\n                              variant='transparent'\n                              data-tooltip-id={'contact-list-tooltip-left'}\n                              data-tooltip-content={t('Tooltip.Select phone number')}\n                            >\n                              <FontAwesomeIcon className='pi-h-6 pi-w-6' icon={faAngleRight} />\n                            </Button>\n                          )\n                        }\n                      }\n                    })()}\n                  </div>\n                </div>\n              ))}\n            {filteredContacts.length === 0 && !showPhoneNumberTyped && (\n              <p className=' pi-font-medium pi-w-full pi-flex pi-justify-center pi-text-sm'>\n                {t('No contacts found')}\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n  return (\n    <>\n      {(() => {\n        switch (contactListView) {\n          case 'main':\n            return mainView\n          case 'selectContactNumber':\n            return <SelectContactNumberView contact={currentContact} />\n          default:\n            return mainView\n        }\n      })()}\n      <CustomThemedTooltip className='pi-z-1000' id='contact-list-tooltip-left' place='left' />\n      <CustomThemedTooltip\n        className='pi-z-1000'\n        id='contact-list-tooltip-back-to-call'\n        place='right'\n      />\n      <CustomThemedTooltip\n        className='pi-z-1000'\n        id='contact-list-tooltip-call-to-transfer'\n        place='left'\n      />\n    </>\n  )\n}\n\ninterface ContactListViewProps {}\n\ninterface CallStartTypes {\n  number: string\n}\n"],"names":["_a","useSelector","state","island","isOpen","contactListView","endpoints","users","username","currentUser","_b","useState","loaded","setLoaded","_c","filteredOperators","setFilteredOperators","_d","filteredPhonebookContacts","setFilteredPhonebookContacts","_e","currentContact","setCurrentContact","_f","firstPhonebookLoading","setFirstPhonebookLoading","_g","searchQuery","setSearchQuery","_h","showPhoneNumberTyped","setShowPhoneNumberTyped","relativeRef","useRef","_j","showGradient","setShowGradient","_k","showingUsers","setShowingUsers","dispatch","useDispatch","filteredContacts","useMemo","__spreadArray","debouncedSearchPhonebookContacts","debounce","value","retrievePhonebookContacts","current","filterOperators","textQuery","trim","toLowerCase","operators","Object","values","filter","userEndpoints","extension","find","id","startsWith","includes","name","test","searchPhonebook","phonebookSearchResult","sent","rows","console","error","error_1","isUserEndpointsType","obj","isPhonebookContact","useEffect","cancel","useEventListener","data","handleAttendedTransfer","number","eventDispatch","handleScroll","scrollTop","offsetHeight","scrollHeight","addEventListener","removeEventListener","t","useTranslation","mainView","React","createElement","className","Button","variant","onClick","isInsideConferenceList","backToPreviousView","FontAwesomeIcon","icon","faArrowLeft","type","onChange","event","currentTarget","placeholder","autoFocus","spellCheck","Array","from","length","map","_","i","key","style","marginTop","height","ref","ListAvatar","placeHolderIcon","faUser","clickTransferOrConference","faPhone","slice","filteredContact","Fragment","status","mainPresence","faHeadset","mainextension","kind","faBuilding","displayName","getMainPhoneNumber","getTotalPhoneNumbers","count","disabled","setContactListView","faAngleRight","SelectContactNumberView","contact","CustomThemedTooltip","place"],"mappings":"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"}