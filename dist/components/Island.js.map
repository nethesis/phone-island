{"version":3,"file":"Island.js","sources":["../../src/components/Island.tsx"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { useState, useRef, useEffect, type FC } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState, Dispatch } from '../store'\nimport { useIsomorphicLayoutEffect } from '../utils'\nimport CallView from './CallView'\nimport KeyboardView from './KeypadView'\nimport AudioPlayerView from './AudioPlayerView'\nimport { AlertGuard } from './AlertGuard'\nimport BackCall from './CallView/BackCall'\nimport SideView from './SideView/SideView'\nimport ViewsTransition from './ViewsTransition'\nimport { RecorderView } from './RecorderView'\nimport IslandMotions from './IslandMotion'\nimport IslandDrag from './IslandDrag'\nimport { PhysicalRecorderView } from './PhysicalRecorderView'\nimport { SettingsView } from './SettingsView'\nimport { SwitchDeviceView } from './SwitchDeviceView'\nimport { isBackCallActive } from '../utils/genericFunctions/isBackCallVisible'\nimport VideoView from './VideoView'\nimport { WaitingConferenceView } from './ConferenceView'\nimport { store } from '../store'\nimport { ContactListView } from './ContactView/ContactListView'\nimport StreamingAnswerView from './StreamingAnswerView'\n\n/**\n * Provides the Island logic\n *\n * @param showAlways Sets the Island ever visible\n */\nexport const Island: FC<IslandProps> = ({ showAlways, uaType }) => {\n  // Get the currentCall info\n  const { incoming, accepted, outgoing } = useSelector((state: RootState) => state.currentCall)\n\n  const { view, sideViewIsVisible, avoidToShow, previousView } = useSelector(\n    (state: RootState) => state.island,\n  )\n  const { recording } = useSelector((state: RootState) => ({\n    recording: state.physicalRecorder.recording,\n  }))\n\n  // Get activeAlertsCount from island store\n  const { activeAlertsCount } = useSelector((state: RootState) => state.alerts.status)\n\n  // Get audioPlayerLoop value from player store\n  const { audioPlayerLoop } = useSelector((state: RootState) => state.player)\n  const { isActive } = useSelector((state: RootState) => state.conference)\n\n  // The Container reference\n  const islandContainerRef = useRef<any>(null)\n\n  // Initialize useDispatch\n  const dispatch = useDispatch<Dispatch>()\n\n  const audioPlayer = useRef<HTMLAudioElement>(null)\n  const localAudio = useRef<HTMLAudioElement>(null)\n  const remoteAudio = useRef<HTMLAudioElement>(null)\n\n  useIsomorphicLayoutEffect(() => {\n    dispatch.player.updatePlayer({\n      audioPlayer: audioPlayer,\n      localAudio: localAudio,\n      remoteAudio: remoteAudio,\n    })\n  }, [])\n\n  // Handle and apply view switch logic\n  // ...set callview as the current view\n  useEffect(() => {\n    const { isActive, conferenceStartedFrom, isOwnerInside } = store.getState().conference\n    const { username } = store.getState().currentUser\n    // Check and switch the view\n    if ((incoming || outgoing) && isActive && conferenceStartedFrom === username && isOwnerInside) {\n      dispatch.island.setIslandView('waitingConference')\n    } else if ((incoming || outgoing) && !avoidToShow) {\n      dispatch.island.setIslandView('call')\n    }\n  }, [incoming, outgoing])\n\n  useEffect(() => {\n    if (recording) {\n      dispatch.island.setIslandView('physicalPhoneRecorder')\n    }\n  }, [view])\n\n  const [currentView, setCurrentView] = useState<any>('')\n\n  // Handle island view change\n  useEffect(() => {\n    setTimeout(() => {\n      setCurrentView(view)\n    }, 200)\n  }, [view])\n\n  return (\n    <div\n      ref={islandContainerRef}\n      className='pi-absolute pi-min-w-full pi-min-h-full pi-left-0 pi-top-0 pi-overflow-hidden pi-pointer-events-none pi-flex pi-items-center pi-justify-center pi-content-center pi-phone-island-container pi-z-1000'\n    >\n      {(incoming ||\n        outgoing ||\n        accepted ||\n        showAlways ||\n        activeAlertsCount > 0 ||\n        view === 'player' ||\n        view === 'recorder' ||\n        view === 'physicalPhoneRecorder' ||\n        (view === 'waitingConference' && isActive) ||\n        (view === 'transfer' && isActive) ||\n        (view === 'settings' && isActive) ||\n        (view === 'settings' && (previousView === 'recorder' || previousView === 'player'))) &&\n        !avoidToShow && (\n          <>\n            <IslandDrag islandContainerRef={islandContainerRef}>\n              {/* Add background call visibility logic */}\n              <BackCall isVisible={isBackCallActive()} />\n              <SideView isVisible={sideViewIsVisible} uaType={uaType} />\n              <IslandMotions>\n                {/* The views logic */}\n                <AlertGuard uaType={uaType}>\n                  {(() => {\n                    const views = {\n                      call: CallView ? <CallView /> : null,\n                      keypad: KeyboardView ? <KeyboardView /> : null,\n                      transfer: ContactListView ? <ContactListView /> : null,\n                      player: AudioPlayerView ? <AudioPlayerView /> : null,\n                      recorder: RecorderView ? <RecorderView /> : null,\n                      physicalPhoneRecorder: PhysicalRecorderView ? <PhysicalRecorderView /> : null,\n                      settings: SettingsView ? <SettingsView /> : null,\n                      video: VideoView ? <VideoView /> : null,\n                      switchDevice: SwitchDeviceView ? <SwitchDeviceView /> : null,\n                      waitingConference: WaitingConferenceView ? <WaitingConferenceView /> : null,\n                      streamingAnswer: StreamingAnswerView ? <StreamingAnswerView /> : null,\n                    }\n\n                    return currentView in views && views[currentView as keyof typeof views] ? (\n                      <ViewsTransition forView={currentView}>\n                        {views[currentView as keyof typeof views]}\n                      </ViewsTransition>\n                    ) : (\n                      <></>\n                    )\n                  })()}\n                </AlertGuard>\n              </IslandMotions>\n            </IslandDrag>\n          </>\n        )}\n      <div className='pi-hidden'>\n        <audio loop={audioPlayerLoop} ref={audioPlayer}></audio>\n        <audio muted={true} ref={localAudio}></audio>\n        <audio autoPlay ref={remoteAudio}></audio>\n      </div>\n    </div>\n  )\n}\n\nIsland.displayName = 'Island'\n\ninterface IslandProps {\n  showAlways?: boolean\n  uaType?: string\n}\n"],"names":["Island","_a","showAlways","uaType","_b","useSelector","state","currentCall","incoming","accepted","outgoing","_c","island","view","sideViewIsVisible","avoidToShow","previousView","recording","physicalRecorder","activeAlertsCount","alerts","status","audioPlayerLoop","player","isActive","conference","islandContainerRef","useRef","dispatch","useDispatch","audioPlayer","localAudio","remoteAudio","useIsomorphicLayoutEffect","updatePlayer","useEffect","store","getState","conferenceStartedFrom","isOwnerInside","username","currentUser","setIslandView","views","_d","useState","currentView","setCurrentView","setTimeout","React","ref","className","createElement","Fragment","IslandDrag","BackCall","isVisible","isBackCallActive","SideView","IslandMotions","AlertGuard","call","CallView","keypad","KeyboardView","transfer","ContactListView","AudioPlayerView","KeypadView","recorder","RecorderView","physicalPhoneRecorder","PhysicalRecorderView","settings","SettingsView","video","VideoView","switchDevice","SwitchDeviceView","waitingConference","WaitingConferenceView","streamingAnswer","StreamingAnswerView","ViewsTransition","forView","loop","muted","autoPlay","displayName"],"mappings":"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"}