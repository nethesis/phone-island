{"version":3,"file":"Actions.js","sources":["../../../src/components/CallView/Actions.tsx"],"sourcesContent":["// Copyright (C) 2025 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { type FC, useMemo, useEffect, useRef, useCallback } from 'react'\nimport {\n  muteCurrentCall,\n  unmuteCurrentCall,\n  pauseCurrentCall,\n  unpauseCurrentCall,\n  parkCurrentCall,\n  startConference,\n} from '../../lib/phone/call'\nimport { Button } from '../'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faPause,\n  faPlay,\n  faMicrophone,\n  faMicrophoneSlash,\n  faSquareParking,\n  faUserPlus,\n  faPlus,\n  faAngleDown,\n  faAngleUp,\n} from '@fortawesome/free-solid-svg-icons'\nimport { faClose, faGridRound, faOpen } from '@nethesis/nethesis-solid-svg-icons'\nimport { RootState, Dispatch } from '../../store'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { sendDTMF } from '../../lib/webrtc/messages'\nimport { store } from '../../store'\nimport outgoingRingtone from '../../static/outgoing_ringtone'\nimport { useTranslation } from 'react-i18next'\nimport { useEventListener, eventDispatch } from '../../utils'\nimport { CustomThemedTooltip } from '../CustomThemedTooltip'\nimport TransferButton from '../TransferButton'\nimport { isWebRTC } from '../../lib/user/default_device'\nimport { sendPhysicalDTMF } from '../../services/astproxy'\nimport { IconDefinition } from '@fortawesome/fontawesome-common-types'\n\ninterface ActionButtonProps {\n  active: boolean\n  onClick: () => void\n  tooltipId: string\n  tooltipContent: string\n  icon: IconDefinition\n  activeIcon?: IconDefinition\n}\n\nconst ActionButton: React.FC<ActionButtonProps> = React.memo(\n  ({ active, onClick, tooltipId, tooltipContent, icon, activeIcon = icon }) => (\n    <Button\n      variant='default'\n      active={active}\n      onClick={onClick}\n      data-tooltip-id={tooltipId}\n      data-tooltip-content={tooltipContent}\n    >\n      <FontAwesomeIcon className='pi-h-6 pi-w-6' icon={active ? activeIcon : icon} />\n    </Button>\n  ),\n)\n\nconst Actions: FC = () => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch<Dispatch>()\n\n  const { paused, muted, parked, transferring } = useSelector(\n    (state: RootState) => state.currentCall,\n  )\n  const { view, actionsExpanded, sideViewIsVisible } = useSelector(\n    (state: RootState) => state.island,\n  )\n  const intrudeListenStatus = useSelector((state: RootState) => state.listen)\n  const { isActive, conferenceStartedFrom } = useSelector((state: RootState) => state.conference)\n  const { username, profile } = useSelector((state: RootState) => state?.currentUser)\n\n  // Check if the actions should be expanded automatically\n  const autoExpandedRef = useRef(false)\n  // Check if the actions should be collapsed automatically\n  const autoCollapsedRef = useRef(false)\n\n  const isOwnerOfConference = useMemo(\n    () => username !== '' && conferenceStartedFrom === username,\n    [username, conferenceStartedFrom],\n  )\n\n  const shouldHideTransferButton = useMemo(\n    () => isActive && !isOwnerOfConference,\n    [isActive, isOwnerOfConference],\n  )\n\n  const shouldHideButtons = useMemo(\n    () => intrudeListenStatus?.isIntrude || intrudeListenStatus?.isListen,\n    [intrudeListenStatus],\n  )\n\n  const toggleMute = useCallback(() => {\n    muted ? unmuteCurrentCall() : muteCurrentCall()\n  }, [muted])\n\n  const togglePause = useCallback(() => {\n    paused ? unpauseCurrentCall() : pauseCurrentCall()\n  }, [paused])\n\n  const openKeypad = useCallback(() => {\n    dispatch.island.setIslandView(view !== 'keypad' ? 'keypad' : 'call')\n    if (sideViewIsVisible) {\n      eventDispatch('phone-island-sideview-close', {})\n    }\n    eventDispatch('phone-island-call-keypad-opened', {})\n  }, [view, sideViewIsVisible, dispatch.island])\n\n  const toggleActionsExpanded = useCallback(() => {\n    const newState = !actionsExpanded\n    dispatch.island.toggleActionsExpanded(newState)\n    eventDispatch(`phone-island-call-actions-${newState ? 'opened' : 'closed'}`, {})\n    if (!newState) {\n      eventDispatch('phone-island-sideview-close', {})\n    }\n  }, [actionsExpanded, dispatch.island])\n\n  const toggleSideView = useCallback(() => {\n    const event = sideViewIsVisible ? 'phone-island-sideview-close' : 'phone-island-sideview-open'\n    eventDispatch(event, {})\n  }, [sideViewIsVisible])\n\n  const transfer = useCallback(() => {\n    dispatch.island.setIslandView(view !== 'transfer' ? 'transfer' : 'call')\n    if (sideViewIsVisible) {\n      eventDispatch('phone-island-sideview-close', {})\n    }\n    eventDispatch('phone-island-call-transfer-opened', {})\n  }, [view, sideViewIsVisible, dispatch.island])\n\n  const beginConference = useCallback(() => {\n    eventDispatch('phone-island-conference-list-open', {})\n    dispatch.island.setIslandView(view !== 'transfer' ? 'transfer' : 'call')\n    if (sideViewIsVisible) {\n      eventDispatch('phone-island-sideview-close', {})\n    }\n  }, [view, sideViewIsVisible, dispatch.island])\n\n  const addUserToConference = useCallback(async () => {\n    dispatch.island.setIslandView('waitingConference')\n    await startConference()\n  }, [dispatch.island])\n\n  const handleConferenceAction = useCallback(() => {\n    isActive ? addUserToConference() : beginConference()\n  }, [isActive, addUserToConference, beginConference])\n\n  const shouldExpandActions = useMemo(() => {\n    return (\n      isActive &&\n      view === 'call' &&\n      !actionsExpanded &&\n      !autoExpandedRef.current &&\n      isOwnerOfConference\n    )\n  }, [isActive, view, actionsExpanded, isOwnerOfConference])\n\n  // Check if user is not the owner of the conference\n  const shouldCollapseActions = useMemo(() => {\n    return (\n      isActive &&\n      view === 'call' &&\n      actionsExpanded &&\n      !autoCollapsedRef.current &&\n      username !== '' &&\n      !isOwnerOfConference\n    )\n  }, [isActive, view, actionsExpanded, username, isOwnerOfConference])\n\n  // Automatically expand actions if the user has enabled conference\n  useEffect(() => {\n    if (shouldExpandActions) {\n      dispatch.island.toggleActionsExpanded(true)\n      eventDispatch('phone-island-call-actions-opened', {})\n      autoExpandedRef.current = true\n    }\n  }, [shouldExpandActions, dispatch.island])\n\n  // Automatically collapse actions if the user is not the owner of the conference\n  useEffect(() => {\n    if (shouldCollapseActions) {\n      dispatch.island.toggleActionsExpanded(false)\n      eventDispatch('phone-island-call-actions-closed', {})\n      autoCollapsedRef.current = true\n    }\n  }, [shouldCollapseActions, dispatch.island])\n\n  const cancelTransfer = useCallback(() => {\n    const sendDtmfFunc = isWebRTC() ? sendDTMF : sendPhysicalDTMF\n\n    sendDtmfFunc('*')\n\n    const { audioPlayerPlaying } = store.getState().player\n    // Check if the local audio is already playing and start playing\n    if (!audioPlayerPlaying) {\n      dispatch.player.updateStartAudioPlayer({\n        src: outgoingRingtone,\n        loop: true,\n      })\n    }\n\n    setTimeout(() => {\n      sendDtmfFunc('1')\n      dispatch.player.stopAudioPlayer()\n      // The workarround to disable transfer because of the wrong conv.connection value from ws\n      if (transferring) {\n        setTimeout(() => {\n          dispatch.currentCall.updateTransferring(false)\n        }, 500)\n      }\n\n      eventDispatch('phone-island-call-transfer-canceled', {})\n    }, 500)\n  }, [transferring, dispatch.player, dispatch.currentCall])\n\n  useEventListener('phone-island-call-keypad-open', openKeypad)\n  useEventListener('phone-island-call-transfer-open', transfer)\n  useEventListener('phone-island-call-transfer-cancel', cancelTransfer)\n  useEventListener('phone-island-call-actions-open', () => {\n    dispatch.island.toggleActionsExpanded(true)\n    eventDispatch('phone-island-call-actions-opened', {})\n  })\n  useEventListener('phone-island-call-actions-close', () => {\n    dispatch.island.toggleActionsExpanded(false)\n    eventDispatch('phone-island-call-actions-closed', {})\n  })\n\n  const mainGridClassName = useMemo(() => {\n    if (\n      intrudeListenStatus?.isListen ||\n      intrudeListenStatus?.isIntrude ||\n      (isActive && !isOwnerOfConference)\n    ) {\n      if (intrudeListenStatus.isIntrude) {\n        return 'pi-mb-6 pi-grid pi-grid-cols-1 pi-auto-cols-max pi-gap-y-5 pi-justify-items-center pi-place-items-center pi-justify-center'\n      }\n      if (isActive && !isOwnerOfConference) {\n        return 'pi-flex pi-items-center pi-justify-center pi-gap-4'\n      }\n      return 'pi-hidden'\n    }\n    return 'pi-grid pi-grid-cols-4 pi-auto-cols-max pi-gap-y-5 pi-justify-items-center pi-place-items-center pi-justify-center'\n  }, [intrudeListenStatus, isActive, isOwnerOfConference])\n\n  return (\n    <>\n      <div className={mainGridClassName}>\n        {!shouldHideButtons && (\n          <ActionButton\n            active={paused}\n            onClick={togglePause}\n            tooltipId='tooltip-pause'\n            tooltipContent={paused ? t('Tooltip.Play') : t('Tooltip.Pause')}\n            icon={faPause}\n            activeIcon={faPlay}\n          />\n        )}\n\n        {!intrudeListenStatus?.isListen && (\n          <ActionButton\n            active={muted}\n            onClick={toggleMute}\n            tooltipId='tooltip-mute'\n            tooltipContent={muted ? t('Tooltip.Unmute') : t('Tooltip.Mute')}\n            icon={faMicrophone}\n            activeIcon={faMicrophoneSlash}\n          />\n        )}\n\n        {!shouldHideTransferButton && <TransferButton />}\n\n        {!shouldHideButtons && !shouldHideTransferButton && (\n          <Button\n            active={actionsExpanded}\n            variant='transparent'\n            onClick={toggleActionsExpanded}\n            data-tooltip-id='tooltip-expand'\n            data-tooltip-content={actionsExpanded ? t('Tooltip.Collapse') : t('Tooltip.Expand')}\n          >\n            <FontAwesomeIcon\n              className='pi-h-6 pi-w-6'\n              icon={actionsExpanded ? faAngleUp : faAngleDown}\n            />\n          </Button>\n        )}\n      </div>\n\n      {/* Actions expanded section */}\n      {actionsExpanded && (\n        <div className='pi-grid pi-grid-cols-4 pi-auto-cols-max pi-gap-y-5 pi-justify-items-center pi-place-items-center pi-justify-center'>\n          <ActionButton\n            active={view === 'keypad'}\n            onClick={openKeypad}\n            tooltipId='tooltip-keyboard'\n            tooltipContent={t('Tooltip.Keyboard')}\n            icon={faGridRound}\n          />\n\n          <ActionButton\n            active={parked}\n            onClick={parkCurrentCall}\n            tooltipId='tooltip-park'\n            tooltipContent={t('Tooltip.Park')}\n            icon={faSquareParking}\n          />\n\n          {profile?.macro_permissions?.settings?.permissions?.conference?.value && (\n            <Button\n              data-stop-propagation={true}\n              variant='default'\n              onClick={handleConferenceAction}\n              data-tooltip-id='tooltip-conference'\n              data-tooltip-content={\n                isActive ? t('Tooltip.Conference') || '' : t('Tooltip.Add user to conference') || ''\n              }\n            >\n              <FontAwesomeIcon icon={isActive ? faPlus : faUserPlus} className='pi-h-6 pi-w-6' />\n            </Button>\n          )}\n\n          <Button\n            variant='default'\n            onClick={toggleSideView}\n            data-tooltip-id='tooltip-sideView'\n            data-tooltip-content={t('Tooltip.Other actions') || ''}\n          >\n            <FontAwesomeIcon\n              className='pi-h-6 pi-w-6'\n              icon={sideViewIsVisible ? faClose : faOpen}\n            />\n          </Button>\n        </div>\n      )}\n      {/* Buttons tooltips */}\n      <CustomThemedTooltip id='tooltip-transfer' place='bottom' />\n      <CustomThemedTooltip id='tooltip-pause' place='bottom' />\n      <CustomThemedTooltip id='tooltip-mute' place='bottom' />\n      <CustomThemedTooltip id='tooltip-expand' place='bottom' />\n      <CustomThemedTooltip id='tooltip-keyboard' place='bottom' />\n      <CustomThemedTooltip id='tooltip-conference' place='bottom' />\n      <CustomThemedTooltip id='tooltip-park' place='bottom' />\n      <CustomThemedTooltip id='tooltip-sideView' place='left' />\n    </>\n  )\n}\n\nexport default React.memo(Actions)\n"],"names":["ActionButton","React","memo","_a","active","onClick","tooltipId","tooltipContent","icon","_b","activeIcon","createElement","Button","variant","FontAwesomeIcon","className","Actions$1","t","useTranslation","dispatch","useDispatch","_e","useSelector","state","currentCall","paused","muted","parked","transferring","_f","island","view","actionsExpanded","sideViewIsVisible","intrudeListenStatus","listen","_g","conference","isActive","conferenceStartedFrom","_h","currentUser","username","profile","autoExpandedRef","useRef","autoCollapsedRef","isOwnerOfConference","useMemo","shouldHideTransferButton","shouldHideButtons","isIntrude","isListen","toggleMute","useCallback","unmuteCurrentCall","muteCurrentCall","togglePause","unpauseCurrentCall","pauseCurrentCall","openKeypad","setIslandView","eventDispatch","toggleActionsExpanded","newState","concat","toggleSideView","event","transfer","beginConference","addUserToConference","__awaiter","startConference","sent","handleConferenceAction","shouldExpandActions","current","shouldCollapseActions","useEffect","cancelTransfer","sendDtmfFunc","isWebRTC","sendDTMF","sendPhysicalDTMF","store","getState","player","audioPlayerPlaying","updateStartAudioPlayer","src","outgoingRingtone","loop","setTimeout","stopAudioPlayer","updateTransferring","useEventListener","mainGridClassName","Fragment","faPause","faPlay","faMicrophone","faMicrophoneSlash","TransferButton","faAngleUp","faAngleDown","faGridRound","parkCurrentCall","faSquareParking","_d","_c","macro_permissions","settings","permissions","value","faPlus","faUserPlus","faClose","faOpen","CustomThemedTooltip","id","place"],"mappings":"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"}