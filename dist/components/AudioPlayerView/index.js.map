{"version":3,"file":"index.js","sources":["../../../src/components/AudioPlayerView/index.tsx"],"sourcesContent":["// Copyright (C) 2025 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { type FC } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState, Dispatch } from '../../store'\nimport { Avatar } from './Avatar'\nimport Progress from './Progress'\nimport { useTranslation } from 'react-i18next'\nimport PlayerFooterActions from './PlayerFooterActions'\nimport { Button } from '../Button'\nimport { eventDispatch } from '../../utils'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\n\nexport const KeypadView: FC<KeypadViewTypes> = () => {\n  const { audioPlayerTrackType, audioPlayerTrackName, audioPlayer, audioPlayerPlaying } =\n    useSelector((state: RootState) => state.player)\n  const { isOpen } = useSelector((state: RootState) => state.island)\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>) {\n    e.stopPropagation()\n  }\n\n  const { t } = useTranslation()\n\n  // Initialize state dispatch\n  const dispatch = useDispatch<Dispatch>()\n\n  function playerClose() {\n    if (audioPlayerPlaying) {\n      dispatch.player.stopAudioPlayer()\n      eventDispatch('phone-island-audio-player-close', {})\n    }\n    dispatch.island.resetPlayerClose()\n  }\n\n  return (\n    <div className='pi-flex pi-gap-7 pi-flex-col'>\n      <div className='pi-flex pi-gap-4'>\n        <Avatar type={audioPlayerTrackType} />\n        <div className='pi-flex pi-items-center pi-w-full'>\n          <div\n            style={{\n              width: isOpen ? '202px' : '60px',\n            }}\n            className={`pi-text-base pi-overflow-hidden pi-text-ellipsis pi-whitespace-nowrap pi-inline-block`}\n          >\n            {audioPlayerTrackName}\n          </div>\n        </div>\n        <Button\n          onClick={() => playerClose()}\n          variant='transparentSettings'\n          data-tooltip-id='tooltip-close-settings'\n          data-tooltip-content={t('Common.Close') || ''}\n        >\n          <FontAwesomeIcon icon={faXmark} className='pi-w-5 pi-h-5' />\n        </Button>\n      </div>\n      {isOpen && (\n        <div onClick={stopPropagation} onMouseDown={stopPropagation} onTouchStart={stopPropagation}>\n          {/* add prop to indicate that is audioplayer view */}\n          <Progress isPlayer />\n          <PlayerFooterActions />\n        </div>\n      )}\n      {/* Buttons tooltips */}\n    </div>\n  )\n}\n\nexport default KeypadView\n\nexport interface KeypadViewTypes {}\n"],"names":["KeypadView","_a","useSelector","state","player","audioPlayerTrackType","audioPlayerTrackName","audioPlayer","audioPlayerPlaying","isOpen","island","stopPropagation","e","t","useTranslation","dispatch","useDispatch","React","createElement","className","Avatar","type","style","width","Button","onClick","stopAudioPlayer","eventDispatch","resetPlayerClose","variant","FontAwesomeIcon","icon","faXmark","onMouseDown","onTouchStart","Progress","isPlayer","PlayerFooterActions"],"mappings":"wtCAeaA,EAAkC,WACvC,IAAAC,EACJC,eAAY,SAACC,GAAqB,OAAAA,EAAMC,UADlCC,EAAoBJ,EAAAI,qBAAEC,EAAoBL,EAAAK,qBAAaL,EAAAM,YAAA,IAAEC,EAAkBP,EAAAO,mBAE3EC,EAAWP,eAAY,SAACC,GAAqB,OAAAA,EAAMO,iBAE3D,SAASC,EAAgBC,GACvBA,EAAED,iBACH,CAEO,IAAAE,EAAMC,qBAGRC,EAAWC,EAAAA,cAUjB,OACEC,EAAA,QAAAC,cAAA,MAAA,CAAKC,UAAU,gCACbF,EAAAA,QAAKC,cAAA,MAAA,CAAAC,UAAU,oBACbF,EAAAA,QAAAC,cAACE,EAAAA,OAAM,CAACC,KAAMhB,IACdY,EAAAA,QAAKC,cAAA,MAAA,CAAAC,UAAU,qCACbF,EAAAA,QAAAC,cAAA,MAAA,CACEI,MAAO,CACLC,MAAOd,EAAS,QAAU,QAE5BU,UAAW,yFAEVb,IAGLW,EAAC,QAAAC,cAAAM,UACCC,QAAS,WAAM,OAtBjBjB,IACFO,EAASX,OAAOsB,kBAChBC,gBAAc,kCAAmC,CAAA,SAEnDZ,EAASL,OAAOkB,kBAkBkB,EAC5BC,QAAQ,wCACQ,yBAAwB,uBAClBhB,EAAE,iBAAmB,IAE3CI,UAACC,cAAAY,EAAAA,gBAAgB,CAAAC,KAAMC,EAAAA,QAASb,UAAU,oBAG7CV,GACCQ,EAAK,QAAAC,cAAA,MAAA,CAAAO,QAASd,EAAiBsB,YAAatB,EAAiBuB,aAAcvB,GAEzEM,EAAAA,QAACC,cAAAiB,EAAAA,SAAS,CAAAC,UAAW,IACrBnB,EAAAA,QAAAC,cAACmB,EAAAA,oBAAsB,OAMjC"}