{"version":3,"file":"core.esm.js","sources":["../../../../../node_modules/@rematch/core/dist/core.esm.js"],"sourcesContent":["import * as Redux from 'redux';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction createReduxStore(bag) {\n  var _bag$reduxConfig;\n\n  bag.models.forEach(function (model) {\n    return createModelReducer(bag, model);\n  });\n  var rootReducer = createRootReducer(bag);\n  var middlewares = Redux.applyMiddleware.apply(Redux, bag.reduxConfig.middlewares);\n  var enhancers = bag.reduxConfig.devtoolComposer ? (_bag$reduxConfig = bag.reduxConfig).devtoolComposer.apply(_bag$reduxConfig, bag.reduxConfig.enhancers.concat([middlewares])) : composeEnhancersWithDevtools(bag.reduxConfig.devtoolOptions).apply(void 0, bag.reduxConfig.enhancers.concat([middlewares]));\n  var createStore = bag.reduxConfig.createStore || Redux.createStore;\n  var bagInitialState = bag.reduxConfig.initialState;\n  var initialState = bagInitialState === undefined ? {} : bagInitialState;\n  return createStore(rootReducer, initialState, enhancers);\n}\nfunction createModelReducer(bag, model) {\n  var modelReducers = {};\n  var modelReducerKeys = Object.keys(model.reducers);\n  modelReducerKeys.forEach(function (reducerKey) {\n    var actionName = isAlreadyActionName(reducerKey) ? reducerKey : model.name + \"/\" + reducerKey;\n    modelReducers[actionName] = model.reducers[reducerKey];\n  });\n\n  var combinedReducer = function combinedReducer(state, action) {\n    if (state === void 0) {\n      state = model.state;\n    }\n\n    if (action.type in modelReducers) {\n      return modelReducers[action.type](state, action.payload, action.meta);\n    }\n\n    return state;\n  };\n\n  var modelBaseReducer = model.baseReducer;\n  var reducer = !modelBaseReducer ? combinedReducer : function (state, action) {\n    if (state === void 0) {\n      state = model.state;\n    }\n\n    return combinedReducer(modelBaseReducer(state, action), action);\n  };\n  bag.forEachPlugin('onReducer', function (onReducer) {\n    reducer = onReducer(reducer, model.name, bag) || reducer;\n  });\n  bag.reduxConfig.reducers[model.name] = reducer;\n}\nfunction createRootReducer(bag) {\n  var rootReducers = bag.reduxConfig.rootReducers;\n  var mergedReducers = mergeReducers(bag.reduxConfig);\n  var rootReducer = mergedReducers;\n\n  if (rootReducers && Object.keys(rootReducers).length) {\n    rootReducer = function rootReducer(state, action) {\n      var actionRootReducer = rootReducers[action.type];\n\n      if (actionRootReducer) {\n        return mergedReducers(actionRootReducer(state, action), action);\n      }\n\n      return mergedReducers(state, action);\n    };\n  }\n\n  bag.forEachPlugin('onRootReducer', function (onRootReducer) {\n    rootReducer = onRootReducer(rootReducer, bag) || rootReducer;\n  });\n  return rootReducer;\n}\n\nfunction mergeReducers(reduxConfig) {\n  var combineReducers = reduxConfig.combineReducers || Redux.combineReducers;\n\n  if (!Object.keys(reduxConfig.reducers).length) {\n    return function (state) {\n      return state;\n    };\n  }\n\n  return combineReducers(reduxConfig.reducers);\n}\n\nfunction composeEnhancersWithDevtools(devtoolOptions) {\n  if (devtoolOptions === void 0) {\n    devtoolOptions = {};\n  }\n\n  return !devtoolOptions.disabled && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(devtoolOptions) : Redux.compose;\n}\n\nfunction isAlreadyActionName(reducerKey) {\n  return reducerKey.indexOf('/') > -1;\n}\n\nvar isObject = function isObject(obj) {\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj);\n};\nvar ifDefinedIsFunction = function ifDefinedIsFunction(func) {\n  return !func || typeof func === 'function';\n};\n\nvar validate = function validate(runValidations) {\n  if (process.env.NODE_ENV !== 'production') {\n    var validations = runValidations();\n    var errors = [];\n    validations.forEach(function (validation) {\n      var isInvalid = validation[0];\n      var errorMessage = validation[1];\n\n      if (isInvalid) {\n        errors.push(errorMessage);\n      }\n    });\n\n    if (errors.length > 0) {\n      throw new Error(errors.join(', '));\n    }\n  }\n};\n\nvar validateConfig = function validateConfig(config) {\n  validate(function () {\n    return [[!Array.isArray(config.plugins), 'init config.plugins must be an array'], [!isObject(config.models), 'init config.models must be an object'], [!isObject(config.redux.reducers), 'init config.redux.reducers must be an object'], [!Array.isArray(config.redux.middlewares), 'init config.redux.middlewares must be an array'], [!Array.isArray(config.redux.enhancers), 'init config.redux.enhancers must be an array of functions'], [!ifDefinedIsFunction(config.redux.combineReducers), 'init config.redux.combineReducers must be a function'], [!ifDefinedIsFunction(config.redux.createStore), 'init config.redux.createStore must be a function']];\n  });\n};\nvar validateModel = function validateModel(model) {\n  validate(function () {\n    return [[!model, 'model config is required'], [typeof model.name !== 'string', 'model \"name\" [string] is required'], [model.state === undefined && model.baseReducer === undefined, 'model \"state\" is required'], [!ifDefinedIsFunction(model.baseReducer), 'model \"baseReducer\" must be a function']];\n  });\n};\nvar validatePlugin = function validatePlugin(plugin) {\n  validate(function () {\n    return [[!ifDefinedIsFunction(plugin.onStoreCreated), 'Plugin onStoreCreated must be a function'], [!ifDefinedIsFunction(plugin.onModel), 'Plugin onModel must be a function'], [!ifDefinedIsFunction(plugin.onReducer), 'Plugin onReducer must be a function'], [!ifDefinedIsFunction(plugin.onRootReducer), 'Plugin onRootReducer must be a function'], [!ifDefinedIsFunction(plugin.createMiddleware), 'Plugin createMiddleware must be a function']];\n  });\n};\nvar validateModelReducer = function validateModelReducer(modelName, reducers, reducerName) {\n  validate(function () {\n    return [[!!reducerName.match(/\\/.+\\//), \"Invalid reducer name (\" + modelName + \"/\" + reducerName + \")\"], [typeof reducers[reducerName] !== 'function', \"Invalid reducer (\" + modelName + \"/\" + reducerName + \"). Must be a function\"]];\n  });\n};\nvar validateModelEffect = function validateModelEffect(modelName, effects, effectName) {\n  validate(function () {\n    return [[!!effectName.match(/\\//), \"Invalid effect name (\" + modelName + \"/\" + effectName + \")\"], [typeof effects[effectName] !== 'function', \"Invalid effect (\" + modelName + \"/\" + effectName + \"). Must be a function\"]];\n  });\n};\n\nvar createActionDispatcher = function createActionDispatcher(rematch, modelName, actionName, isEffect) {\n  return Object.assign(function (payload, meta) {\n    var action = {\n      type: modelName + \"/\" + actionName\n    };\n\n    if (typeof payload !== 'undefined') {\n      action.payload = payload;\n    }\n\n    if (typeof meta !== 'undefined') {\n      action.meta = meta;\n    }\n\n    return rematch.dispatch(action);\n  }, {\n    isEffect: isEffect\n  });\n};\n\nvar createReducerDispatcher = function createReducerDispatcher(rematch, model) {\n  var modelDispatcher = rematch.dispatch[model.name];\n  var modelReducersKeys = Object.keys(model.reducers);\n  modelReducersKeys.forEach(function (reducerName) {\n    validateModelReducer(model.name, model.reducers, reducerName);\n    modelDispatcher[reducerName] = createActionDispatcher(rematch, model.name, reducerName, false);\n  });\n};\nvar createEffectDispatcher = function createEffectDispatcher(rematch, bag, model) {\n  var modelDispatcher = rematch.dispatch[model.name];\n  var effects = {};\n\n  if (model.effects) {\n    effects = typeof model.effects === 'function' ? model.effects(rematch.dispatch) : model.effects;\n  }\n\n  var effectKeys = Object.keys(effects);\n  effectKeys.forEach(function (effectName) {\n    validateModelEffect(model.name, effects, effectName);\n    bag.effects[model.name + \"/\" + effectName] = effects[effectName].bind(modelDispatcher);\n    modelDispatcher[effectName] = createActionDispatcher(rematch, model.name, effectName, true);\n  });\n};\n\nfunction createRematchBag(config) {\n  return {\n    models: createNamedModels(config.models),\n    reduxConfig: config.redux,\n    forEachPlugin: function forEachPlugin(method, fn) {\n      config.plugins.forEach(function (plugin) {\n        if (plugin[method]) {\n          fn(plugin[method]);\n        }\n      });\n    },\n    effects: {}\n  };\n}\n\nfunction createNamedModels(models) {\n  return Object.keys(models).map(function (modelName) {\n    var model = createNamedModel(modelName, models[modelName]);\n    validateModel(model);\n    return model;\n  });\n}\n\nfunction createNamedModel(name, model) {\n  return _extends({\n    name: name,\n    reducers: {}\n  }, model);\n}\n\nfunction createRematchStore(config) {\n  var bag = createRematchBag(config);\n  bag.reduxConfig.middlewares.push(createEffectsMiddleware(bag));\n  bag.forEachPlugin('createMiddleware', function (createMiddleware) {\n    bag.reduxConfig.middlewares.push(createMiddleware(bag));\n  });\n  var reduxStore = createReduxStore(bag);\n\n  var rematchStore = _extends({}, reduxStore, {\n    name: config.name,\n    addModel: function addModel(model) {\n      validateModel(model);\n      createModelReducer(bag, model);\n      prepareModel(rematchStore, model);\n      enhanceModel(rematchStore, bag, model);\n      reduxStore.replaceReducer(createRootReducer(bag));\n      reduxStore.dispatch({\n        type: '@@redux/REPLACE'\n      });\n    }\n  });\n\n  addExposed(rematchStore, config.plugins);\n  bag.models.forEach(function (model) {\n    return prepareModel(rematchStore, model);\n  });\n  bag.models.forEach(function (model) {\n    return enhanceModel(rematchStore, bag, model);\n  });\n  bag.forEachPlugin('onStoreCreated', function (onStoreCreated) {\n    rematchStore = onStoreCreated(rematchStore, bag) || rematchStore;\n  });\n  return rematchStore;\n}\n\nfunction createEffectsMiddleware(bag) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        if (action.type in bag.effects) {\n          next(action);\n          return bag.effects[action.type](action.payload, store.getState(), action.meta);\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nfunction prepareModel(rematchStore, model) {\n  var modelDispatcher = {};\n  rematchStore.dispatch[\"\" + model.name] = modelDispatcher;\n  createReducerDispatcher(rematchStore, model);\n}\n\nfunction enhanceModel(rematchStore, bag, model) {\n  createEffectDispatcher(rematchStore, bag, model);\n  bag.forEachPlugin('onModel', function (onModel) {\n    onModel(model, rematchStore);\n  });\n}\n\nfunction addExposed(store, plugins) {\n  plugins.forEach(function (plugin) {\n    if (!plugin.exposed) return;\n    var pluginKeys = Object.keys(plugin.exposed);\n    pluginKeys.forEach(function (key) {\n      if (!plugin.exposed) return;\n      var exposedItem = plugin.exposed[key];\n      var isExposedFunction = typeof exposedItem === 'function';\n      store[key] = isExposedFunction ? function () {\n        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n\n        return exposedItem.apply(void 0, [store].concat(params));\n      } : Object.create(plugin.exposed[key]);\n    });\n  });\n}\n\nvar count = 0;\nfunction createConfig(initConfig) {\n  var _initConfig$name, _initConfig$redux$dev, _initConfig$redux;\n\n  var storeName = (_initConfig$name = initConfig.name) != null ? _initConfig$name : \"Rematch Store \" + count;\n  count += 1;\n  var config = {\n    name: storeName,\n    models: initConfig.models || {},\n    plugins: initConfig.plugins || [],\n    redux: _extends({\n      reducers: {},\n      rootReducers: {},\n      enhancers: [],\n      middlewares: []\n    }, initConfig.redux, {\n      devtoolOptions: _extends({\n        name: storeName\n      }, (_initConfig$redux$dev = (_initConfig$redux = initConfig.redux) == null ? void 0 : _initConfig$redux.devtoolOptions) != null ? _initConfig$redux$dev : {})\n    })\n  };\n  validateConfig(config);\n  config.plugins.forEach(function (plugin) {\n    if (plugin.config) {\n      config.models = merge(config.models, plugin.config.models);\n\n      if (plugin.config.redux) {\n        config.redux.initialState = merge(config.redux.initialState, plugin.config.redux.initialState);\n        config.redux.reducers = merge(config.redux.reducers, plugin.config.redux.reducers);\n        config.redux.rootReducers = merge(config.redux.rootReducers, plugin.config.redux.reducers);\n        config.redux.enhancers = [].concat(config.redux.enhancers, plugin.config.redux.enhancers || []);\n        config.redux.middlewares = [].concat(config.redux.middlewares, plugin.config.redux.middlewares || []);\n        config.redux.combineReducers = config.redux.combineReducers || plugin.config.redux.combineReducers;\n        config.redux.createStore = config.redux.createStore || plugin.config.redux.createStore;\n      }\n    }\n\n    validatePlugin(plugin);\n  });\n  return config;\n}\n\nfunction merge(original, extra) {\n  return extra ? _extends({}, extra, original) : original;\n}\n\nvar init = function init(initConfig) {\n  var config = createConfig(initConfig || {});\n  return createRematchStore(config);\n};\nvar createModel = function createModel() {\n  return function (mo) {\n    return mo;\n  };\n};\nvar index = {\n  init: init,\n  createModel: createModel\n};\n\nexport { createModel, index as default, init };\n//# sourceMappingURL=core.esm.js.map\n"],"names":["createReduxStore","bag","models","forEach","model","createModelReducer","rootReducer","createRootReducer","middlewares","Redux","apply","reduxConfig","enhancers","devtoolComposer","_bag$reduxConfig","concat","devtoolOptions","disabled","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancersWithDevtools","createStore","bagInitialState","initialState","undefined","modelReducers","Object","keys","reducers","reducerKey","actionName","indexOf","isAlreadyActionName","name","combinedReducer","state","action","type","payload","meta","modelBaseReducer","baseReducer","reducer","forEachPlugin","onReducer","rootReducers","mergedReducers","combineReducers","length","mergeReducers","actionRootReducer","onRootReducer"],"mappings":"gUAiBwBA,SAAAA,EAItBC,SACDA,EAAIC,OAAOC,SAAQ,SAACC,GAAD,OAAWC,EAAmBJ,EAAKG,MAEtD,IAAME,EAAcC,EAAoDN,GAElEO,EAAcC,EAAAA,gBAAAC,MAAAD,EAAyBR,EAAIU,YAAYH,aACvDI,EAAYX,EAAIU,YAAYE,iBAC/BC,EAAAb,EAAIU,aAAYE,gBAAhBH,MAAAI,EAAmCb,EAAIU,YAAYC,UAAnDG,OAAA,CAA8DP,KA0IlE,SACCQ,QAAA,IAAAA,IAAAA,EAAiC,CAAA,GAEjC,OAAQA,EAAeC,UACJ,iBAAXC,QACPA,OAAOC,qCACLD,OAAOC,qCAAqCH,GAC5CP,EAAAA,OACH,CAjJGW,CAA6BnB,EAAIU,YAAYK,gBAA7CN,WAAA,EACGT,EAAIU,YAAYC,UADnBG,OAEAP,CAAAA,KAGGa,EAAcpB,EAAIU,YAAYU,aAAeZ,EAAAA,YAC7Ca,EAAkBrB,EAAIU,YAAYY,aAGxC,OAAOF,EACNf,OAHwCkB,IAApBF,EAAgC,CAAA,EAAKA,EAKzDV,EAED,UAceP,EAIdJ,EAAwCG,GACzC,IAAMqB,EAAuC,CAAA,EAGpBC,OAAOC,KAAKvB,EAAMwB,UAC1BzB,SAAQ,SAAC0B,GACzB,IAAMC,EAiHR,SAA6BD,GAC5B,OAAOA,EAAWE,QAAQ,MAAQ,CAClC,CAnHoBC,CAAoBH,GACpCA,EACGzB,EAAM6B,SAAQJ,EAEpBJ,EAAcK,GAAc1B,EAAMwB,SAASC,MAI5C,IAAMK,EAAkB,SACvBC,EACAC,GAEA,YAHA,IAAAD,IAAAA,EAAgB/B,EAAM+B,OAGlBC,EAAOC,QAAQZ,EACXA,EAAcW,EAAOC,MAC3BF,EACAC,EAAOE,QACPF,EAAOG,MAMFJ,GAGFK,EAAmBpC,EAAMqC,YAG3BC,EAAWF,EAEZ,SAACL,EAA6BC,GAA9B,YAAA,IAACD,IAAAA,EAAgB/B,EAAM+B,OACvBD,EAAgBM,EAAiBL,EAAOC,GAASA,IAFjDF,EAIHjC,EAAI0C,cAAc,aAAa,SAACC,GAC/BF,EAAUE,EAAUF,EAAStC,EAAM6B,KAAMhC,IAAQyC,KAGlDzC,EAAIU,YAAYiB,SAASxB,EAAM6B,MAAQS,CACvC,CAQenC,SAAAA,EAIdN,GACD,IAAQ4C,EAAiB5C,EAAIU,YAArBkC,aACFC,EA+BP,SACCnC,GAEA,IAAMoC,EAAkBpC,EAAYoC,iBAAmBtC,kBAEvD,IAAKiB,OAAOC,KAAKhB,EAAYiB,UAAUoB,OACtC,OAAO,SAACb,GAAD,OAA4BA,GAGpC,OAAOY,EAAgBpC,EAAYiB,SACnC,CAzCuBqB,CAA0BhD,EAAIU,aACjDL,EAAcwC,EAqBlB,OAnBID,GAAgBnB,OAAOC,KAAKkB,GAAcG,SAC7C1C,EAAc,SACb6B,EACAC,GAEA,IAAMc,EAAoBL,EAAaT,EAAOC,MAE9C,OACQS,EADJI,EACmBA,EAAkBf,EAAOC,GAG1BD,EAHmCC,KAO3DnC,EAAI0C,cAAc,iBAAiB,SAACQ,GACnC7C,EAAc6C,EAAc7C,EAAaL,IAAQK,KAG3CA,CACP"}