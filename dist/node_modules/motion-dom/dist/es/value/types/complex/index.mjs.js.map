{"version":3,"file":"index.mjs.js","sources":["../../../../../../../../node_modules/motion-dom/dist/es/value/types/complex/index.mjs"],"sourcesContent":["import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n"],"names":["NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","value","originalValue","toString","values","indexes","color","number","var","types","i","split","replace","parsedValue","test","push","parse","startsWith","parseFloat","parseComplexValue","v","createTransformer","source","numSections","length","output","undefined","type","sanitize","transform","convertNumbersToZero","complex","isNaN","match","floatRegex","colorRegex","getAnimatableNone","parsed","transformer","map"],"mappings":"mOAYA,MAAMA,EAAe,SACfC,EAAc,QACdC,EAAY,MACZC,EAAqB,OACrBC,EAAc,MAEdC,EAAe,kOACrB,SAASC,EAAoBC,GACzB,MAAMC,EAAgBD,EAAME,WACtBC,EAAS,GACTC,EAAU,CACZC,MAAO,GACPC,OAAQ,GACRC,IAAK,IAEHC,EAAQ,GACd,IAAIC,EAAI,EACR,MAmBMC,EAnBYT,EAAcU,QAAQb,GAAec,IAC/CP,EAAKA,MAACQ,KAAKD,IACXR,EAAQC,MAAMS,KAAKL,GACnBD,EAAMM,KAAKpB,GACXS,EAAOW,KAAKT,EAAAA,MAAMU,MAAMH,KAEnBA,EAAYI,WAAWpB,IAC5BQ,EAAQG,IAAIO,KAAKL,GACjBD,EAAMM,KAAKnB,GACXQ,EAAOW,KAAKF,KAGZR,EAAQE,OAAOQ,KAAKL,GACpBD,EAAMM,KAAKrB,GACXU,EAAOW,KAAKG,WAAWL,OAEzBH,EACKZ,KAEaa,MAAMb,GAC9B,MAAO,CAAEM,SAAQO,QAAON,UAASI,QACrC,CACA,SAASU,EAAkBC,GACvB,OAAOpB,EAAoBoB,GAAGhB,MAClC,CACA,SAASiB,EAAkBC,GACvB,MAAMX,MAAEA,EAAKF,MAAEA,GAAUT,EAAoBsB,GACvCC,EAAcZ,EAAMa,OAC1B,OAAQJ,IACJ,IAAIK,EAAS,GACb,IAAK,IAAIf,EAAI,EAAGA,EAAIa,EAAab,IAE7B,GADAe,GAAUd,EAAMD,QACHgB,IAATN,EAAEV,GAAkB,CACpB,MAAMiB,EAAOlB,EAAMC,GAEfe,GADAE,IAASjC,EACCkC,EAAQA,SAACR,EAAEV,IAEhBiB,IAAShC,EACJW,EAAAA,MAAMuB,UAAUT,EAAEV,IAGlBU,EAAEV,EAEpB,CAEJ,OAAOe,CAAM,CAErB,CACA,MAAMK,EAAwBV,GAAmB,iBAANA,EAAiB,EAAIA,EAMhE,MAAMW,EAAU,CACZjB,KA/EJ,SAAcM,GACV,OAAQY,MAAMZ,IACG,iBAANA,IACNA,EAAEa,MAAMC,EAAUA,aAAGV,QAAU,IAC3BJ,EAAEa,MAAME,EAAAA,aAAaX,QAAU,GAChC,CACZ,EA0EIR,MAAOG,EACPE,oBACAe,kBATJ,SAA2BhB,GACvB,MAAMiB,EAASlB,EAAkBC,GAEjC,OADoBC,EAAkBD,EAC/BkB,CAAYD,EAAOE,IAAIT,GAClC"}