{"version":3,"file":"find.mjs.js","sources":["../../../../../../../../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs"],"sourcesContent":["import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n"],"names":["safeMin","rootIterations","calcAngularFreq","undampedFreq","dampingRatio","Math","sqrt","duration","springDefaults","bounce","velocity","mass","envelope","derivative","warning","secondsToMilliseconds","maxDuration","clamp","minDamping","maxDamping","minDuration","millisecondsToSeconds","exponentialDecay","delta","a","b","c","exp","d","e","pow","f","g","initialGuess","result","i","approximateRoot","isNaN","stiffness","damping"],"mappings":"qTAGA,MAAMA,EAAU,KAoEhB,MAAMC,EAAiB,GAQvB,SAASC,EAAgBC,EAAcC,GACnC,OAAOD,EAAeE,KAAKC,KAAK,EAAIF,EAAeA,EACvD,8CA7EA,UAAoBG,SAAEA,EAAWC,EAAcA,eAACD,SAAQE,OAAEA,EAASD,EAAcA,eAACC,OAAMC,SAAEA,EAAWF,EAAcA,eAACE,SAAQC,KAAEA,EAAOH,EAAcA,eAACG,OAChJ,IAAIC,EACAC,EACJC,EAAOA,QAACP,GAAYQ,EAAqBA,sBAACP,EAAcA,eAACQ,aAAc,8CACvE,IAAIZ,EAAe,EAAIK,EAIvBL,EAAea,EAAKA,MAACT,iBAAeU,WAAYV,EAAAA,eAAeW,WAAYf,GAC3EG,EAAWU,EAAAA,MAAMT,EAAAA,eAAeY,YAAaZ,EAAcA,eAACQ,YAAaK,EAAAA,sBAAsBd,IAC3FH,EAAe,GAIfQ,EAAYT,IACR,MAAMmB,EAAmBnB,EAAeC,EAClCmB,EAAQD,EAAmBf,EAC3BiB,EAAIF,EAAmBZ,EACvBe,EAAIvB,EAAgBC,EAAcC,GAClCsB,EAAIrB,KAAKsB,KAAKJ,GACpB,OAAOvB,EAAWwB,EAAIC,EAAKC,CAAC,EAEhCb,EAAcV,IACV,MACMoB,EADmBpB,EAAeC,EACPG,EAC3BqB,EAAIL,EAAQb,EAAWA,EACvBmB,EAAIxB,KAAKyB,IAAI1B,EAAc,GAAKC,KAAKyB,IAAI3B,EAAc,GAAKI,EAC5DwB,EAAI1B,KAAKsB,KAAKJ,GACdS,EAAI9B,EAAgBG,KAAKyB,IAAI3B,EAAc,GAAIC,GAErD,QADgBQ,EAAST,GAAgBH,EAAU,GAAK,EAAI,KACzC4B,EAAIC,GAAKE,GAAMC,CAAC,IAOvCpB,EAAYT,GACEE,KAAKsB,KAAKxB,EAAeI,KACxBJ,EAAeO,GAAYH,EAAW,GAC1C,KAEXM,EAAcV,GACAE,KAAKsB,KAAKxB,EAAeI,IACIA,EAAWA,GAAvCG,EAAWP,KAI9B,MACMA,EAmBV,SAAyBS,EAAUC,EAAYoB,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAIE,EAAI,EAAGA,EAAIlC,EAAgBkC,IAChCD,GAAkBtB,EAASsB,GAAUrB,EAAWqB,GAEpD,OAAOA,CACX,CAzByBE,CAAgBxB,EAAUC,EAD1B,EAAIN,GAGzB,GADAA,EAAWQ,EAAAA,sBAAsBR,GAC7B8B,MAAMlC,GACN,MAAO,CACHmC,UAAW9B,EAAcA,eAAC8B,UAC1BC,QAAS/B,EAAcA,eAAC+B,QACxBhC,YAGH,CACD,MAAM+B,EAAYjC,KAAKyB,IAAI3B,EAAc,GAAKQ,EAC9C,MAAO,CACH2B,YACAC,QAAwB,EAAfnC,EAAmBC,KAAKC,KAAKK,EAAO2B,GAC7C/B,WAER,CACJ"}