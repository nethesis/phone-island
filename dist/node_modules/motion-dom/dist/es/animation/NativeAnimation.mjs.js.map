{"version":3,"file":"NativeAnimation.mjs.js","sources":["../../../../../../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs"],"sourcesContent":["import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n        /**\n         * TODO: In a breaking change, we should replace this with `.notifyCancel()`\n         */\n        this.animation.oncancel = () => this.notifyFinished();\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n"],"names":["NativeAnimation","WithPromise","constructor","options","super","this","finishedTime","isStopped","element","name","keyframes","pseudoElement","allowFlatten","finalKeyframe","onComplete","isPseudoElement","Boolean","invariant","type","transition","applyGeneratorOptions","animation","startWaapiAnimation","autoplay","pause","onfinish","time","keyframe","getFinalKeyframe","speed","updateMotionValue","setStyle","cancel","notifyFinished","oncancel","play","state","updateFinished","complete","finish","e","stop","commitStyles","duration","effect","getComputedTiming","millisecondsToSeconds","Number","currentTime","newTime","secondsToMilliseconds","playbackRate","newSpeed","playState","startTime","newStartTime","attachTimeline","timeline","observe","updateTiming","easing","supportsScrollTimeline","noop"],"mappings":"2hBAWA,MAAMA,UAAwBC,EAAAA,YAC1BC,WAAAA,CAAYC,GAIR,GAHAC,QACAC,KAAKC,aAAe,KACpBD,KAAKE,WAAY,GACZJ,EACD,OACJ,MAAMK,QAAEA,EAAOC,KAAEA,EAAIC,UAAEA,EAASC,cAAEA,EAAaC,aAAEA,GAAe,EAAKC,cAAEA,EAAaC,WAAEA,GAAgBX,EACtGE,KAAKU,gBAAkBC,QAAQL,GAC/BN,KAAKO,aAAeA,EACpBP,KAAKF,QAAUA,EACfc,EAASA,UAAyB,iBAAjBd,EAAQe,KAAmB,qGAC5C,MAAMC,EAAaC,wBAAsBjB,GACzCE,KAAKgB,UAAYC,EAAAA,oBAAoBd,EAASC,EAAMC,EAAWS,EAAYR,IAC/C,IAAxBQ,EAAWI,UACXlB,KAAKgB,UAAUG,QAEnBnB,KAAKgB,UAAUI,SAAW,KAEtB,GADApB,KAAKC,aAAeD,KAAKqB,MACpBf,EAAe,CAChB,MAAMgB,EAAWC,EAAgBA,iBAAClB,EAAWL,KAAKF,QAASU,EAAeR,KAAKwB,OAC3ExB,KAAKyB,kBACLzB,KAAKyB,kBAAkBH,GAOvBI,EAAAA,SAASvB,EAASC,EAAMkB,GAE5BtB,KAAKgB,UAAUW,QACnB,CACAlB,MACAT,KAAK4B,gBAAgB,EAKzB5B,KAAKgB,UAAUa,SAAW,IAAM7B,KAAK4B,gBACzC,CACAE,IAAAA,GACQ9B,KAAKE,YAETF,KAAKgB,UAAUc,OACI,aAAf9B,KAAK+B,OACL/B,KAAKgC,iBAEb,CACAb,KAAAA,GACInB,KAAKgB,UAAUG,OACnB,CACAc,QAAAA,GACIjC,KAAKgB,UAAUkB,UACnB,CACAP,MAAAA,GACI,IACI3B,KAAKgB,UAAUW,QACnB,CACA,MAAOQ,GAAK,CAChB,CACAC,IAAAA,GACI,GAAIpC,KAAKE,UACL,OACJF,KAAKE,WAAY,EACjB,MAAM6B,MAAEA,GAAU/B,KACJ,SAAV+B,GAA8B,aAAVA,IAGpB/B,KAAKyB,kBACLzB,KAAKyB,oBAGLzB,KAAKqC,eAEJrC,KAAKU,iBACNV,KAAK2B,SACb,CAaAU,YAAAA,GACSrC,KAAKU,iBACNV,KAAKgB,UAAUqB,gBAEvB,CACA,YAAIC,GACA,MAAMA,EAAWtC,KAAKgB,UAAUuB,QAAQC,sBAAsBF,UAAY,EAC1E,OAAOG,wBAAsBC,OAAOJ,GACxC,CACA,QAAIjB,GACA,OAAOoB,EAAAA,sBAAsBC,OAAO1C,KAAKgB,UAAU2B,cAAgB,EACvE,CACA,QAAItB,CAAKuB,GACL5C,KAAKC,aAAe,KACpBD,KAAKgB,UAAU2B,YAAcE,EAAqBA,sBAACD,EACvD,CAKA,SAAIpB,GACA,OAAOxB,KAAKgB,UAAU8B,YAC1B,CACA,SAAItB,CAAMuB,GAEFA,EAAW,IACX/C,KAAKC,aAAe,MACxBD,KAAKgB,UAAU8B,aAAeC,CAClC,CACA,SAAIhB,GACA,OAA6B,OAAtB/B,KAAKC,aACN,WACAD,KAAKgB,UAAUgC,SACzB,CACA,aAAIC,GACA,OAAOP,OAAO1C,KAAKgB,UAAUiC,UACjC,CACA,aAAIA,CAAUC,GACVlD,KAAKgB,UAAUiC,UAAYC,CAC/B,CAIAC,cAAAA,EAAeC,SAAEA,EAAQC,QAAEA,IAKvB,OAJIrD,KAAKO,cACLP,KAAKgB,UAAUuB,QAAQe,aAAa,CAAEC,OAAQ,WAElDvD,KAAKgB,UAAUI,SAAW,KACtBgC,GAAYI,EAAAA,0BACZxD,KAAKgB,UAAUoC,SAAWA,EACnBK,QAGAJ,EAAQrD,KAEvB"}