{"version":3,"file":"complex.mjs.js","sources":["../../../../../../../node_modules/motion-dom/dist/es/utils/mix/complex.mjs"],"sourcesContent":["import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n"],"names":["mixNumber","a","b","p","mixNumber$1","getMixer","isCSSVariableToken","mixImmediate","color","test","mixColor","mixComplex","Array","isArray","mixArray","mixObject","output","numValues","length","blendValue","map","v","i","key","undefined","origin","target","template","complex","createTransformer","originStats","analyseComplexValue","targetStats","indexes","var","number","invisibleValues","has","values","mixVisibility","pipe","orderedOrigin","pointers","type","types","originIndex","originValue","matchOrder","warning"],"mappings":"8dASA,SAASA,EAAUC,EAAGC,GAClB,OAAQC,GAAMC,EAAWJ,UAACC,EAAGC,EAAGC,EACpC,CACA,SAASE,EAASJ,GACd,MAAiB,iBAANA,EACAD,EAEW,iBAANC,EACLK,EAAkBA,mBAACL,GACpBM,eACAC,EAAAA,MAAMC,KAAKR,GACPS,EAAQA,SACRC,EAELC,MAAMC,QAAQZ,GACZa,EAEW,iBAANb,EACLO,EAAKA,MAACC,KAAKR,GAAKS,EAAAA,SAAWK,EAE/BR,cACX,CACA,SAASO,EAASb,EAAGC,GACjB,MAAMc,EAAS,IAAIf,GACbgB,EAAYD,EAAOE,OACnBC,EAAalB,EAAEmB,KAAI,CAACC,EAAGC,IAAMjB,EAASgB,EAAThB,CAAYgB,EAAGnB,EAAEoB,MACpD,OAAQnB,IACJ,IAAK,IAAImB,EAAI,EAAGA,EAAIL,EAAWK,IAC3BN,EAAOM,GAAKH,EAAWG,GAAGnB,GAE9B,OAAOa,CAAM,CAErB,CACA,SAASD,EAAUd,EAAGC,GAClB,MAAMc,EAAS,IAAKf,KAAMC,GACpBiB,EAAa,CAAA,EACnB,IAAK,MAAMI,KAAOP,OACCQ,IAAXvB,EAAEsB,SAAiCC,IAAXtB,EAAEqB,KAC1BJ,EAAWI,GAAOlB,EAASJ,EAAEsB,GAAXlB,CAAiBJ,EAAEsB,GAAMrB,EAAEqB,KAGrD,OAAQF,IACJ,IAAK,MAAME,KAAOJ,EACdH,EAAOO,GAAOJ,EAAWI,GAAKF,GAElC,OAAOL,CAAM,CAErB,CAaA,MAAML,EAAaA,CAACc,EAAQC,KACxB,MAAMC,EAAWC,EAAAA,QAAQC,kBAAkBH,GACrCI,EAAcC,sBAAoBN,GAClCO,EAAcD,sBAAoBL,GAIxC,OAHuBI,EAAYG,QAAQC,IAAIhB,SAAWc,EAAYC,QAAQC,IAAIhB,QAC9EY,EAAYG,QAAQzB,MAAMU,SAAWc,EAAYC,QAAQzB,MAAMU,QAC/DY,EAAYG,QAAQE,OAAOjB,QAAUc,EAAYC,QAAQE,OAAOjB,OAE3DkB,EAAAA,gBAAgBC,IAAIZ,KACpBO,EAAYM,OAAOpB,QACnBkB,EAAAA,gBAAgBC,IAAIX,KAChBI,EAAYQ,OAAOpB,OACjBqB,EAAaA,cAACd,EAAQC,GAE1Bc,EAAIA,KAAC1B,EA1BpB,SAAoBW,EAAQC,GACxB,MAAMe,EAAgB,GAChBC,EAAW,CAAElC,MAAO,EAAG0B,IAAK,EAAGC,OAAQ,GAC7C,IAAK,IAAIb,EAAI,EAAGA,EAAII,EAAOY,OAAOpB,OAAQI,IAAK,CAC3C,MAAMqB,EAAOjB,EAAOkB,MAAMtB,GACpBuB,EAAcpB,EAAOQ,QAAQU,GAAMD,EAASC,IAC5CG,EAAcrB,EAAOa,OAAOO,IAAgB,EAClDJ,EAAcnB,GAAKwB,EACnBJ,EAASC,IACb,CACA,OAAOF,CACX,CAe6BM,CAAWjB,EAAaE,GAAcA,EAAYM,QAASX,IAGhFqB,WAAQ,EAAM,mBAAmBvB,WAAgBC,6KAC1CnB,EAAYA,aAACkB,EAAQC,GAChC"}