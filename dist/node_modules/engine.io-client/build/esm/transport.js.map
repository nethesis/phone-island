{"version":3,"file":"transport.js","sources":["../../../../../node_modules/engine.io-client/build/esm/transport.js"],"sourcesContent":["import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n"],"names":["TransportError","Error","constructor","reason","description","context","super","this","type","Transport","Emitter","opts","writable","installTimerFunctions","query","socket","onError","emitReserved","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","data","packet","decodePacket","binaryType","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","encode","length"],"mappings":"mZAIO,MAAMA,UAAuBC,MAChCC,WAAAA,CAAYC,EAAQC,EAAaC,GAC7BC,MAAMH,GACNI,KAAKH,YAAcA,EACnBG,KAAKF,QAAUA,EACfE,KAAKC,KAAO,gBAChB,EAEG,MAAMC,UAAkBC,EAAAA,QAO3BR,WAAAA,CAAYS,GACRL,QACAC,KAAKK,UAAW,EAChBC,wBAAsBN,KAAMI,GAC5BJ,KAAKI,KAAOA,EACZJ,KAAKO,MAAQH,EAAKG,MAClBP,KAAKQ,OAASJ,EAAKI,MACvB,CAUAC,OAAAA,CAAQb,EAAQC,EAAaC,GAEzB,OADAC,MAAMW,aAAa,QAAS,IAAIjB,EAAeG,EAAQC,EAAaC,IAC7DE,IACX,CAIAW,IAAAA,GAGI,OAFAX,KAAKY,WAAa,UAClBZ,KAAKa,SACEb,IACX,CAIAc,KAAAA,GAKI,MAJwB,YAApBd,KAAKY,YAAgD,SAApBZ,KAAKY,aACtCZ,KAAKe,UACLf,KAAKgB,WAEFhB,IACX,CAMAiB,IAAAA,CAAKC,GACuB,SAApBlB,KAAKY,YACLZ,KAAKmB,MAAMD,EAKnB,CAMAE,MAAAA,GACIpB,KAAKY,WAAa,OAClBZ,KAAKK,UAAW,EAChBN,MAAMW,aAAa,OACvB,CAOAW,MAAAA,CAAOC,GACH,MAAMC,EAASC,EAAAA,aAAaF,EAAMtB,KAAKQ,OAAOiB,YAC9CzB,KAAK0B,SAASH,EAClB,CAMAG,QAAAA,CAASH,GACLxB,MAAMW,aAAa,SAAUa,EACjC,CAMAP,OAAAA,CAAQW,GACJ3B,KAAKY,WAAa,SAClBb,MAAMW,aAAa,QAASiB,EAChC,CAMAC,KAAAA,CAAMC,GAAW,CACjBC,SAAAA,CAAUC,EAAQxB,EAAQ,IACtB,OAAQwB,EACJ,MACA/B,KAAKgC,YACLhC,KAAKiC,QACLjC,KAAKI,KAAK8B,KACVlC,KAAKmC,OAAO5B,EACpB,CACAyB,SAAAA,GACI,MAAMI,EAAWpC,KAAKI,KAAKgC,SAC3B,OAAkC,IAA3BA,EAASC,QAAQ,KAAcD,EAAW,IAAMA,EAAW,GACtE,CACAH,KAAAA,GACI,OAAIjC,KAAKI,KAAKkC,OACRtC,KAAKI,KAAKmC,QAAUC,OAA0B,MAAnBxC,KAAKI,KAAKkC,QACjCtC,KAAKI,KAAKmC,QAAqC,KAA3BC,OAAOxC,KAAKI,KAAKkC,OACpC,IAAMtC,KAAKI,KAAKkC,KAGhB,EAEf,CACAH,MAAAA,CAAO5B,GACH,MAAMkC,EAAeC,SAAOnC,GAC5B,OAAOkC,EAAaE,OAAS,IAAMF,EAAe,EACtD"}