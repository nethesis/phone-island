{"version":3,"file":"yeast.js","sources":["../../../../../../node_modules/engine.io-client/build/esm/contrib/yeast.js"],"sourcesContent":["// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n"],"names":["alphabet","split","length","map","prev","seed","i","encode","num","encoded","Math","floor","now","Date"],"mappings":"oEAEA,MAAMA,EAAW,mEAAmEC,MAAM,IAAKC,EAAS,GAAIC,EAAM,CAAA,EAClH,IAAqBC,EAAjBC,EAAO,EAAGC,EAAI,EAQX,SAASC,EAAOC,GACnB,IAAIC,EAAU,GACd,GACIA,EAAUT,EAASQ,EAAMN,GAAUO,EACnCD,EAAME,KAAKC,MAAMH,EAAMN,SAClBM,EAAM,GACf,OAAOC,CACX,CA8BA,KAAOH,EAAIJ,EAAQI,IACfH,EAAIH,EAASM,IAAMA,iCAVhB,WACH,MAAMM,EAAML,GAAQ,IAAIM,MACxB,OAAID,IAAQR,GACDC,EAAO,EAAGD,EAAOQ,GACrBA,EAAM,IAAML,EAAOF,IAC9B"}