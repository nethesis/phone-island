{"version":3,"file":"parseuri.js","sources":["../../../../../../node_modules/engine.io-client/build/esm/contrib/parseuri.js"],"sourcesContent":["// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n"],"names":["re","parts","str","length","src","b","indexOf","e","substring","replace","m","exec","uri","i","source","host","authority","ipv6uri","pathNames","obj","path","regx","names","split","slice","splice","queryKey","query","data","$0","$1","$2"],"mappings":"oEAmBA,MAAMA,EAAK,sPACLC,EAAQ,CACV,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,wBAElI,SAAeC,GAClB,GAAIA,EAAIC,OAAS,IACb,KAAM,eAEV,MAAMC,EAAMF,EAAKG,EAAIH,EAAII,QAAQ,KAAMC,EAAIL,EAAII,QAAQ,MAC7C,GAAND,IAAiB,GAANE,IACXL,EAAMA,EAAIM,UAAU,EAAGH,GAAKH,EAAIM,UAAUH,EAAGE,GAAGE,QAAQ,KAAM,KAAOP,EAAIM,UAAUD,EAAGL,EAAIC,SAE9F,IAAIO,EAAIV,EAAGW,KAAKT,GAAO,IAAKU,EAAM,CAAE,EAAEC,EAAI,GAC1C,KAAOA,KACHD,EAAIX,EAAMY,IAAMH,EAAEG,IAAM,GAU5B,OARU,GAANR,IAAiB,GAANE,IACXK,EAAIE,OAASV,EACbQ,EAAIG,KAAOH,EAAIG,KAAKP,UAAU,EAAGI,EAAIG,KAAKZ,OAAS,GAAGM,QAAQ,KAAM,KACpEG,EAAII,UAAYJ,EAAII,UAAUP,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,KAAM,KAC9EG,EAAIK,SAAU,GAElBL,EAAIM,UAIR,SAAmBC,EAAKC,GACpB,MAAMC,EAAO,WAAYC,EAAQF,EAAKX,QAAQY,EAAM,KAAKE,MAAM,KACvC,KAApBH,EAAKI,MAAM,EAAG,IAA6B,IAAhBJ,EAAKjB,QAChCmB,EAAMG,OAAO,EAAG,GAEE,KAAlBL,EAAKI,OAAO,IACZF,EAAMG,OAAOH,EAAMnB,OAAS,EAAG,GAEnC,OAAOmB,CACX,CAboBJ,CAAUN,EAAKA,EAAU,MACzCA,EAAIc,SAaR,SAAkBd,EAAKe,GACnB,MAAMC,EAAO,CAAA,EAMb,OALAD,EAAMlB,QAAQ,6BAA6B,SAAUoB,EAAIC,EAAIC,GACrDD,IACAF,EAAKE,GAAMC,EAEnB,IACOH,CACX,CArBmBF,CAASd,EAAKA,EAAW,OACjCA,CACX"}