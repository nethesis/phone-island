{"version":3,"file":"redux.js","sources":["../../../../node_modules/redux/es/redux.js"],"sourcesContent":["import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore, legacy_createStore };\n"],"names":["formatProdErrorMessage","code","$$observable","Symbol","observable","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","proto","Object","getPrototypeOf","miniKindOf","val","type","Array","isArray","Date","toDateString","getDate","setDate","isDate","Error","message","constructor","stackTraceLimit","isError","constructorName","name","ctorName","slice","toLowerCase","replace","kindOf","typeOfVal","process","env","NODE_ENV","createStore","reducer","preloadedState","enhancer","_ref2","arguments","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","subscribe","listener","isSubscribed","push","index","indexOf","splice","dispatch","action","listeners","i","length","replaceReducer","nextReducer","_ref","outerSubscribe","observer","observeState","next","unsubscribe","this","legacy_createStore","warning","console","error","e","bindActionCreator","actionCreator","apply","compose","_len","funcs","_key","arg","reduce","a","b","isCrushed","middlewares","store","_dispatch","middlewareAPI","chain","map","middleware","_objectSpread","actionCreators","boundActionCreators","key","reducers","reducerKeys","keys","finalReducers","unexpectedKeyCache","shapeAssertionError","finalReducerKeys","forEach","assertReducerShape","state","warningMessage","inputState","argumentName","unexpectedKeys","filter","hasOwnProperty","getUnexpectedStateShapeWarningMessage","hasChanged","nextState","_i","previousStateForKey","nextStateForKey","actionType","String"],"mappings":"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"}