"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e,r,n=require("./lib/ReactPropTypesSecret.js"),t=require("./lib/has.js");exports.__require=function(){if(r)return e;r=1;var o=function(){};if("production"!==process.env.NODE_ENV){var a=n.__require(),i={},s=t.__require();o=function(e){var r="Warning: "+e;"undefined"!=typeof console&&console.error(r);try{throw new Error(r)}catch(e){}}}function c(e,r,n,t,c){if("production"!==process.env.NODE_ENV)for(var u in e)if(s(e,u)){var f;try{if("function"!=typeof e[u]){var p=Error((t||"React class")+": "+n+" type `"+u+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+typeof e[u]+"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");throw p.name="Invariant Violation",p}f=e[u](r,u,t,n,null,a)}catch(e){f=e}if(!f||f instanceof Error||o((t||"React class")+": type specification of "+n+" `"+u+"` is invalid; the type checker function must return `null` or an `Error` but returned a "+typeof f+". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."),f instanceof Error&&!(f.message in i)){i[f.message]=!0;var l=c?c():"";o("Failed "+n+" type: "+f.message+(null!=l?l:""))}}}return c.resetWarningCache=function(){"production"!==process.env.NODE_ENV&&(i={})},e=c};
//# sourceMappingURL=checkPropTypes.js.map
