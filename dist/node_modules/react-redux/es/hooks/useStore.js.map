{"version":3,"file":"useStore.js","sources":["../../../../../node_modules/react-redux/es/hooks/useStore.js"],"sourcesContent":["import { useContext } from 'react';\nimport { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context = ReactReduxContext) {\n  const useReduxContext = // @ts-ignore\n  context === ReactReduxContext ? useDefaultReduxContext : () => useContext(context);\n  return function useStore() {\n    const {\n      store\n    } = useReduxContext(); // @ts-ignore\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport const useStore = /*#__PURE__*/createStoreHook();"],"names":["createStoreHook","context","ReactReduxContext","useReduxContext","useDefaultReduxContext","useContext","store","useStore"],"mappings":"mKAUO,SAASA,EAAgBC,EAAUC,qBACxC,MAAMC,EACNF,IAAYC,EAAAA,kBAAoBE,EAAAA,gBAAyB,IAAMC,EAAUA,WAACJ,GAC1E,OAAO,WACL,MAAMK,MACJA,GACEH,IAEJ,OAAOG,EAEX,OAiBaC,EAAwBP"}