{"version":3,"file":"EBMLDecoder.js","sources":["../../../../../node_modules/webm-duration-fix/lib/ebml/EBMLDecoder.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar int64_buffer_1 = require(\"int64-buffer\");\nvar tools_1 = require(\"./tools\");\nvar tools = require(\"./tools\");\nvar ebmlID_1 = require(\"./ebmlID\");\nvar State;\n(function (State) {\n    State[State[\"STATE_TAG\"] = 1] = \"STATE_TAG\";\n    State[State[\"STATE_SIZE\"] = 2] = \"STATE_SIZE\";\n    State[State[\"STATE_CONTENT\"] = 3] = \"STATE_CONTENT\";\n})(State || (State = {}));\nvar EBMLDecoder = /** @class */ (function () {\n    function EBMLDecoder() {\n        this._buffer = new tools_1.Buffer(0);\n        this._tag_stack = [];\n        this._state = State.STATE_TAG;\n        this._cursor = 0;\n        this._total = 0;\n        this._schema = ebmlID_1.byEbmlID;\n        this._result = [];\n    }\n    EBMLDecoder.prototype.decode = function (chunk) {\n        this.readChunk(chunk);\n        var diff = this._result;\n        this._result = [];\n        return diff;\n    };\n    EBMLDecoder.prototype.readChunk = function (chunk) {\n        // 読みかけの(読めなかった) this._buffer と 新しい chunk を合わせて読み直す\n        this._buffer = tools.concat([this._buffer, new tools_1.Buffer(chunk)]);\n        while (this._cursor < this._buffer.length) {\n            // console.log(this._cursor, this._total, this._tag_stack);\n            if (this._state === State.STATE_TAG && !this.readTag()) {\n                break;\n            }\n            if (this._state === State.STATE_SIZE && !this.readSize()) {\n                break;\n            }\n            if (this._state === State.STATE_CONTENT && !this.readContent()) {\n                break;\n            }\n        }\n    };\n    EBMLDecoder.prototype.getSchemaInfo = function (tagNum) {\n        return this._schema[tagNum] || {\n            name: \"unknown\",\n            level: -1,\n            type: \"unknown\",\n            description: \"unknown\"\n        };\n    };\n    /**\n     * vint された parsing tag\n     * @return - return false when waiting for more data\n     */\n    EBMLDecoder.prototype.readTag = function () {\n        // tag.length が buffer の外にある\n        if (this._cursor >= this._buffer.length) {\n            return false;\n        }\n        // read ebml id vint without first byte\n        var tag = (0, tools_1.readVint)(this._buffer, this._cursor);\n        // tag が読めなかった\n        if (tag == null) {\n            return false;\n        }\n        // >>>>>>>>>\n        // tag 識別子\n        //const tagStr = this._buffer.toString(\"hex\", this._cursor, this._cursor + tag.length);\n        //const tagNum = parseInt(tagStr, 16);\n        // 上と等価\n        var buf = this._buffer.slice(this._cursor, this._cursor + tag.length);\n        var tagNum = buf.reduce(function (o, v, i, arr) { return o + v * Math.pow(16, 2 * (arr.length - 1 - i)); }, 0);\n        var schema = this.getSchemaInfo(tagNum);\n        var tagObj = {\n            EBML_ID: tagNum.toString(16),\n            schema: schema,\n            type: schema.type,\n            name: schema.name,\n            level: schema.level,\n            tagStart: this._total,\n            tagEnd: this._total + tag.length,\n            sizeStart: this._total + tag.length,\n            sizeEnd: null,\n            dataStart: null,\n            dataEnd: null,\n            dataSize: null,\n            data: null\n        };\n        // | tag: vint | size: vint | data: Buffer(size) |\n        this._tag_stack.push(tagObj);\n        // <<<<<<<<\n        // ポインタを進める\n        this._cursor += tag.length;\n        this._total += tag.length;\n        // 読み込み状態変更\n        this._state = State.STATE_SIZE;\n        return true;\n    };\n    /**\n     * vint された現在のタグの内容の大きさを読み込む\n     * @return - return false when waiting for more data\n     */\n    EBMLDecoder.prototype.readSize = function () {\n        // tag.length が buffer の外にある\n        if (this._cursor >= this._buffer.length) {\n            return false;\n        }\n        // read ebml datasize vint without first byte\n        var size = (0, tools_1.readVint)(this._buffer, this._cursor);\n        // まだ読めない\n        if (size == null) {\n            return false;\n        }\n        // >>>>>>>>>\n        // current tag の data size 決定\n        var tagObj = this._tag_stack[this._tag_stack.length - 1];\n        tagObj.sizeEnd = tagObj.sizeStart + size.length;\n        tagObj.dataStart = tagObj.sizeEnd;\n        tagObj.dataSize = size.value;\n        if (size.value === -1) {\n            // unknown size\n            tagObj.dataEnd = -1;\n            if (tagObj.type === \"m\") {\n                tagObj.unknownSize = true;\n            }\n        }\n        else {\n            tagObj.dataEnd = tagObj.sizeEnd + size.value;\n        }\n        // <<<<<<<<\n        // ポインタを進める\n        this._cursor += size.length;\n        this._total += size.length;\n        this._state = State.STATE_CONTENT;\n        return true;\n    };\n    /**\n     * データ読み込み\n     */\n    EBMLDecoder.prototype.readContent = function () {\n        var tagObj = this._tag_stack[this._tag_stack.length - 1];\n        // master element は子要素を持つので生データはない\n        if (tagObj.type === 'm') {\n            // console.log('content should be tags');\n            tagObj.isEnd = false;\n            this._result.push(tagObj);\n            this._state = State.STATE_TAG;\n            // この Mastert Element は空要素か\n            if (tagObj.dataSize === 0) {\n                // 即座に終了タグを追加\n                var elm = Object.assign({}, tagObj, { isEnd: true });\n                this._result.push(elm);\n                this._tag_stack.pop(); // スタックからこのタグを捨てる\n            }\n            return true;\n        }\n        // waiting for more data\n        if (this._buffer.length < this._cursor + tagObj.dataSize) {\n            return false;\n        }\n        // タグの中身の生データ\n        var data = this._buffer.slice(this._cursor, this._cursor + tagObj.dataSize);\n        // 読み終わったバッファを捨てて読み込んでいる部分のバッファのみ残す\n        this._buffer = this._buffer.slice(this._cursor + tagObj.dataSize);\n        tagObj.data = data;\n        // >>>>>>>>>\n        switch (tagObj.type) {\n            //case \"m\": break;\n            // Master-Element - contains other EBML sub-elements of the next lower level\n            case \"u\":\n                tagObj.value = data.readUIntBE(0, data.length);\n                break;\n            // Unsigned Integer - Big-endian, any size from 1 to 8 octets\n            case \"i\":\n                tagObj.value = data.readIntBE(0, data.length);\n                break;\n            // Signed Integer - Big-endian, any size from 1 to 8 octets\n            case \"f\":\n                tagObj.value = tagObj.dataSize === 4 ? data.readFloatBE(0) :\n                    tagObj.dataSize === 8 ? data.readDoubleBE(0) :\n                        (console.warn(\"cannot read \".concat(tagObj.dataSize, \" octets float. failback to 0\")), 0);\n                break;\n            // Float - Big-endian, defined for 4 and 8 octets (32, 64 bits)\n            case \"s\":\n                tagObj.value = data.toString(\"ascii\");\n                break; // ascii\n            //  Printable ASCII (0x20 to 0x7E), zero-padded when needed\n            case \"8\":\n                tagObj.value = data.toString(\"utf8\");\n                break;\n            //  Unicode string, zero padded when needed (RFC 2279)\n            case \"b\":\n                tagObj.value = data;\n                break;\n            // Binary - not interpreted by the parser\n            case \"d\":\n                tagObj.value = (0, tools_1.convertEBMLDateToJSDate)(new int64_buffer_1.Int64BE(data).toNumber());\n                break;\n            // nano second; Date.UTC(2001,1,1,0,0,0,0) === 980985600000\n            // Date - signed 8 octets integer in nanoseconds with 0 indicating \n            // the precise beginning of the millennium (at 2001-01-01T00:00:00,000000000 UTC)\n        }\n        if (tagObj.value === null) {\n            throw new Error(\"unknown tag type:\" + tagObj.type);\n        }\n        this._result.push(tagObj);\n        // <<<<<<<<\n        // ポインタを進める\n        this._total += tagObj.dataSize;\n        // タグ待ちモードに変更\n        this._state = State.STATE_TAG;\n        this._cursor = 0;\n        this._tag_stack.pop(); // remove the object from the stack\n        while (this._tag_stack.length > 0) {\n            var topEle = this._tag_stack[this._tag_stack.length - 1];\n            // 親が不定長サイズなので閉じタグは期待できない\n            if (topEle.dataEnd < 0) {\n                this._tag_stack.pop(); // 親タグを捨てる\n                return true;\n            }\n            // 閉じタグの来るべき場所まで来たかどうか\n            if (this._total < topEle.dataEnd) {\n                break;\n            }\n            // 閉じタグを挿入すべきタイミングが来た\n            if (topEle.type !== \"m\") {\n                throw new Error(\"parent element is not master element\");\n            }\n            var elm = Object.assign({}, topEle, { isEnd: true });\n            this._result.push(elm);\n            this._tag_stack.pop();\n        }\n        return true;\n    };\n    return EBMLDecoder;\n}());\nexports.default = EBMLDecoder;\n"],"names":["Object","defineProperty","EBMLDecoder_1","__exports","value","State","int64_buffer_1","require$$0","tools_1","require$$1","__require","tools","ebmlID_1","require$$2","EBMLDecoder","this","_buffer","Buffer","_tag_stack","_state","STATE_TAG","_cursor","_total","_schema","byEbmlID","_result","prototype","decode","chunk","readChunk","diff","concat","length","readTag","STATE_SIZE","readSize","STATE_CONTENT","readContent","getSchemaInfo","tagNum","name","level","type","description","tag","readVint","slice","reduce","o","v","i","arr","Math","pow","schema","tagObj","EBML_ID","toString","tagStart","tagEnd","sizeStart","sizeEnd","dataStart","dataEnd","dataSize","data","push","size","unknownSize","isEnd","elm","assign","pop","readUIntBE","readIntBE","readFloatBE","readDoubleBE","console","warn","convertEBMLDateToJSDate","Int64BE","toNumber","Error","topEle","default"],"mappings":"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"}