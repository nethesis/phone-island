{"version":3,"file":"EBMLReader.js","sources":["../../../../../node_modules/webm-duration-fix/lib/ebml/EBMLReader.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar events_1 = require(\"events\");\nvar tools = require(\"./tools\");\n/**\n * This is an informal code for reference.\n * EBMLReader is a class for getting information to enable seeking Webm recorded by MediaRecorder.\n * So please do not use for regular WebM files.\n */\nvar EBMLReader = /** @class */ (function (_super) {\n    __extends(EBMLReader, _super);\n    function EBMLReader() {\n        var _this = _super.call(this) || this;\n        _this.logGroup = \"\";\n        _this.hasLoggingStarted = false;\n        _this.metadataloaded = false;\n        _this.chunks = [];\n        _this.stack = [];\n        _this.segmentOffset = 0;\n        _this.last2SimpleBlockVideoTrackTimecode = [0, 0];\n        _this.last2SimpleBlockAudioTrackTimecode = [0, 0];\n        _this.lastClusterTimecode = 0;\n        _this.lastClusterPosition = 0;\n        _this.timecodeScale = 1000000; // webm default TimecodeScale is 1ms\n        _this.metadataSize = 0;\n        _this.metadatas = [];\n        _this.cues = [];\n        _this.firstVideoBlockRead = false;\n        _this.firstAudioBlockRead = false;\n        _this.currentTrack = { TrackNumber: -1, TrackType: -1, DefaultDuration: null, CodecDelay: null };\n        _this.trackTypes = [];\n        _this.trackDefaultDuration = [];\n        _this.trackCodecDelay = [];\n        _this.trackInfo = { type: \"nothing\" };\n        _this.ended = false;\n        _this.logging = false;\n        _this.use_duration_every_simpleblock = false;\n        _this.use_webp = false;\n        _this.use_segment_info = true;\n        _this.drop_default_duration = true;\n        return _this;\n    }\n    /**\n     * emit final state.\n     */\n    EBMLReader.prototype.stop = function () {\n        this.ended = true;\n        this.emit_segment_info();\n        // clean up any unclosed Master Elements at the end of the stream.\n        while (this.stack.length) {\n            this.stack.pop();\n            if (this.logging) {\n                console.groupEnd();\n            }\n        }\n        // close main group if set, logging is enabled, and has actually logged anything.\n        if (this.logging && this.hasLoggingStarted && this.logGroup) {\n            console.groupEnd();\n        }\n    };\n    /**\n     * emit chunk info\n     */\n    EBMLReader.prototype.emit_segment_info = function () {\n        var data = this.chunks;\n        this.chunks = [];\n        if (!this.metadataloaded) {\n            this.metadataloaded = true;\n            this.metadatas = data;\n            var videoTrackNum = this.trackTypes.indexOf(1); // find first video track\n            var audioTrackNum = this.trackTypes.indexOf(2); // find first audio track\n            this.trackInfo = videoTrackNum >= 0 && audioTrackNum >= 0 ? { type: \"both\", trackNumber: videoTrackNum }\n                : videoTrackNum >= 0 ? { type: \"video\", trackNumber: videoTrackNum }\n                    : audioTrackNum >= 0 ? { type: \"audio\", trackNumber: audioTrackNum }\n                        : { type: \"nothing\" };\n            if (!this.use_segment_info) {\n                return;\n            }\n            this.emit(\"metadata\", { data: data, metadataSize: this.metadataSize });\n        }\n        else {\n            if (!this.use_segment_info) {\n                return;\n            }\n            var timecode = this.lastClusterTimecode;\n            var duration = this.duration;\n            var timecodeScale = this.timecodeScale;\n            this.emit(\"cluster\", { timecode: timecode, data: data });\n            this.emit(\"duration\", { timecodeScale: timecodeScale, duration: duration });\n        }\n    };\n    EBMLReader.prototype.read = function (elm) {\n        var _this = this;\n        var drop = false;\n        if (this.ended) {\n            // reader is finished\n            return;\n        }\n        if (elm.type === \"m\") {\n            // 閉じタグの自動挿入\n            if (elm.isEnd) {\n                this.stack.pop();\n            }\n            else {\n                var parent_1 = this.stack[this.stack.length - 1];\n                if (parent_1 != null && parent_1.level >= elm.level) {\n                    // 閉じタグなしでレベルが下がったら閉じタグを挿入\n                    this.stack.pop();\n                    // From http://w3c.github.io/media-source/webm-byte-stream-format.html#webm-media-segments\n                    // This fixes logging for webm streams with Cluster of unknown length and no Cluster closing elements.\n                    if (this.logging) {\n                        console.groupEnd();\n                    }\n                    parent_1.dataEnd = elm.dataEnd;\n                    parent_1.dataSize = elm.dataEnd - parent_1.dataStart;\n                    parent_1.unknownSize = false;\n                    var o = Object.assign({}, parent_1, { name: parent_1.name, type: parent_1.type, isEnd: true });\n                    this.chunks.push(o);\n                }\n                this.stack.push(elm);\n            }\n        }\n        if (elm.type === \"m\" && elm.name == \"Segment\") {\n            if (this.segmentOffset != 0) {\n                console.warn(\"Multiple segments detected!\");\n            }\n            this.segmentOffset = elm.dataStart;\n            this.emit(\"segment_offset\", this.segmentOffset);\n        }\n        else if (elm.type === \"b\" && elm.name === \"SimpleBlock\") {\n            var _a = tools.ebmlBlock(elm.data), timecode = _a.timecode, trackNumber = _a.trackNumber, frames_1 = _a.frames;\n            if (this.trackTypes[trackNumber] === 1) { // trackType === 1 => video track\n                if (!this.firstVideoBlockRead) {\n                    this.firstVideoBlockRead = true;\n                    if (this.trackInfo.type === \"both\" || this.trackInfo.type === \"video\") {\n                        var CueTime = this.lastClusterTimecode + timecode;\n                        this.cues.push({ CueTrack: trackNumber, CueClusterPosition: this.lastClusterPosition, CueTime: CueTime });\n                        this.emit(\"cue_info\", { CueTrack: trackNumber, CueClusterPosition: this.lastClusterPosition, CueTime: this.lastClusterTimecode });\n                        this.emit(\"cue\", { CueTrack: trackNumber, CueClusterPosition: this.lastClusterPosition, CueTime: CueTime });\n                    }\n                }\n                this.last2SimpleBlockVideoTrackTimecode = [this.last2SimpleBlockVideoTrackTimecode[1], timecode];\n            }\n            else if (this.trackTypes[trackNumber] === 2) { // trackType === 2 => audio track\n                if (!this.firstAudioBlockRead) {\n                    this.firstAudioBlockRead = true;\n                    if (this.trackInfo.type === \"audio\") {\n                        var CueTime = this.lastClusterTimecode + timecode;\n                        this.cues.push({ CueTrack: trackNumber, CueClusterPosition: this.lastClusterPosition, CueTime: CueTime });\n                        this.emit(\"cue_info\", { CueTrack: trackNumber, CueClusterPosition: this.lastClusterPosition, CueTime: this.lastClusterTimecode });\n                        this.emit(\"cue\", { CueTrack: trackNumber, CueClusterPosition: this.lastClusterPosition, CueTime: CueTime });\n                    }\n                }\n                this.last2SimpleBlockAudioTrackTimecode = [this.last2SimpleBlockAudioTrackTimecode[1], timecode];\n            }\n            if (this.use_duration_every_simpleblock) {\n                this.emit(\"duration\", { timecodeScale: this.timecodeScale, duration: this.duration });\n            }\n            if (this.use_webp) {\n                frames_1.forEach(function (frame) {\n                    var startcode = frame.slice(3, 6).toString(\"hex\");\n                    if (startcode !== \"9d012a\") {\n                        return;\n                    }\n                    ; // VP8 の場合\n                    var webpBuf = tools.VP8BitStreamToRiffWebPBuffer(frame);\n                    var webp = new Blob([webpBuf], { type: \"image/webp\" });\n                    var currentTime = _this.duration;\n                    _this.emit(\"webp\", { currentTime: currentTime, webp: webp });\n                });\n            }\n        }\n        else if (elm.type === \"m\" && elm.name === \"Cluster\" && elm.isEnd === false) {\n            this.firstVideoBlockRead = false;\n            this.firstAudioBlockRead = false;\n            this.emit_segment_info();\n            this.emit(\"cluster_ptr\", elm.tagStart);\n            this.lastClusterPosition = elm.tagStart;\n        }\n        else if (elm.type === \"u\" && elm.name === \"Timecode\") {\n            this.lastClusterTimecode = elm.value;\n        }\n        else if (elm.type === \"u\" && elm.name === \"TimecodeScale\") {\n            this.timecodeScale = elm.value;\n        }\n        else if (elm.type === \"m\" && elm.name === \"TrackEntry\") {\n            if (elm.isEnd) {\n                this.trackTypes[this.currentTrack.TrackNumber] = this.currentTrack.TrackType;\n                this.trackDefaultDuration[this.currentTrack.TrackNumber] = this.currentTrack.DefaultDuration;\n                this.trackCodecDelay[this.currentTrack.TrackNumber] = this.currentTrack.CodecDelay;\n            }\n            else {\n                this.currentTrack = { TrackNumber: -1, TrackType: -1, DefaultDuration: null, CodecDelay: null };\n            }\n        }\n        else if (elm.type === \"u\" && elm.name === \"TrackType\") {\n            this.currentTrack.TrackType = elm.value;\n        }\n        else if (elm.type === \"u\" && elm.name === \"TrackNumber\") {\n            this.currentTrack.TrackNumber = elm.value;\n        }\n        else if (elm.type === \"u\" && elm.name === \"CodecDelay\") {\n            this.currentTrack.CodecDelay = elm.value;\n        }\n        else if (elm.type === \"u\" && elm.name === \"DefaultDuration\") {\n            // media source api は DefaultDuration を計算するとバグる。\n            // https://bugs.chromium.org/p/chromium/issues/detail?id=606000#c22\n            // chrome 58 ではこれを回避するために DefaultDuration 要素を抜き取った。\n            // chrome 58 以前でもこのタグを抜き取ることで回避できる\n            if (this.drop_default_duration) {\n                console.warn(\"DefaultDuration detected!, remove it\");\n                drop = true;\n            }\n            else {\n                this.currentTrack.DefaultDuration = elm.value;\n            }\n        }\n        else if (elm.name === \"unknown\") {\n            console.warn(elm);\n        }\n        if (!this.metadataloaded && elm.dataEnd > 0) {\n            this.metadataSize = elm.dataEnd;\n        }\n        if (!drop) {\n            this.chunks.push(elm);\n        }\n        if (this.logging) {\n            this.put(elm);\n        }\n    };\n    Object.defineProperty(EBMLReader.prototype, \"duration\", {\n        /**\n         * DefaultDuration が定義されている場合は最後のフレームのdurationも考慮する\n         * 単位 timecodeScale\n         *\n         * !!! if you need duration with seconds !!!\n         * ```js\n         * const nanosec = reader.duration * reader.timecodeScale;\n         * const sec = nanosec / 1000 / 1000 / 1000;\n         * ```\n         */\n        get: function () {\n            if (this.trackInfo.type === \"nothing\") {\n                console.warn(\"no video, no audio track\");\n                return 0;\n            }\n            // defaultDuration は 生の nano sec\n            var defaultDuration = 0;\n            // nanoseconds\n            var codecDelay = 0;\n            var lastTimecode = 0;\n            var _defaultDuration = this.trackDefaultDuration[this.trackInfo.trackNumber];\n            if (typeof _defaultDuration === \"number\") {\n                defaultDuration = _defaultDuration;\n            }\n            else {\n                // https://bugs.chromium.org/p/chromium/issues/detail?id=606000#c22\n                // default duration がないときに使う delta\n                if (this.trackInfo.type === \"both\") {\n                    if (this.last2SimpleBlockAudioTrackTimecode[1] > this.last2SimpleBlockVideoTrackTimecode[1]) {\n                        // audio diff\n                        defaultDuration = (this.last2SimpleBlockAudioTrackTimecode[1] - this.last2SimpleBlockAudioTrackTimecode[0]) * this.timecodeScale;\n                        // audio delay\n                        var delay = this.trackCodecDelay[this.trackTypes.indexOf(2)]; // 2 => audio\n                        if (typeof delay === \"number\") {\n                            codecDelay = delay;\n                        }\n                        // audio timecode\n                        lastTimecode = this.last2SimpleBlockAudioTrackTimecode[1];\n                    }\n                    else {\n                        // video diff\n                        defaultDuration = (this.last2SimpleBlockVideoTrackTimecode[1] - this.last2SimpleBlockVideoTrackTimecode[0]) * this.timecodeScale;\n                        // video delay\n                        var delay = this.trackCodecDelay[this.trackTypes.indexOf(1)]; // 1 => video\n                        if (typeof delay === \"number\") {\n                            codecDelay = delay;\n                        }\n                        // video timecode\n                        lastTimecode = this.last2SimpleBlockVideoTrackTimecode[1];\n                    }\n                }\n                else if (this.trackInfo.type === \"video\") {\n                    defaultDuration = (this.last2SimpleBlockVideoTrackTimecode[1] - this.last2SimpleBlockVideoTrackTimecode[0]) * this.timecodeScale;\n                    var delay = this.trackCodecDelay[this.trackInfo.trackNumber]; // 2 => audio\n                    if (typeof delay === \"number\") {\n                        codecDelay = delay;\n                    }\n                    lastTimecode = this.last2SimpleBlockVideoTrackTimecode[1];\n                }\n                else if (this.trackInfo.type === \"audio\") {\n                    defaultDuration = (this.last2SimpleBlockAudioTrackTimecode[1] - this.last2SimpleBlockAudioTrackTimecode[0]) * this.timecodeScale;\n                    var delay = this.trackCodecDelay[this.trackInfo.trackNumber]; // 1 => video\n                    if (typeof delay === \"number\") {\n                        codecDelay = delay;\n                    }\n                    lastTimecode = this.last2SimpleBlockAudioTrackTimecode[1];\n                } // else { not reached }\n            }\n            // convert to timecodescale\n            var duration_nanosec = ((this.lastClusterTimecode + lastTimecode) * this.timecodeScale) + defaultDuration - codecDelay;\n            var duration = duration_nanosec / this.timecodeScale;\n            return Math.floor(duration);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    EBMLReader.prototype.addListener = function (event, listener) {\n        return _super.prototype.addListener.call(this, event, listener);\n    };\n    EBMLReader.prototype.put = function (elm) {\n        if (!this.hasLoggingStarted) {\n            this.hasLoggingStarted = true;\n            if (this.logging && this.logGroup) {\n                console.groupCollapsed(this.logGroup);\n            }\n        }\n        if (elm.type === \"m\") {\n            if (elm.isEnd) {\n                console.groupEnd();\n            }\n            else {\n                console.group(elm.name + \":\" + elm.tagStart);\n            }\n        }\n        else if (elm.type === \"b\") {\n            // for debug\n            //if(elm.name === \"SimpleBlock\"){\n            //const o = EBML.tools.ebmlBlock(elm.value);\n            //console.log(elm.name, elm.type, o.trackNumber, o.timecode);\n            //}else{\n            console.log(elm.name, elm.type);\n            //}\n        }\n        else {\n            console.log(elm.name, elm.tagStart, elm.type, elm.value);\n        }\n    };\n    return EBMLReader;\n}(events_1.EventEmitter));\nexports.default = EBMLReader;\n;\n;\n;\n;\n"],"names":["extendStatics","__extends","this","commonjsGlobal","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","EBMLReader_1","__exports","value","events_1","require$$0","tools","require$$1","__require","EBMLReader","_super","_this","logGroup","hasLoggingStarted","metadataloaded","chunks","stack","segmentOffset","last2SimpleBlockVideoTrackTimecode","last2SimpleBlockAudioTrackTimecode","lastClusterTimecode","lastClusterPosition","timecodeScale","metadataSize","metadatas","cues","firstVideoBlockRead","firstAudioBlockRead","currentTrack","TrackNumber","TrackType","DefaultDuration","CodecDelay","trackTypes","trackDefaultDuration","trackCodecDelay","trackInfo","type","ended","logging","use_duration_every_simpleblock","use_webp","use_segment_info","drop_default_duration","stop","emit_segment_info","length","pop","console","groupEnd","data","timecode","duration","emit","videoTrackNum","indexOf","audioTrackNum","trackNumber","read","elm","drop","isEnd","parent_1","level","dataEnd","dataSize","dataStart","unknownSize","o","assign","name","push","warn","_a","ebmlBlock","frames_1","frames","CueTime","CueTrack","CueClusterPosition","forEach","frame","slice","toString","webpBuf","VP8BitStreamToRiffWebPBuffer","webp","Blob","currentTime","tagStart","put","get","defaultDuration","codecDelay","lastTimecode","_defaultDuration","delay","Math","floor","enumerable","configurable","addListener","event","listener","groupCollapsed","group","log","EventEmitter","default"],"mappings":"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"}