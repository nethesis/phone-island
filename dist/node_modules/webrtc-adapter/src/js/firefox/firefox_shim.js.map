{"version":3,"file":"firefox_shim.js","sources":["../../../../../../node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js"],"sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n      Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        // WebIDL input coercion and validation\n        let sendEncodings = arguments[1] && arguments[1].sendEncodings;\n        if (sendEncodings === undefined) {\n          sendEncodings = [];\n        }\n        sendEncodings = [...sendEncodings];\n        const shouldPerformCheck = sendEncodings.length > 0;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = sendEncodings;\n            sender.sendEncodings = sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateOffer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateAnswer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n"],"names":["window","RTCPeerConnection","origAddTransceiver","prototype","addTransceiver","this","setParametersPromises","sendEncodings","arguments","undefined","shouldPerformCheck","length","forEach","encodingParam","test","rid","TypeError","parseFloat","scaleResolutionDownBy","RangeError","maxFramerate","transceiver","apply","sender","params","getParameters","encodings","Object","keys","push","setParameters","then","catch","origCreateAnswer","createAnswer","Promise","all","finally","origCreateOffer","createOffer","RTCRtpSender","origGetParameters","concat","RTCTrackEvent","defineProperty","get","receiver","browserDetails","mozRTCPeerConnection","version","method","nativeMethod","methodObj","RTCIceCandidate","RTCSessionDescription","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","nativeGetStats","getStats","selector","onSucc","onErr","stats","stat","type","e","name","i","set","assign","DataChannel","RTCDataChannel","RTCRtpReceiver","origGetReceivers","getReceivers","receivers","_pc","utils","srcElement","track","removeStream","stream","getSenders","getTracks","includes","removeTrack","origGetSenders","senders","origAddTrack","addTrack","resolve","Map"],"mappings":"2RAyKO,SAA4BA,GAIjC,GAAwB,iBAAXA,IAAuBA,EAAOC,kBACzC,OAEF,MAAMC,EAAqBF,EAAOC,kBAAkBE,UAAUC,eAC1DF,IACFF,EAAOC,kBAAkBE,UAAUC,eACjC,WACEC,KAAKC,sBAAwB,GAE7B,IAAIC,EAAgBC,UAAU,IAAMA,UAAU,GAAGD,mBAC3BE,IAAlBF,IACFA,EAAgB,IAElBA,EAAgB,IAAIA,GACpB,MAAMG,EAAqBH,EAAcI,OAAS,EAC9CD,GAEFH,EAAcK,SAASC,IACrB,GAAI,QAASA,EAAe,CAE1B,IADiB,oBACHC,KAAKD,EAAcE,KAC/B,MAAM,IAAIC,UAAU,8BAExB,CACA,GAAI,0BAA2BH,KACvBI,WAAWJ,EAAcK,wBAA0B,GACvD,MAAM,IAAIC,WAAW,2CAGzB,GAAI,iBAAkBN,KACdI,WAAWJ,EAAcO,eAAiB,GAC9C,MAAM,IAAID,WAAW,+BAEzB,IAGJ,MAAME,EAAcnB,EAAmBoB,MAAMjB,KAAMG,WACnD,GAAIE,EAAoB,CAQtB,MAAMa,OAACA,GAAUF,EACXG,EAASD,EAAOE,mBAChB,cAAeD,IAEY,IAA5BA,EAAOE,UAAUf,QAC2B,IAA5CgB,OAAOC,KAAKJ,EAAOE,UAAU,IAAIf,UACpCa,EAAOE,UAAYnB,EACnBgB,EAAOhB,cAAgBA,EACvBF,KAAKC,sBAAsBuB,KAAKN,EAAOO,cAAcN,GAClDO,MAAK,YACGR,EAAOhB,aAAa,IAC1ByB,OAAM,YACAT,EAAOhB,aAAa,KAInC,CACA,OAAOc,GAGf,2BAyCO,SAA0BrB,GAI/B,GAAwB,iBAAXA,IAAuBA,EAAOC,kBACzC,OAEF,MAAMgC,EAAmBjC,EAAOC,kBAAkBE,UAAU+B,aAC5DlC,EAAOC,kBAAkBE,UAAU+B,aAAe,WAChD,OAAI7B,KAAKC,uBAAyBD,KAAKC,sBAAsBK,OACpDwB,QAAQC,IAAI/B,KAAKC,uBACrByB,MAAK,IACGE,EAAiBX,MAAMjB,KAAMG,aAErC6B,SAAQ,KACPhC,KAAKC,sBAAwB,EAAE,IAG9B2B,EAAiBX,MAAMjB,KAAMG,WAExC,0BA1CO,SAAyBR,GAI9B,GAAwB,iBAAXA,IAAuBA,EAAOC,kBACzC,OAEF,MAAMqC,EAAkBtC,EAAOC,kBAAkBE,UAAUoC,YAC3DvC,EAAOC,kBAAkBE,UAAUoC,YAAc,WAC/C,OAAIlC,KAAKC,uBAAyBD,KAAKC,sBAAsBK,OACpDwB,QAAQC,IAAI/B,KAAKC,uBACrByB,MAAK,IACGO,EAAgBhB,MAAMjB,KAAMG,aAEpC6B,SAAQ,KACPhC,KAAKC,sBAAwB,EAAE,IAG9BgC,EAAgBhB,MAAMjB,KAAMG,WAEvC,4BArCO,SAA2BR,GAChC,GAAwB,iBAAXA,IAAuBA,EAAOwC,aACzC,OAEF,MAAMC,EAAoBzC,EAAOwC,aAAarC,UAAUsB,cACpDgB,IACFzC,EAAOwC,aAAarC,UAAUsB,cAC5B,WACE,MAAMD,EAASiB,EAAkBnB,MAAMjB,KAAMG,WAI7C,MAHM,cAAegB,IACnBA,EAAOE,UAAY,GAAGgB,OAAOrC,KAAKE,eAAiB,CAAC,CAAE,KAEjDiB,GAGf,sBAjPO,SAAqBxB,GACJ,iBAAXA,GAAuBA,EAAO2C,eACpC,aAAc3C,EAAO2C,cAAcxC,aAClC,gBAAiBH,EAAO2C,cAAcxC,YAC1CwB,OAAOiB,eAAe5C,EAAO2C,cAAcxC,UAAW,cAAe,CACnE0C,GAAAA,GACE,MAAO,CAACC,SAAUzC,KAAKyC,SACzB,GAGN,6BAEO,SAA4B9C,EAAQ+C,GACzC,GAAsB,iBAAX/C,IACLA,EAAOC,oBAAqBD,EAAOgD,qBACvC,QAEGhD,EAAOC,mBAAqBD,EAAOgD,uBAEtChD,EAAOC,kBAAoBD,EAAOgD,sBAGhCD,EAAeE,QAAU,IAE3B,CAAC,sBAAuB,uBAAwB,mBAC7CrC,SAAQ,SAASsC,GAChB,MAAMC,EAAenD,EAAOC,kBAAkBE,UAAU+C,GAClDE,EAAY,CAAC,CAACF,KAIlB,OAHA1C,UAAU,GAAK,IAAiB,oBAAX0C,EACnBlD,EAAOqD,gBACPrD,EAAOsD,uBAAuB9C,UAAU,IACnC2C,EAAa7B,MAAMjB,KAAMG,UAClC,GACAR,EAAOC,kBAAkBE,UAAU+C,GAAUE,EAAUF,EACzD,IAGJ,MAAMK,EAAmB,CACvBC,WAAY,cACZC,YAAa,eACbC,cAAe,iBACfC,eAAgB,kBAChBC,gBAAiB,oBAGbC,EAAiB7D,EAAOC,kBAAkBE,UAAU2D,SAC1D9D,EAAOC,kBAAkBE,UAAU2D,SAAW,WAC5C,MAAOC,EAAUC,EAAQC,GAASzD,UAClC,OAAOqD,EAAevC,MAAMjB,KAAM,CAAC0D,GAAY,OAC5ChC,MAAKmC,IACJ,GAAInB,EAAeE,QAAU,KAAOe,EAGlC,IACEE,EAAMtD,SAAQuD,IACZA,EAAKC,KAAOb,EAAiBY,EAAKC,OAASD,EAAKC,IAAI,GAEvD,CAAC,MAAOC,GACP,GAAe,cAAXA,EAAEC,KACJ,MAAMD,EAGRH,EAAMtD,SAAQ,CAACuD,EAAMI,KACnBL,EAAMM,IAAID,EAAG5C,OAAO8C,OAAO,CAAE,EAAEN,EAAM,CACnCC,KAAMb,EAAiBY,EAAKC,OAASD,EAAKC,OACzC,GAEP,CAEF,OAAOF,CAAK,IAEbnC,KAAKiC,EAAQC,GAEpB,6BA0EO,SAA4BjE,GAG7BA,EAAO0E,cAAgB1E,EAAO2E,iBAChC3E,EAAO2E,eAAiB3E,EAAO0E,YAEnC,+BA/CO,SAA8B1E,GACnC,GAAwB,iBAAXA,IAAuBA,EAAOC,oBACvCD,EAAOwC,aACT,OAEF,GAAIxC,EAAOwC,cAAgB,aAAcxC,EAAO4E,eAAezE,UAC7D,OAEF,MAAM0E,EAAmB7E,EAAOC,kBAAkBE,UAAU2E,aACxDD,IACF7E,EAAOC,kBAAkBE,UAAU2E,aAAe,WAChD,MAAMC,EAAYF,EAAiBvD,MAAMjB,KAAM,IAE/C,OADA0E,EAAUnE,SAAQkC,GAAYA,EAASkC,IAAM3E,OACtC0E,IAGXE,0BAA8BjF,EAAQ,SAASqE,IAC7CA,EAAEvB,SAASkC,IAAMX,EAAEa,WACZb,KAETrE,EAAO4E,eAAezE,UAAU2D,SAAW,WACzC,OAAOzD,KAAK2E,IAAIlB,SAASzD,KAAK8E,OAElC,2BAEO,SAA0BnF,GAC1BA,EAAOC,qBACR,iBAAkBD,EAAOC,kBAAkBE,aAG/CH,EAAOC,kBAAkBE,UAAUiF,aACjC,SAAsBC,GACpBJ,aAAiB,eAAgB,eACjC5E,KAAKiF,aAAa1E,SAAQW,IACpBA,EAAO4D,OAASE,EAAOE,YAAYC,SAASjE,EAAO4D,QACrD9E,KAAKoF,YAAYlE,EACnB,KAGR,6BAtEO,SAA4BvB,GACjC,GAAwB,iBAAXA,IAAuBA,EAAOC,oBACvCD,EAAOwC,aACT,OAEF,GAAIxC,EAAOwC,cAAgB,aAAcxC,EAAOwC,aAAarC,UAC3D,OAEF,MAAMuF,EAAiB1F,EAAOC,kBAAkBE,UAAUmF,WACtDI,IACF1F,EAAOC,kBAAkBE,UAAUmF,WAAa,WAC9C,MAAMK,EAAUD,EAAepE,MAAMjB,KAAM,IAE3C,OADAsF,EAAQ/E,SAAQW,GAAUA,EAAOyD,IAAM3E,OAChCsF,IAIX,MAAMC,EAAe5F,EAAOC,kBAAkBE,UAAU0F,SACpDD,IACF5F,EAAOC,kBAAkBE,UAAU0F,SAAW,WAC5C,MAAMtE,EAASqE,EAAatE,MAAMjB,KAAMG,WAExC,OADAe,EAAOyD,IAAM3E,KACNkB,IAGXvB,EAAOwC,aAAarC,UAAU2D,SAAW,WACvC,OAAOzD,KAAK8E,MAAQ9E,KAAK2E,IAAIlB,SAASzD,KAAK8E,OACzChD,QAAQ2D,QAAQ,IAAIC,KAE1B"}