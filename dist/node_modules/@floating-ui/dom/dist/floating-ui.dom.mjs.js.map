{"version":3,"file":"floating-ui.dom.mjs.js","sources":["../../../../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs"],"sourcesContent":["import { rectToClientRect, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { detectOverflow, offset } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(floating) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return floating.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element) || isTopLayer(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(data.floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, flip, hide, inline, limitShift, platform, shift, size };\n"],"names":["getCssDimensions","element","css","getComputedStyle","width","parseFloat","height","hasOffset","isHTMLElement","offsetWidth","offsetHeight","shouldFallback","round","$","unwrapElement","isElement","contextElement","getScale","domElement","createCoords","rect","getBoundingClientRect","x","y","Number","isFinite","noOffsets","getVisualOffsets","win","getWindow","isWebKit","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","offsetParent","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","left","top","offsetWin","currentWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","rectToClientRect","topLayerSelectors","isTopLayer","floating","some","selector","matches","e","getWindowScrollBarX","getDocumentElement","getNodeScroll","scrollLeft","getClientRectFromClippingAncestor","clippingAncestor","strategy","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","body","ownerDocument","max","scrollWidth","scrollHeight","scrollTop","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","parentNode","getParentNode","isLastTraversableNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","documentElement","offsets","getNodeName","isOverflowElement","offsetRect","getTrueOffsetParent","polyfill","getOffsetParent","window","isTableElement","isContainingBlock","getContainingBlock","platform","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","elements","topLayer","getClippingRect","boundary","rootBoundary","clippingAncestors","cache","cachedResult","get","result","getOverflowAncestors","filter","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","includes","ancestor","set","getClippingElementAncestors","this","_c","concat","firstClippingAncestor","clippingRect","reduce","accRect","right","min","bottom","getElementRects","async","data","getOffsetParentFn","getDimensionsFn","getDimensions","reference","getClientRects","Array","from","isRTL","autoPlacement$1","autoPlacement","shift","shift$1","flip","flip$1","size","size$1","hide$1","hide","arrow","arrow$1","inline$1","inline","limitShift$1","limitShift","update","options","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","floor","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","computePosition","Map","mergedOptions","platformWithCache","computePosition$1"],"mappings":"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"}