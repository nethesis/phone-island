{"version":3,"file":"index.js","sources":["../../../node_modules/ebml-block/index.js"],"sourcesContent":["var BufferReader = require('./lib/buffer-reader')\n\nvar XIPH_LACING = 1\nvar EBML_LACING = 3\nvar FIXED_SIZE_LACING = 2\n\nmodule.exports = function (buffer) {\n  var block = {}\n  var reader = new BufferReader(buffer)\n\n  block.trackNumber = reader.nextUIntV()\n  block.timecode = reader.nextInt16BE()\n\n  var flags = reader.nextUInt8()\n\n  block.invisible = !!(flags & 0x8)\n\n  // only valid for SimpleBlock\n  block.keyframe = !!(flags & 0x80)\n  block.discardable = !!(flags & 0x1)\n\n  var lacing = (flags & 0x6) >> 1\n\n  block.frames = readLacedData(reader, lacing)\n\n  return block\n}\n\nfunction readLacedData (reader, lacing) {\n  if (!lacing) return [reader.nextBuffer()]\n\n  var i, frameSize\n  var frames = []\n  var framesNum = reader.nextUInt8() + 1 // number of frames\n\n  if (lacing === FIXED_SIZE_LACING) {\n    // remaining data should be divisible by the number of frames\n    if (reader.length % framesNum !== 0) throw new Error('Fixed-Size Lacing Error')\n\n    frameSize = reader.length / framesNum\n    for (i = 0; i < framesNum; i++) {\n      frames.push(reader.nextBuffer(frameSize))\n    }\n    return frames\n  }\n\n  var frameSizes = []\n\n  if (lacing === XIPH_LACING) {\n    for (i = 0; i < framesNum - 1; i++) {\n      var val\n      frameSize = 0\n      do {\n        val = reader.nextUInt8()\n        frameSize += val\n      } while (val === 0xff)\n      frameSizes.push(frameSize)\n    }\n  } else if (lacing === EBML_LACING) {\n    // first frame\n    frameSize = reader.nextUIntV()\n    frameSizes.push(frameSize)\n\n    // middle frames\n    for (i = 1; i < framesNum - 1; i++) {\n      frameSize += reader.nextIntV()\n      frameSizes.push(frameSize)\n    }\n  }\n\n  for (i = 0; i < framesNum - 1; i++) {\n    frames.push(reader.nextBuffer(frameSizes[i]))\n  }\n\n  // last frame (remaining buffer)\n  frames.push(reader.nextBuffer())\n\n  return frames\n}\n"],"names":["BufferReader","require$$0","buffer","block","reader","trackNumber","nextUIntV","timecode","nextInt16BE","flags","nextUInt8","invisible","keyframe","discardable","lacing","frames","nextBuffer","i","frameSize","framesNum","length","Error","push","frameSizes","val","nextIntV","readLacedData"],"mappings":"wEAAIA,oCAAeC,wBAMF,SAAUC,GACzB,IAAIC,EAAQ,CAAA,EACRC,EAAS,IAAIJ,EAAaE,GAE9BC,EAAME,YAAcD,EAAOE,YAC3BH,EAAMI,SAAWH,EAAOI,cAExB,IAAIC,EAAQL,EAAOM,YAEnBP,EAAMQ,aAAuB,EAARF,GAGrBN,EAAMS,YAAsB,IAARH,GACpBN,EAAMU,eAAyB,EAARJ,GAEvB,IAAIK,GAAkB,EAARL,IAAgB,EAI9B,OAFAN,EAAMY,OAKR,SAAwBX,EAAQU,GAC9B,IAAKA,EAAQ,MAAO,CAACV,EAAOY,cAE5B,IAAIC,EAAGC,EACHH,EAAS,GACTI,EAAYf,EAAOM,YAAc,EAErC,GA/BsB,IA+BlBI,EAA8B,CAEhC,GAAIV,EAAOgB,OAASD,GAAc,EAAG,MAAM,IAAIE,MAAM,2BAGrD,IADAH,EAAYd,EAAOgB,OAASD,EACvBF,EAAI,EAAGA,EAAIE,EAAWF,IACzBF,EAAOO,KAAKlB,EAAOY,WAAWE,IAEhC,OAAOH,CACR,CAED,IAAIQ,EAAa,GAEjB,GA9CgB,IA8CZT,EACF,IAAKG,EAAI,EAAGA,EAAIE,EAAY,EAAGF,IAAK,CAClC,IAAIO,EACJN,EAAY,EACZ,GAEEA,GADAM,EAAMpB,EAAOM,kBAEE,MAARc,GACTD,EAAWD,KAAKJ,EACjB,MACI,GAvDS,IAuDLJ,EAMT,IAJAI,EAAYd,EAAOE,YACnBiB,EAAWD,KAAKJ,GAGXD,EAAI,EAAGA,EAAIE,EAAY,EAAGF,IAC7BC,GAAad,EAAOqB,WACpBF,EAAWD,KAAKJ,GAIpB,IAAKD,EAAI,EAAGA,EAAIE,EAAY,EAAGF,IAC7BF,EAAOO,KAAKlB,EAAOY,WAAWO,EAAWN,KAM3C,OAFAF,EAAOO,KAAKlB,EAAOY,cAEZD,CACT,CAvDiBW,CAActB,EAAQU,GAE9BX,CACT"}