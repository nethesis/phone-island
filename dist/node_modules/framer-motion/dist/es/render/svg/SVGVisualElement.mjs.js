"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("../../projection/geometry/models.mjs.js"),s=require("../dom/DOMVisualElement.mjs.js"),r=require("../dom/utils/camel-to-dash.mjs.js"),t=require("./utils/build-attrs.mjs.js"),a=require("./utils/camel-case-attrs.mjs.js"),i=require("./utils/is-svg-tag.mjs.js"),u=require("./utils/render.mjs.js"),o=require("./utils/scrape-motion-values.mjs.js"),m=require("../../../../../motion-dom/dist/es/render/utils/keys-transform.mjs.js"),l=require("../../../../../motion-dom/dist/es/value/types/maps/defaults.mjs.js");class n extends s.DOMVisualElement{constructor(){super(...arguments),this.type="svg",this.isSVGTag=!1,this.measureInstanceViewportBox=e.createBox}getBaseTargetFromProps(e,s){return e[s]}readValueFromInstance(e,s){if(m.transformProps.has(s)){const e=l.getDefaultValueType(s);return e&&e.default||0}return s=a.camelCaseAttributes.has(s)?s:r.camelToDash(s),e.getAttribute(s)}scrapeMotionValuesFromProps(e,s,r){return o.scrapeMotionValuesFromProps(e,s,r)}build(e,s,r){t.buildSVGAttrs(e,s,this.isSVGTag,r.transformTemplate)}renderInstance(e,s,r,t){u.renderSVG(e,s,r,t)}mount(e){this.isSVGTag=i.isSVGTag(e.tagName),super.mount(e)}}exports.SVGVisualElement=n;
//# sourceMappingURL=SVGVisualElement.mjs.js.map
