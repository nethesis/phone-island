{"version":3,"file":"delta-remove.mjs.js","sources":["../../../../../../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs"],"sourcesContent":["import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n"],"names":["removePointDelta","point","translate","scale","originPoint","boxScale","scalePoint","undefined","removeAxisDelta","axis","origin","originAxis","sourceAxis","percent","test","parseFloat","mixNumber","min","max","removeAxisTransforms","transforms","key","scaleKey","originKey","xKeys","yKeys","box","originBox","sourceBox","x","y"],"mappings":"iQAMA,SAASA,EAAiBC,EAAOC,EAAWC,EAAOC,EAAaC,GAM5D,OALAJ,GAASC,EACTD,EAAQK,EAAUA,WAACL,EAAO,EAAIE,EAAOC,QACpBG,IAAbF,IACAJ,EAAQK,EAAUA,WAACL,EAAO,EAAII,EAAUD,IAErCH,CACX,CAIA,SAASO,EAAgBC,EAAMP,EAAY,EAAGC,EAAQ,EAAGO,EAAS,GAAKL,EAAUM,EAAaF,EAAMG,EAAaH,GAC7G,GAAII,EAAOA,QAACC,KAAKZ,GAAY,CACzBA,EAAYa,WAAWb,GAEvBA,EADyBc,EAASA,UAACJ,EAAWK,IAAKL,EAAWM,IAAKhB,EAAY,KAChDU,EAAWK,GAC9C,CACA,GAAyB,iBAAdf,EACP,OACJ,IAAIE,EAAcY,EAAAA,UAAUL,EAAWM,IAAKN,EAAWO,IAAKR,GACxDD,IAASE,IACTP,GAAeF,GACnBO,EAAKQ,IAAMjB,EAAiBS,EAAKQ,IAAKf,EAAWC,EAAOC,EAAaC,GACrEI,EAAKS,IAAMlB,EAAiBS,EAAKS,IAAKhB,EAAWC,EAAOC,EAAaC,EACzE,CAKA,SAASc,EAAqBV,EAAMW,GAAaC,EAAKC,EAAUC,GAAYb,EAAQE,GAChFJ,EAAgBC,EAAMW,EAAWC,GAAMD,EAAWE,GAAWF,EAAWG,GAAYH,EAAWjB,MAAOO,EAAQE,EAClH,CAIA,MAAMY,EAAQ,CAAC,IAAK,SAAU,WACxBC,EAAQ,CAAC,IAAK,SAAU,gGAK9B,SAA6BC,EAAKN,EAAYO,EAAWC,GACrDT,EAAqBO,EAAIG,EAAGT,EAAYI,EAAOG,EAAYA,EAAUE,OAAItB,EAAWqB,EAAYA,EAAUC,OAAItB,GAC9GY,EAAqBO,EAAII,EAAGV,EAAYK,EAAOE,EAAYA,EAAUG,OAAIvB,EAAWqB,EAAYA,EAAUE,OAAIvB,EAClH"}