{"version":3,"file":"hover.mjs.js","sources":["../../../../../../node_modules/framer-motion/dist/es/gestures/hover.mjs"],"sourcesContent":["import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n"],"names":["handleHoverEvent","node","event","lifecycle","props","animationState","whileHover","setActive","callback","frame","postRender","extractEventInfo","HoverGesture","Feature","mount","current","this","unmount","hover","_element","startEvent","endEvent"],"mappings":"qSAIA,SAASA,EAAiBC,EAAMC,EAAOC,GACnC,MAAMC,MAAEA,GAAUH,EACdA,EAAKI,gBAAkBD,EAAME,YAC7BL,EAAKI,eAAeE,UAAU,aAA4B,UAAdJ,GAEhD,MACMK,EAAWJ,EADE,UAAYD,GAE3BK,GACAC,EAAKA,MAACC,YAAW,IAAMF,EAASN,EAAOS,mBAAiBT,KAEhE,CACA,MAAMU,UAAqBC,EAAAA,QACvBC,KAAAA,GACI,MAAMC,QAAEA,GAAYC,KAAKf,KACpBc,IAELC,KAAKC,QAAUC,EAAKA,MAACH,GAAS,CAACI,EAAUC,KACrCpB,EAAiBgB,KAAKf,KAAMmB,EAAY,SAChCC,GAAarB,EAAiBgB,KAAKf,KAAMoB,EAAU,UAEnE,CACAJ,OAAAA,GAAY"}