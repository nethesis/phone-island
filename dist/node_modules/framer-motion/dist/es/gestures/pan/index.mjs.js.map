{"version":3,"file":"index.mjs.js","sources":["../../../../../../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs"],"sourcesContent":["import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n"],"names":["asyncHandler","handler","event","info","frame","postRender","PanGesture","Feature","constructor","super","arguments","this","removePointerDownListener","noop","onPointerDown","pointerDownEvent","session","PanSession","createPanHandlers","transformPagePoint","node","getTransformPagePoint","contextWindow","getContextWindow","onPanSessionStart","onPanStart","onPan","onPanEnd","getProps","onSessionStart","onStart","onMove","onEnd","mount","addPointerEvent","current","update","updateHandlers","unmount","end"],"mappings":"oYAOA,MAAMA,EAAgBC,GAAY,CAACC,EAAOC,KAClCF,GACAG,EAAKA,MAACC,YAAW,IAAMJ,EAAQC,EAAOC,IAC1C,EAEJ,MAAMG,UAAmBC,EAAAA,QACrBC,WAAAA,GACIC,SAASC,WACTC,KAAKC,0BAA4BC,MACrC,CACAC,aAAAA,CAAcC,GACVJ,KAAKK,QAAU,IAAIC,EAAAA,WAAWF,EAAkBJ,KAAKO,oBAAqB,CACtEC,mBAAoBR,KAAKS,KAAKC,wBAC9BC,cAAeC,EAAAA,iBAAiBZ,KAAKS,OAE7C,CACAF,iBAAAA,GACI,MAAMM,kBAAEA,EAAiBC,WAAEA,EAAUC,MAAEA,EAAKC,SAAEA,GAAahB,KAAKS,KAAKQ,WACrE,MAAO,CACHC,eAAgB7B,EAAawB,GAC7BM,QAAS9B,EAAayB,GACtBM,OAAQL,EACRM,MAAOA,CAAC9B,EAAOC,YACJQ,KAAKK,QACRW,GACAvB,EAAKA,MAACC,YAAW,IAAMsB,EAASzB,EAAOC,IAC3C,EAGZ,CACA8B,KAAAA,GACItB,KAAKC,0BAA4BsB,kBAAgBvB,KAAKS,KAAKe,QAAS,eAAgBjC,GAAUS,KAAKG,cAAcZ,IACrH,CACAkC,MAAAA,GACIzB,KAAKK,SAAWL,KAAKK,QAAQqB,eAAe1B,KAAKO,oBACrD,CACAoB,OAAAA,GACI3B,KAAKC,4BACLD,KAAKK,SAAWL,KAAKK,QAAQuB,KACjC"}