{"version":3,"file":"index.mjs.js","sources":["../../../../../../../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs"],"sourcesContent":["import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n"],"names":["thresholdNames","some","all","InViewFeature","Feature","constructor","super","arguments","this","hasEnteredView","isInView","startObserver","unmount","viewport","node","getProps","root","margin","rootMargin","amount","once","options","current","undefined","threshold","observeIntersection","entry","isIntersecting","animationState","setActive","onViewportEnter","onViewportLeave","callback","mount","update","IntersectionObserver","props","prevProps","prevViewport","name","hasViewportOptionChanged"],"mappings":"uIAGA,MAAMA,EAAiB,CACnBC,KAAM,EACNC,IAAK,GAET,MAAMC,UAAsBC,EAAAA,QACxBC,WAAAA,GACIC,SAASC,WACTC,KAAKC,gBAAiB,EACtBD,KAAKE,UAAW,CACpB,CACAC,aAAAA,GACIH,KAAKI,UACL,MAAMC,SAAEA,EAAW,CAAC,GAAML,KAAKM,KAAKC,YAC9BC,KAAEA,EAAMC,OAAQC,EAAUC,OAAEA,EAAS,OAAMC,KAAEA,GAASP,EACtDQ,EAAU,CACZL,KAAMA,EAAOA,EAAKM,aAAUC,EAC5BL,aACAM,UAA6B,iBAAXL,EAAsBA,EAASnB,EAAemB,IA+BpE,OAAOM,EAAAA,oBAAoBjB,KAAKM,KAAKQ,QAASD,GA7BhBK,IAC1B,MAAMC,eAAEA,GAAmBD,EAI3B,GAAIlB,KAAKE,WAAaiB,EAClB,OAMJ,GALAnB,KAAKE,SAAWiB,EAKZP,IAASO,GAAkBnB,KAAKC,eAChC,OAEKkB,IACLnB,KAAKC,gBAAiB,GAEtBD,KAAKM,KAAKc,gBACVpB,KAAKM,KAAKc,eAAeC,UAAU,cAAeF,GAMtD,MAAMG,gBAAEA,EAAeC,gBAAEA,GAAoBvB,KAAKM,KAAKC,WACjDiB,EAAWL,EAAiBG,EAAkBC,EACpDC,GAAYA,EAASN,EAAM,GAGnC,CACAO,KAAAA,GACIzB,KAAKG,eACT,CACAuB,MAAAA,GACI,GAAoC,oBAAzBC,qBACP,OACJ,MAAMC,MAAEA,EAAKC,UAAEA,GAAc7B,KAAKM,KACR,CAAC,SAAU,SAAU,QAAQb,KAO/D,UAAkCY,SAAEA,EAAW,CAAC,IAAOA,SAAUyB,EAAe,CAAC,GAAM,IACnF,OAAQC,GAAS1B,EAAS0B,KAAUD,EAAaC,EACrD,CAToEC,CAAyBJ,EAAOC,KAExF7B,KAAKG,eAEb,CACAC,OAAAA,GAAY"}