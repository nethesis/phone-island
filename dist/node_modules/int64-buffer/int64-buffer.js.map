{"version":3,"file":"int64-buffer.js","sources":["../../../node_modules/int64-buffer/int64-buffer.js"],"sourcesContent":["// int64-buffer.js\n\n/*jshint -W018 */ // Confusing use of '!'.\n/*jshint -W030 */ // Expected an assignment or function call and instead saw an expression.\n/*jshint -W093 */ // Did you mean to return a conditional instead of an assignment?\n\nvar Uint64BE, Int64BE, Uint64LE, Int64LE;\n\n!function(exports) {\n  // constants\n\n  var UNDEFINED = \"undefined\";\n  var BUFFER = (UNDEFINED !== typeof Buffer) && Buffer;\n  var UINT8ARRAY = (UNDEFINED !== typeof Uint8Array) && Uint8Array;\n  var ARRAYBUFFER = (UNDEFINED !== typeof ArrayBuffer) && ArrayBuffer;\n  var ZERO = [0, 0, 0, 0, 0, 0, 0, 0];\n  var isArray = Array.isArray || _isArray;\n  var BIT32 = 4294967296;\n  var BIT24 = 16777216;\n\n  // storage class\n\n  var storage; // Array;\n\n  // generate classes\n\n  Uint64BE = factory(\"Uint64BE\", true, true);\n  Int64BE = factory(\"Int64BE\", true, false);\n  Uint64LE = factory(\"Uint64LE\", false, true);\n  Int64LE = factory(\"Int64LE\", false, false);\n\n  // class factory\n\n  function factory(name, bigendian, unsigned) {\n    var posH = bigendian ? 0 : 4;\n    var posL = bigendian ? 4 : 0;\n    var pos0 = bigendian ? 0 : 3;\n    var pos1 = bigendian ? 1 : 2;\n    var pos2 = bigendian ? 2 : 1;\n    var pos3 = bigendian ? 3 : 0;\n    var fromPositive = bigendian ? fromPositiveBE : fromPositiveLE;\n    var fromNegative = bigendian ? fromNegativeBE : fromNegativeLE;\n    var proto = Int64.prototype;\n    var isName = \"is\" + name;\n    var _isInt64 = \"_\" + isName;\n\n    // properties\n    proto.buffer = void 0;\n    proto.offset = 0;\n    proto[_isInt64] = true;\n\n    // methods\n    proto.toNumber = toNumber;\n    proto.toString = toString;\n    proto.toJSON = toNumber;\n    proto.toArray = toArray;\n\n    // add .toBuffer() method only when Buffer available\n    if (BUFFER) proto.toBuffer = toBuffer;\n\n    // add .toArrayBuffer() method only when Uint8Array available\n    if (UINT8ARRAY) proto.toArrayBuffer = toArrayBuffer;\n\n    // isUint64BE, isInt64BE\n    Int64[isName] = isInt64;\n\n    // CommonJS\n    exports[name] = Int64;\n\n    return Int64;\n\n    // constructor\n    function Int64(buffer, offset, value, raddix) {\n      if (!(this instanceof Int64)) return new Int64(buffer, offset, value, raddix);\n      return init(this, buffer, offset, value, raddix);\n    }\n\n    // isUint64BE, isInt64BE\n    function isInt64(b) {\n      return !!(b && b[_isInt64]);\n    }\n\n    // initializer\n    function init(that, buffer, offset, value, raddix) {\n      if (UINT8ARRAY && ARRAYBUFFER) {\n        if (buffer instanceof ARRAYBUFFER) buffer = new UINT8ARRAY(buffer);\n        if (value instanceof ARRAYBUFFER) value = new UINT8ARRAY(value);\n      }\n\n      // Int64BE() style\n      if (!buffer && !offset && !value && !storage) {\n        // shortcut to initialize with zero\n        that.buffer = newArray(ZERO, 0);\n        return;\n      }\n\n      // Int64BE(value, raddix) style\n      if (!isValidBuffer(buffer, offset)) {\n        var _storage = storage || Array;\n        raddix = offset;\n        value = buffer;\n        offset = 0;\n        buffer = (storage === BUFFER) ? BUFFER.alloc(8) : new _storage(8);\n      }\n\n      that.buffer = buffer;\n      that.offset = offset |= 0;\n\n      // Int64BE(buffer, offset) style\n      if (UNDEFINED === typeof value) return;\n\n      // Int64BE(buffer, offset, value, raddix) style\n      if (\"string\" === typeof value) {\n        fromString(buffer, offset, value, raddix || 10);\n      } else if (isValidBuffer(value, raddix)) {\n        fromArray(buffer, offset, value, raddix);\n      } else if (\"number\" === typeof raddix) {\n        writeInt32(buffer, offset + posH, value); // high\n        writeInt32(buffer, offset + posL, raddix); // low\n      } else if (value > 0) {\n        fromPositive(buffer, offset, value); // positive\n      } else if (value < 0) {\n        fromNegative(buffer, offset, value); // negative\n      } else {\n        fromArray(buffer, offset, ZERO, 0); // zero, NaN and others\n      }\n    }\n\n    function fromString(buffer, offset, str, raddix) {\n      var pos = 0;\n      var len = str.length;\n      var high = 0;\n      var low = 0;\n      if (str[0] === \"-\") pos++;\n      var sign = pos;\n      while (pos < len) {\n        var chr = parseInt(str[pos++], raddix);\n        if (!(chr >= 0)) break; // NaN\n        low = low * raddix + chr;\n        high = high * raddix + Math.floor(low / BIT32);\n        low %= BIT32;\n      }\n      if (sign) {\n        high = ~high;\n        if (low) {\n          low = BIT32 - low;\n        } else {\n          high++;\n        }\n      }\n      writeInt32(buffer, offset + posH, high);\n      writeInt32(buffer, offset + posL, low);\n    }\n\n    function toNumber() {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      if (!unsigned) high |= 0; // a trick to get signed\n      return high ? (high * BIT32 + low) : low;\n    }\n\n    function toString(radix) {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      var str = \"\";\n      var sign = !unsigned && (high & 0x80000000);\n      if (sign) {\n        high = ~high;\n        low = BIT32 - low;\n      }\n      radix = radix || 10;\n      while (1) {\n        var mod = (high % radix) * BIT32 + low;\n        high = Math.floor(high / radix);\n        low = Math.floor(mod / radix);\n        str = (mod % radix).toString(radix) + str;\n        if (!high && !low) break;\n      }\n      if (sign) {\n        str = \"-\" + str;\n      }\n      return str;\n    }\n\n    function writeInt32(buffer, offset, value) {\n      buffer[offset + pos3] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos2] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos1] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos0] = value & 255;\n    }\n\n    function readInt32(buffer, offset) {\n      return (buffer[offset + pos0] * BIT24) +\n        (buffer[offset + pos1] << 16) +\n        (buffer[offset + pos2] << 8) +\n        buffer[offset + pos3];\n    }\n  }\n\n  function toArray(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = null; // Array\n\n    if (raw !== false && isArray(buffer)) {\n      return (buffer.length === 8) ? buffer : buffer.slice(offset, offset + 8);\n    }\n\n    return newArray(buffer, offset);\n  }\n\n  function toBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = BUFFER;\n\n    if (raw !== false && BUFFER.isBuffer(buffer)) {\n      return (buffer.length === 8) ? buffer : buffer.slice(offset, offset + 8);\n    }\n\n    // Buffer.from(arraybuffer) available since Node v4.5.0\n    // https://nodejs.org/en/blog/release/v4.5.0/\n    return BUFFER.from(toArrayBuffer.call(this, raw));\n  }\n\n  function toArrayBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    var arrbuf = buffer.buffer;\n    storage = UINT8ARRAY;\n\n    // arrbuf.slice() ignores buffer.offset until Node v8.0.0\n    if (raw !== false && !buffer.offset && (arrbuf instanceof ARRAYBUFFER)) {\n      return (arrbuf.byteLength === 8) ? arrbuf : arrbuf.slice(offset, offset + 8);\n    }\n\n    var dest = new UINT8ARRAY(8);\n    fromArray(dest, 0, buffer, offset);\n    return dest.buffer;\n  }\n\n  function isValidBuffer(buffer, offset) {\n    var len = buffer && buffer.length;\n    offset |= 0;\n    return len && (offset + 8 <= len) && (\"string\" !== typeof buffer[offset]);\n  }\n\n  function fromArray(destbuf, destoff, srcbuf, srcoff) {\n    destoff |= 0;\n    srcoff |= 0;\n    for (var i = 0; i < 8; i++) {\n      destbuf[destoff++] = srcbuf[srcoff++] & 255;\n    }\n  }\n\n  function newArray(buffer, offset) {\n    return Array.prototype.slice.call(buffer, offset, offset + 8);\n  }\n\n  function fromPositiveBE(buffer, offset, value) {\n    var pos = offset + 8;\n    while (pos > offset) {\n      buffer[--pos] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeBE(buffer, offset, value) {\n    var pos = offset + 8;\n    value++;\n    while (pos > offset) {\n      buffer[--pos] = ((-value) & 255) ^ 255;\n      value /= 256;\n    }\n  }\n\n  function fromPositiveLE(buffer, offset, value) {\n    var end = offset + 8;\n    while (offset < end) {\n      buffer[offset++] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeLE(buffer, offset, value) {\n    var end = offset + 8;\n    value++;\n    while (offset < end) {\n      buffer[offset++] = ((-value) & 255) ^ 255;\n      value /= 256;\n    }\n  }\n\n  // https://github.com/retrofox/is-array\n  function _isArray(val) {\n    return !!val && \"[object Array]\" == Object.prototype.toString.call(val);\n  }\n\n}(typeof exports === 'object' && typeof exports.nodeName !== 'string' ? exports : (this || {}));\n"],"names":["exports","storage","UNDEFINED","BUFFER","Buffer","UINT8ARRAY","Uint8Array","ARRAYBUFFER","ArrayBuffer","ZERO","isArray","Array","val","Object","prototype","toString","call","BIT32","factory","name","bigendian","unsigned","posH","posL","pos0","pos1","pos2","pos3","fromPositive","fromPositiveBE","fromPositiveLE","fromNegative","fromNegativeBE","fromNegativeLE","proto","Int64","isName","_isInt64","buffer","offset","toNumber","radix","this","high","readInt32","low","str","sign","mod","Math","floor","toJSON","toArray","toBuffer","toArrayBuffer","b","value","raddix","that","newArray","isValidBuffer","_storage","alloc","pos","len","length","chr","parseInt","writeInt32","fromString","fromArray","init","raw","slice","isBuffer","from","arrbuf","byteLength","dest","destbuf","destoff","srcbuf","srcoff","i","end","nodeName"],"mappings":"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"}