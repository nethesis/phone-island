{"version":3,"file":"subscription-manager.mjs.js","sources":["../../../../../node_modules/motion-utils/dist/es/subscription-manager.mjs"],"sourcesContent":["import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n"],"names":["constructor","this","subscriptions","add","handler","addUniqueItem","removeItem","notify","a","b","c","numSubscriptions","length","i","getSize","clear"],"mappings":"gIAEA,MACIA,WAAAA,GACIC,KAAKC,cAAgB,EACzB,CACAC,GAAAA,CAAIC,GAEA,OADAC,EAAAA,cAAcJ,KAAKC,cAAeE,GAC3B,IAAME,EAAAA,WAAWL,KAAKC,cAAeE,EAChD,CACAG,MAAAA,CAAOC,EAAGC,EAAGC,GACT,MAAMC,EAAmBV,KAAKC,cAAcU,OAC5C,GAAKD,EAEL,GAAyB,IAArBA,EAIAV,KAAKC,cAAc,GAAGM,EAAGC,EAAGC,QAG5B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAkBE,IAAK,CAKvC,MAAMT,EAAUH,KAAKC,cAAcW,GACnCT,GAAWA,EAAQI,EAAGC,EAAGC,EAC7B,CAER,CACAI,OAAAA,GACI,OAAOb,KAAKC,cAAcU,MAC9B,CACAG,KAAAA,GACId,KAAKC,cAAcU,OAAS,CAChC"}