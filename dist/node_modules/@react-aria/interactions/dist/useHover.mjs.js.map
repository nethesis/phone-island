{"version":3,"file":"useHover.mjs.js","sources":["../../../../../node_modules/@react-aria/interactions/dist/useHover.mjs"],"sourcesContent":["import {useState as $AWxnT$useState, useRef as $AWxnT$useRef, useEffect as $AWxnT$useEffect, useMemo as $AWxnT$useMemo} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ // Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\nlet $6179b936705e76d3$var$hoverCount = 0;\nfunction $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {\n    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;\n    // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n    // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n    // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n    // the distant future because a user previously touched the element.\n    setTimeout(()=>{\n        $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\n    }, 50);\n}\nfunction $6179b936705e76d3$var$handleGlobalPointerEvent(e) {\n    if (e.pointerType === 'touch') $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();\n}\nfunction $6179b936705e76d3$var$setupGlobalTouchEvents() {\n    if (typeof document === 'undefined') return;\n    if (typeof PointerEvent !== 'undefined') document.addEventListener('pointerup', $6179b936705e76d3$var$handleGlobalPointerEvent);\n    else document.addEventListener('touchend', $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n    $6179b936705e76d3$var$hoverCount++;\n    return ()=>{\n        $6179b936705e76d3$var$hoverCount--;\n        if ($6179b936705e76d3$var$hoverCount > 0) return;\n        if (typeof PointerEvent !== 'undefined') document.removeEventListener('pointerup', $6179b936705e76d3$var$handleGlobalPointerEvent);\n        else document.removeEventListener('touchend', $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n    };\n}\nfunction $6179b936705e76d3$export$ae780daf29e6d456(props) {\n    let { onHoverStart: onHoverStart, onHoverChange: onHoverChange, onHoverEnd: onHoverEnd, isDisabled: isDisabled } = props;\n    let [isHovered, setHovered] = (0, $AWxnT$useState)(false);\n    let state = (0, $AWxnT$useRef)({\n        isHovered: false,\n        ignoreEmulatedMouseEvents: false,\n        pointerType: '',\n        target: null\n    }).current;\n    (0, $AWxnT$useEffect)($6179b936705e76d3$var$setupGlobalTouchEvents, []);\n    let { hoverProps: hoverProps, triggerHoverEnd: triggerHoverEnd } = (0, $AWxnT$useMemo)(()=>{\n        let triggerHoverStart = (event, pointerType)=>{\n            state.pointerType = pointerType;\n            if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) return;\n            state.isHovered = true;\n            let target = event.currentTarget;\n            state.target = target;\n            if (onHoverStart) onHoverStart({\n                type: 'hoverstart',\n                target: target,\n                pointerType: pointerType\n            });\n            if (onHoverChange) onHoverChange(true);\n            setHovered(true);\n        };\n        let triggerHoverEnd = (event, pointerType)=>{\n            state.pointerType = '';\n            state.target = null;\n            if (pointerType === 'touch' || !state.isHovered) return;\n            state.isHovered = false;\n            let target = event.currentTarget;\n            if (onHoverEnd) onHoverEnd({\n                type: 'hoverend',\n                target: target,\n                pointerType: pointerType\n            });\n            if (onHoverChange) onHoverChange(false);\n            setHovered(false);\n        };\n        let hoverProps = {};\n        if (typeof PointerEvent !== 'undefined') {\n            hoverProps.onPointerEnter = (e)=>{\n                if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') return;\n                triggerHoverStart(e, e.pointerType);\n            };\n            hoverProps.onPointerLeave = (e)=>{\n                if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, e.pointerType);\n            };\n        } else {\n            hoverProps.onTouchStart = ()=>{\n                state.ignoreEmulatedMouseEvents = true;\n            };\n            hoverProps.onMouseEnter = (e)=>{\n                if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents) triggerHoverStart(e, 'mouse');\n                state.ignoreEmulatedMouseEvents = false;\n            };\n            hoverProps.onMouseLeave = (e)=>{\n                if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, 'mouse');\n            };\n        }\n        return {\n            hoverProps: hoverProps,\n            triggerHoverEnd: triggerHoverEnd\n        };\n    }, [\n        onHoverStart,\n        onHoverChange,\n        onHoverEnd,\n        isDisabled,\n        state\n    ]);\n    (0, $AWxnT$useEffect)(()=>{\n        // Call the triggerHoverEnd as soon as isDisabled changes to true\n        // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n        if (isDisabled) triggerHoverEnd({\n            currentTarget: state.target\n        }, state.pointerType);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        isDisabled\n    ]);\n    return {\n        hoverProps: hoverProps,\n        isHovered: isHovered\n    };\n}\n\n\nexport {$6179b936705e76d3$export$ae780daf29e6d456 as useHover};\n//# sourceMappingURL=useHover.module.js.map\n"],"names":["$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents","$6179b936705e76d3$var$hoverCount","$6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents","setTimeout","$6179b936705e76d3$var$handleGlobalPointerEvent","e","pointerType","$6179b936705e76d3$var$setupGlobalTouchEvents","document","PointerEvent","addEventListener","removeEventListener","props","onHoverStart","onHoverChange","onHoverEnd","isDisabled","isHovered","setHovered","$AWxnT$useState","state","$AWxnT$useRef","ignoreEmulatedMouseEvents","target","current","$AWxnT$useEffect","hoverProps","triggerHoverEnd","$AWxnT$useMemo","triggerHoverStart","event","currentTarget","contains","type","onPointerEnter","onPointerLeave","onTouchStart","onMouseEnter","onMouseLeave"],"mappings":"2FAkCA,IAAIA,GAAkC,EAClCC,EAAa,EAEjB,SAASC,IACPF,GAAkC,EAMlCG,YAAW,KACTH,GAAkC,CAAA,GACjC,GACL,CAEA,SAASI,EAAyBC,GACV,UAAlBA,EAAEC,aACJJ,GAEJ,CAEA,SAASK,IACP,GAAwB,oBAAbC,SAWX,MAP4B,oBAAjBC,aACTD,SAASE,iBAAiB,YAAaN,GAEvCI,SAASE,iBAAiB,WAAYR,GAGxCD,IACO,KACLA,IACIA,EAAa,IAIW,oBAAjBQ,aACTD,SAASG,oBAAoB,YAAaP,GAE1CI,SAASG,oBAAoB,WAAYT,GAAA,CAG/C,kBAMO,SAAkBU,GACvB,IAAIC,aACFA,EAAYC,cACZA,EAAaC,WACbA,EAAUC,WACVA,GACEJ,GAECK,EAAWC,GAAcC,EAAO,UAAE,GACnCC,EAAQC,EAAK,OAAE,CACjBJ,WAAW,EACXK,2BAA2B,EAC3BhB,YAAa,GACbiB,OAAQ,OACPC,QAEHC,EAAQ,UAAElB,EAAwB,IAElC,IAAImB,WAACA,EAAUC,gBAAEA,GAAmBC,EAAM,SAAE,KAC1C,IAAIC,EAAoBA,CAACC,EAAOxB,KAE9B,GADAc,EAAMd,YAAcA,EAChBU,GAA8B,UAAhBV,GAA2Bc,EAAMH,YAAca,EAAMC,cAAcC,SAASF,EAAMP,QAClG,OAGFH,EAAMH,WAAY,EAClB,IAAIM,EAASO,EAAMC,cACnBX,EAAMG,OAASA,EAEXV,GACFA,EAAa,CACXoB,KAAM,oBACNV,EACAjB,YAAAA,IAIAQ,GACFA,GAAc,GAGhBI,GAAW,EAAA,EAGTS,EAAkBA,CAACG,EAAOxB,KAI5B,GAHAc,EAAMd,YAAc,GACpBc,EAAMG,OAAS,KAEK,UAAhBjB,IAA4Bc,EAAMH,UACpC,OAGFG,EAAMH,WAAY,EAClB,IAAIM,EAASO,EAAMC,cACfhB,GACFA,EAAW,CACTkB,KAAM,kBACNV,EACAjB,YAAAA,IAIAQ,GACFA,GAAc,GAGhBI,GAAW,EAAA,EAGTQ,EAA4B,CAAA,EAmChC,MAjC4B,oBAAjBjB,cACTiB,EAAWQ,eAAkB7B,IACvBL,GAAqD,UAAlBK,EAAEC,aAIzCuB,EAAkBxB,EAAGA,EAAEC,YAAW,EAGpCoB,EAAWS,eAAkB9B,KACtBW,GAAcX,EAAE0B,cAAcC,SAAS3B,EAAEkB,SAC5CI,EAAgBtB,EAAGA,EAAEC,YAAW,IAIpCoB,EAAWU,aAAe,KACxBhB,EAAME,2BAA4B,CAAA,EAGpCI,EAAWW,aAAgBhC,IACpBe,EAAME,2BAA8BtB,GACvC6B,EAAkBxB,EAAG,SAGvBe,EAAME,2BAA4B,CAAA,EAGpCI,EAAWY,aAAgBjC,KACpBW,GAAcX,EAAE0B,cAAcC,SAAS3B,EAAEkB,SAC5CI,EAAgBtB,EAAG,QAAA,GAIlB,YAACqB,EAAYC,gBAAAA,EAAe,GAClC,CAACd,EAAcC,EAAeC,EAAYC,EAAYI,IAWzD,OATAK,EAAQ,WAAE,KAGJT,GACFW,EAAgB,CAACI,cAAeX,EAAMG,QAASH,EAAMd,YAAW,GAGjE,CAACU,IAEG,YACLU,EACAT,UAAAA,EAEJ"}