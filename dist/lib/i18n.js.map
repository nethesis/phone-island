{"version":3,"file":"i18n.js","sources":["../../src/lib/i18n.ts"],"sourcesContent":["import i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport en from '../../public/locales/en/translation.json'\nimport it from '../../public/locales/it/translation.json'\n\nlet isInitialized = false\n\nexport const initI18n = () => {\n  if (isInitialized) {\n    return Promise.resolve()\n  }\n\n  const i18nConfig = {\n    resources: {\n      en: { translations: en },\n      it: { translations: it }\n    },\n    fallbackLng: 'en',\n    ns: ['translations'],\n    defaultNS: 'translations',\n    interpolation: {\n      escapeValue: false\n    },\n    detection: {\n      order: ['navigator']\n    },\n    react: {\n      useSuspense: false\n    },\n    supportedLngs: ['en', 'it']\n  }\n\n  isInitialized = true\n  return i18next\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init(i18nConfig)\n}\n\nexport default i18next.createInstance()\n"],"names":["isInitialized","i18next","createInstance","Promise","resolve","i18nConfig","resources","en","translations","it","fallbackLng","ns","defaultNS","interpolation","escapeValue","detection","order","react","useSuspense","supportedLngs","use","LanguageDetector","initReactI18next","init"],"mappings":"20BAMIA,GAAgB,EAkCLC,EAAO,QAACC,kCAhCC,WACtB,GAAIF,EACF,OAAOG,QAAQC,UAGjB,IAAMC,EAAa,CACjBC,UAAW,CACTC,GAAI,CAAEC,aAAcD,WACpBE,GAAI,CAAED,aAAcC,YAEtBC,YAAa,KACbC,GAAI,CAAC,gBACLC,UAAW,eACXC,cAAe,CACbC,aAAa,GAEfC,UAAW,CACTC,MAAO,CAAC,cAEVC,MAAO,CACLC,aAAa,GAEfC,cAAe,CAAC,KAAM,OAIxB,OADAnB,GAAgB,EACTC,EAAO,QACXmB,IAAIC,EAAAA,SACJD,IAAIE,EAAAA,kBACJC,KAAKlB,EACV"}