{"version":3,"file":"trunk.js","sources":["../../../src/lib/phone/trunk.ts"],"sourcesContent":["// Copyright (C) 2024 Nethesis S.r.l.\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport { store } from '../../store'\n\n/**\n * Checks if a number is from an external source (trunk) by verifying\n * if it's not an internal extension\n *\n * @param counterpartNum The number to check\n * @returns true if the call is from trunk (external), false if internal extension\n */\nexport function isFromTrunk(counterpartNum: string): boolean {\n  const { extensions } = store.getState().users\n\n  if (!extensions || !counterpartNum) {\n    return false\n  }\n\n  // Check if the counterpartNum exists as an extension\n  const isInternalExtension = Object.keys(extensions).includes(counterpartNum)\n\n  // If it's not an internal extension, it's from trunk (external)\n  return !isInternalExtension\n}\n"],"names":["counterpartNum","extensions","store","getState","users","Object","keys","includes"],"mappings":"8HAYM,SAAsBA,GAClB,IAAAC,EAAeC,EAAKA,MAACC,WAAWC,MAAKH,WAE7C,SAAKA,IAAeD,KAKQK,OAAOC,KAAKL,GAAYM,SAASP,EAI/D"}